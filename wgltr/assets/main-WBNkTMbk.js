(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&s(n)}).observe(document,{childList:!0,subtree:!0});function t(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(i){if(i.ep)return;i.ep=!0;const r=t(i);fetch(i.href,r)}})();const h={eventScroll:new Event("_scroll"),eventResize:new Event("_resize"),elements:[],bol:!0,RO:window.ResizeObserver,IO:window.IntersectionObserver,MO:window.MutationObserver,dpr:()=>window.devicePixelRatio||1,raf:window.requestAnimationFrame.bind(window),rafLoop:a=>{h.raf(e=>a(e)&&h.rafLoop(a))},q:a=>Array.from(document.querySelectorAll(a)),qe:(a,e)=>Array.from(a.querySelectorAll(e)),create:a=>document.createElement(a),clh:(a,...e)=>a.classList.contains(...e),cla:(a,...e)=>(a.classList.add(...e),a),clr:(a,...e)=>(a.classList.remove(...e),a),clc:(a,...e)=>(a.classList.toggle(...e),a),bcr:a=>{const e=a.getBoundingClientRect();return new DOMRect(e.left+scrollX,e.top+scrollY,e.width,e.height)},halfInt:a=>Math.round(a*2)/2,scrollBlock:()=>h.cla(document.body.parentNode,"blocked"),scrollUnblock:()=>h.clr(document.body.parentNode,"blocked"),ready(a){document.readyState!=="loading"?a():window.on("DOMContentLoaded",()=>{a()})},template(a){return h.q(`#template-${a}`)[0].innerHTML},debounceList:{},debounce(a,e,t=10){clearTimeout(this.debounceList[a]),this.debounceList[a]=setTimeout(e,t)}};h.RO&&h.RO.bind(window);h.IO&&h.IO.bind(window);h.MO&&h.MO.bind(window);h.IOVisible=h.IO?new h.IO(a=>a.forEach(e=>{if(e.isIntersecting){const t=e.target;t._iov.forEach(s=>s()),t._iov=[],h.IOVisible.unobserve(t)}}),{rootMargin:"-100px 0px -100px 0px"}):!1;h.addIOVisible=(a,e)=>{if(!h.IO){e();return}a._iov||(a._iov=[],h.IOVisible.observe(a)),a._iov.push(e)};document.on=window.on=Element.prototype.on=function(...a){return this.addEventListener(...a)};document.off=window.off=Element.prototype.off=function(...a){return this.removeEventListener(...a)};Element.prototype.textToClipboard=function(){const a=this.innerText.replace(/\.\.\./g,"");if(window.navigator.clipboard)window.navigator.clipboard.writeText(a);else{let e=h.create("span");e.innerText=a,e.style.position="absolute",document.body.append(e),window.getSelection().selectAllChildren(e),document.execCommand("copy"),e.remove()}};const zs={init(){this.el=h.q(".site-header")[0],this.mobEl=h.q(".site-header")[1],this.mob=h.q(".site-mob-header")[0],this.hamburger=h.q("#nav-hamburger")[0],window.on("_scroll",this.refresh.bind(this)),this.refresh(),setTimeout(()=>h.clr(this.el,"notrans")),h.qe(this.el,"[data-mob-header]").forEach(a=>{this.mob.appendChild(h.clr(a.cloneNode(!0),"hidden-md","fmend"))}),this.mobActive=!1,this.hamburger.parentNode.on("click",a=>(a.preventDefault(),this.toggleMobMenu(!this.mobActive),!1)),h.qe(this.mob,".site-main-nav a").forEach(a=>{a.on("click",()=>this.toggleMobMenu(!1))}),h.q("[data-dark-toggle]").forEach(a=>{a.on("change",()=>h.clc(document.body,"dark"))}),h.q(".site-main-nav a").forEach(a=>a.on("click",e=>{const t=a.getAttribute("href");t[0]==="#"&&(e.preventDefault(),window.scrollTo({top:h.bcr(h.q(t)[0]).top,behavior:"smooth"}))}))},refresh(){h.clc(this.el,"site-header-sticky",window.scrollY>100),h.clc(this.mobEl,"site-header-sticky",window.scrollY>100)},toggleMobMenu(a){this.mobActive=a,h.clc(this.hamburger,"active",a),h.clc(this.mob,"active",a),a?h.scrollBlock():h.scrollUnblock()}};class Os{constructor(e,t){t=t.split(",");const s=t[0],i=parseInt(t[1])||0;h.addIOVisible(e,()=>{setTimeout(()=>h.cla(e,`anim-${s}`),i)})}}h.elements.push([Os,"data-anim"]);let Oe;const kt={linear:a=>a,in:a=>a*a,out:a=>-(a*(a-2)),inOut:a=>a<.5?2*a*a:-2*a*a+4*a-1,cubicIn:a=>a*a*a,cubicOut:a=>(Oe=a-1,Oe*Oe*Oe+1),cubicInOut:a=>a<.5?4*a*a*a:(Oe=2*a-2,.5*Oe*Oe*Oe+1)};class Ns{constructor(e,t){e.ilvCounter=this,this.el=e,this.value=h.qe(e,".value")[0];const[s,i,r]=t.split(",").map(l=>parseInt(l));this.to=i;let n=0,o=0;h.addIOVisible(e,()=>{setTimeout(()=>h.rafLoop(l=>{n+=l/2e5,n>=1&&(n=1);const p=Math.round(s+kt.inOut(n)*(this.to-s));return p!==o&&(o=p,this.value.innerHTML=p),n<1}),r)})}}h.elements.push([Ns,"data-counter"]);class cs{constructor(e,t){e.ilvCode=this,this.el=e,this.title=h.qe(e,".code-title")[0],this.code=h.qe(e,".code")[0];const[s,i,r]=t.split(",");if(this.formated=!!r,s&&this.update(h.template(`code-${s}`)),this.title){const n=h.template("code-icon-copy");if(this.title.innerHTML+=n,i){const l=h.template("code-icon-format");this.title.innerHTML+=l}const o=h.qe(this.title,".copy-icon-wrap")[0];if(o.on("click",()=>{h.qe(e,".code")[0].textToClipboard(),h.cla(o,"icon-wrap-active"),setTimeout(()=>h.clr(o,"icon-wrap-active"),1e3)}),i){const l=h.qe(this.title,".format-icon-wrap")[0];l.on("click",()=>{h.clc(h.qe(l,".icon")[0],"icon-on",this.formated=!this.formated),this.update()})}}}update(e){e=e?this.html=e:this.html,this.formated||(e=e.replace(/data-wgltr="([^]+?)"/gm,(t,s)=>`data-wgltr="${s.replace(/\n|(\s\s)/gm,"").replace(/([,:])\s/gm,"$1")}"`)),e=e.replace(/^\n/,"").replace(/\n$/,"").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/([\w-]+?)=(["{])([^]*?)(["}])/gm,(t,s,i,r,n)=>(r=r.replace(/\n(.*?)($|\n)/gm,'<span class="code-line">$1</span>'),`<span class="code-attr">${s}</span><span class="code-equal">=</span><span class="code-str">${i+r+n}</span>`)).replace(/(\&lt;\/?\w+)/g,'<span class="code-tag">$1</span>').replace(/(&gt;)/g,'<span class="code-tag">$1</span>').replace(/import (.+?) from (.+?);/g,'<span class="code-var">import</span> $1 <span class="code-var">from</span> <span class="code-str">$2</span>;').replace(/([^\s\."=]+?)\(/g,'<span class="code-know">$1</span>(').replace(/\.([A-z-]+?)\(/g,'.<span class="code-know">$1</span>(').replace(/(['`].*?['`])/g,'<span class="code-str">$1</span>').replace(/(\$\{.*?\})/g,'<span class="code-str-in">$1</span>').replace(/([\d]+?(\.\d*)?)/g,'<span class="code-num">$1</span>').replace(/(\.\.\.)/g,'<span class="code-num">$1</span>').replace(/(const|var|let|return|new|function|export|default)\s/g,'<span class="code-var">$1</span> ').replace(/(true|false)/g,'<span class="code-var">$1</span>').replace(/(document|window)/g,'<span class="code-reserved">$1</span>').replace(/^(.*?)($|\n)/gm,(t,s)=>s==='<span class="code-num">...</span>'?'<span class="code-line code-line-empty">...</span><span class="code-line-reset"></span>':`<span class="code-line">${s}</span>`),this.code.innerHTML=e}setHTMLOptions(e){let t="";const s=Object.entries(e);s.forEach(([i,r],n)=>{r=this.processValue(r,!1,0,!0),t+=`
  ${i}: ${r}`,n<s.length-1&&(t+=",")}),this.update(`data-wgltr="${t}"`)}setJSOptions(e,t=!0,s=!0){let i="";Object.entries(e).forEach(([r,n])=>{n=this.processValue(n,s),i+=`
`,t&&(i+="  "),i+=`${r}: ${n},`}),this.update(t?`{${i}
}`:i)}processValue(e,t,s=0,i=!1){return typeof e=="string"?i&&e.search(" ")===-1?e:`'${e}'`:(Array.isArray(e)&&(e=e.reduce((r,n,o)=>(s===0&&t&&(r+=`
    `),r+=`${this.processValue(n,t,s+1,i)}`,o<e.length-1?r+=", ":i||(r+=s===0&&t?",":""),r),""),e=`${e}${s===0&&t?`
  `:""}`,e=`[${e}]`),e)}}h.elements.push([cs,"data-code"]);class Is{constructor(e,t){e.ilvTabs=this,this.cur=0,this.el=e,this.value=t,this.contents=h.q(`.${t}`),this.wrap=h.qe(this.el,".tabs-wrap")[0]||this.el,this.left=h.qe(this.el,".tabs-left")[0],this.right=h.qe(this.el,".tabs-right")[0],this.line=h.qe(this.el,".tabs-line")[0],this.titles=h.qe(this.el,".tabs-title"),e.ilvTabs=this,this.titles.forEach((s,i)=>{s.onclick=()=>{this.showContent(i)}}),this.left&&this.left.on("click",()=>{this.showContent(this.getIndex(-1))}),this.right&&this.right.on("click",()=>{this.showContent(this.getIndex(1))}),this.refreshLine(),window.on("_resize",()=>this.resize()),h.MO&&new h.MO(()=>this.resize()).observe(this.el,{characterData:!0,childList:!0,subtree:!0}),this.el.on("DOMChanged",()=>this.resize())}resize(){this.refreshLine()}getIndex(e){let t=this.cur+e;return t=t%this.titles.length,t<0&&(t+=this.titles.length),this.cur=t,this.titles[t].classList.contains("hidden")?this.getIndex(Math.sign(e)):this.cur}refreshLine(){const e=this.titles[this.cur],t=h.bcr(e),s=h.bcr(this.wrap),i=t.x+this.wrap.scrollLeft-s.x;this.line.style.width=`${t.width}px`,this.line.style.transform=`translateX(${i}px)`}showContent(e){const{wrap:t}=this;e=e%this.titles.length,e<0&&(e+=this.titles.length);const s=this.titles[e];this.cur=e,this.refreshLine();const i=window.scrollX,r=window.scrollY;this.titles.forEach(o=>h.clr(o,"tabs-selected")),this.contents.forEach(o=>h.cla(o,"hidden")),h.q(`[class*=${this.value}-]`).forEach(o=>h.cla(o,"hidden")),h.q(`.${this.value}-${e}`).forEach(o=>h.clr(o,"hidden"));const n=s.offsetLeft+s.offsetWidth/2-t.offsetWidth/2;t.scrollTo(n,0,{behavior:"smooth"}),h.cla(s,"tabs-selected"),this.contents[e]&&h.clr(this.contents[e],"hidden"),this.changeCallback&&this.changeCallback(e),window.scrollTo(i,r)}}h.elements.push([Is,"data-tabs"]);class Ls{constructor(e){this.el=e,e.ilvPopup=this,this.content=h.qe(e,".popup-content")[0],[e,...h.qe(e,"[data-popup-close]")].forEach(t=>{t.on("click",s=>{s.target===s.currentTarget&&(h.clr(this.el,"popup-active"),h.scrollUnblock())}),t.on("mouseover",s=>{s.stopPropagation(),s.target===s.currentTarget&&h.cla(this.el,"hovered")}),t.on("mouseout",s=>{s.stopPropagation(),s.target===s.currentTarget&&h.clr(this.el,"hovered")})})}open(e){this.content.innerHTML=e,h.cla(this.el,"popup-active"),h.scrollBlock()}}h.elements.push([Ls,"data-popup"]);const ht={effects:{wobbling:"Wobbling",waves:"Waves",longWaves:"Long Waves",verticalWaves:"Vertical Waves",noise:"Noise",noiseColor:"Noise Color",smallNoiseColor:"Small Noise Color",verticalNoiseColor:"Vertical Noise Color",alphaNoiseColor:"Noise Color 2",noiseAlpha:"Noise Alpha",glitch:"Glitch",smoothGlitch:"Smooth Glitch",colorGlitch:"Color Glitch",flame:"Flame",colors:"Colors",translate:"Translate",scale:"Scale",rotate:"Rotate"},staticEffects:{distortion:"Distortion",waves:"Waves",noise:"Noise distortion",alphaNoise:"Alpha noise",stretchedNoise:"Stretched noise",strokeNoise:"Stroke noise",glitch:"Glitch",smallGlitch:"Small glitch"},decors:{linearGrad:"Linear Gradient",stroke:"Stroke",filledStroke:"Filled Stroke",lines:"Lines",zigzag:"ZigZag",obliqueLines:"Oblique Lines",gradLines:"Gradient Lines",strokedLines:"Stroked Lines",noiseLines:"Distorted Lines",hardNoiseLines:"Hard Distorted Lines",dots:"Dots",circles:"Circles"},backgrounds:{linearGrad:"Linear Gradient",radialGrad:"Radial Gradient",lines:"Lines",gradLines:"Gradient Lines",noiseLines:"Distorted Lines",dots:"Distorted Dots"},appearEffects:{alpha:"Alpha",color:"Color",alphaNoise:"Alpha Noise",colorNoise:"Color Noise",noise:"Noise",wobbling:"Wobbling",glitch:"Glitch",colorGlitch:"Color Glitch",roll:"Roll",noiseFromTop:"Noise from top",noiseWaves:"Noise waves"},mouseEffects:{wobbling:"Wobbling",waves:"Waves",follow:"Follow",bubble:"Bubble",alpha:"Alpha",glitch:"Glitch",colorGlitch:"Color Glitch",color:"Color",noise:"Noise",noiseColor:"Color Noise",noiseAlpha:"Alpha Noise",translate:"Translate",scale:"Scale",rotate:"Rotate"},scrollEffects:{wobbling:"Wobbling",waves:"Waves",alpha:"Alpha",glitch:"Glitch",colorGlitch:"Color Glitch",color:"Color",noise:"Noise",noiseColor:"Color Noise",noiseAlpha:"Alpha Noise",translate:"Translate",scale:"Scale",rotate:"Rotate"}};ht.disappearEffects=ht.appearEffects;const Et=(a,e,t,s)=>{const i=Gs[e];return a.map((r,n)=>t.includes(n-i)?h.halfInt(r*s):r)},Gs={effects:7,staticEffects:1,appearEffects:2,disappearEffects:2,changeAppearEffects:2,scrollEffects:2,decors:0,backgrounds:0},Xe={fdistortion:[0,1,2,3],fglitch:[0,2],cglitch:[2,8],falpha:[],falphaNoise:[1,2,3,4],fcolorNoise:[1,2,3,4],fnoiseDistortion:[0,1,2,3,4,5],vtranslate:[0,1,2]},Ne=[["canvas","Canvas"],["glyph","Glyph"],["word","Word"],["line","Line"],["wrap","Wrap"]],C={translate:(a,e,t)=>[{pack:!0,titles:["Length","X","Y","Z"],inputs:["number","number","number"],value:[a,e,t],units:["px","px","px"],min:[-100,-100,-100],max:[100,100,100],step:[5,5,1]}],scale:(a,e)=>[{titles:["Scale X","Scale Y"],inputs:["number","number"],percent:[!0,!0],value:[a,e],units:["%","%"],min:[-100,-100],max:[300,300],step:[1,1]}],rotate:(a,e,t)=>[{pack:!0,titles:["Angle","X","Y","Z"],inputs:["number","number","number"],value:[0,0,90],units:["°","°","°"],min:[0,0,0],max:[360,360,360],step:[5,5,5]}],distortion:(a,e,t,s,i,r,n,o)=>[{titles:["Length X","Length Y"],inputs:["number","number"],value:[a,e],units:["px","px"],min:[2,2],max:[200,200],step:[1,1]},{titles:["Amplitude X","Amplitude Y"],inputs:["number","number"],value:[t,s],units:["px","px"],min:[0,0],max:[15,15],step:[.1,.1]},{titles:["Offset X","Offset Y"],inputs:["number","number"],value:[i,r],percent:[!0,!0],units:["%","%"],min:[-200,-200],max:[200,200],step:[1,1]},{titles:["Speed X","Speed Y"],inputs:["number","number"],value:[n,o],units:["s","s"],min:[0,0],max:[10,10],step:[.1,.1]}],glitch:(a,e,t,s,i,r)=>[{titles:["Distance","Sharpness"],inputs:["number","checkbox"],value:[a,!0],percent:[!1,!1],units:["px",""],min:[1,1],max:[20,100],step:[1,1]},{titles:["Length","Angle"],inputs:["number","number"],value:[t,s],units:["px","°"],min:[1,0],max:[60,360],step:[1,1]},{titles:["Speed","Density"],inputs:["number","number"],value:[i,r],percent:[!1,!0],units:["s","%"],min:[.01,10],max:[1,100],step:[.01,1]}],cglitch:(a,e,t,s,i,r,n,o,l)=>[{titles:["Color 1","Color 2"],inputs:["color","color"],value:[a,e],percent:[!0,!0],min:[0,0],max:[100,100],step:[1,1]},{titles:["Distance","Angle"],inputs:["number","number"],value:[t,s],units:["px","°"],min:[1,0],max:[40,360],step:[1,1]},{titles:["Combination","Alpha Strength"],inputs:["checkbox","number"],value:[i,r],percent:[!1,!0],units:["","%"],min:[0,0],max:[1,200],step:[1,1]},{titles:["Shake Speed","Shake Distance"],inputs:["number","number"],value:[n,o],percent:[!1,!0],units:["s","%"],min:[.01,0],max:[1,200],step:[.01,1]},{titles:["Shake Scale","empty"],inputs:["number"],value:[l],units:["px"],min:[0],max:[50],step:[1]}],alpha:a=>[{titles:["Alpha","empty"],inputs:["number"],value:[a],percent:[!0],units:["%"],min:[0],max:[100],step:[1]}],alphaNoise:(a,e,t,s,i)=>[{titles:["Alpha","empty"],inputs:["number"],percent:[!0],value:[a],units:["%"],min:[0],max:[100],step:[1]},{titles:["Move X","Move Y"],inputs:["number","number"],value:[e,t],units:["px","px"],min:[-200,-200],max:[200,200],step:[5,5]},{titles:["Scale X","Scale Y"],inputs:["number","number"],value:[s,i],units:["px","px"],min:[1,1],max:[20,20],step:[.5,.5]}],uvNoise:(a,e,t,s,i,r)=>[{titles:["Strength X","Strength Y"],inputs:["number","number"],value:[a,e],percent:[!1,!1],units:["px","px"],min:[0,0],max:[30,30],step:[.5,.5]},{titles:["Move X","Move Y"],inputs:["number","number"],value:[t,s],units:["px","px"],min:[0,0],max:[50,50],step:[1,1]},{titles:["Scale X","Scale Y"],inputs:["number","number"],value:[i,r],units:["px","px"],min:[1,1],max:[20,20],step:[.5,.5]}],slide:a=>[{titles:["Angle","empty"],inputs:["number"],percent:[!1],value:[a],units:["°"],min:[0],max:[360],step:[1]}],color:a=>[{titles:["Color","empty"],inputs:["color"],value:[a],percent:[!0],min:[0],max:[100],step:[1]}],colorNoise:(a,e,t,s,i)=>[{titles:["Color","empty"],inputs:["color"],value:[a],percent:[!0],min:[0],max:[100],step:[1]},{titles:["Move X","Move Y"],inputs:["number","number"],value:[e,t],units:["px","px"],min:[-200,-200],max:[200,200],step:[5,5]},{titles:["Scale X","Scale Y"],inputs:["number","number"],value:[s,i],units:["px","px"],min:[1,1],max:[20,20],step:[.5,.5]}],bubble:(a,e)=>[{titles:["Length","Strength"],inputs:["number","number"],value:[a,e],percent:[!1,!0],units:["px","%"],min:[5,-100],max:[500,200],step:[5,1]}],follow:(a,e,t,s,i)=>[{titles:["Size","empty"],inputs:["select"],value:[a],values:[Ne]},{titles:["Distance X","Distance Y"],inputs:["number","number"],value:[e,t],units:["px","px"],min:[-100,-100],max:[100,100],step:[1,1]},{titles:["Transition X","Transition Y"],description:["Percentage of the distance at which the specified block smoothly begins to follow the cursor"],inputs:["number","number"],value:[s,i],percent:[!0,!0],units:["%","%"],min:[0,0],max:[200,200],step:[1,1]}]},v={translate:{title:"Translate",description:"Moving from the specified position to original"},scale:{title:"Scale",description:"Transition from the specified scale to original"},rotate:{title:"Rotate",description:"Transition from the specified rotation to original"},distortion:{title:"Distortion",description:"Sine and cosine distortion"},glitch:{title:"Glitch",description:"Shift areas at the specified angle and speed"},cglitch:{title:"Color Glitch",description:"Displacement with the specified colors"},alpha:{title:"Alpha",description:"Transition from the specified transparency to original"},alphaNoise:{title:"Alpha by Noise",description:"Transparency transition using noise"},uvNoise:{title:"Noise distortion",description:"Distortion using noise"},slide:{title:"Slide",description:"Clipping a section at a specified angle"},color:{title:"Color",description:"Transition from color to original color"},colorNoise:{title:"Color by Noise",description:"Color transition using noise"},bubble:{title:"Bubble",description:"Zoom text by mouse coordinates as a bubble"},follow:{title:"Follow",description:"Following the specified block with the mouse coordinates if the coordinates are near this block"},wobbling:{title:"Wobbling",description:"Wobbling distortion"},waves:{title:"Waves",description:"Waves distortion"}},Ut=[["linear","linear"],["inQuad","inQuad"],["outQuad","outQuad"],["inOutQuad","inOutQuad"],["inCubic","inCubic"],["outCubic","outCubic"],["inOutCubic","inOutCubic"],["inQuart","inQuart"],["outQuart","outQuart"],["inOutQuart","inOutQuart"],["inExpo","inExpo"],["outExpo","outExpo"],["inOutExpo","inOutExpo"],["inSine","inSine"],["outSine","outSine"],["inOutSine","inOutSine"],["inCirc","inCirc"],["outCirc","outCirc"],["inOutCirc","inOutCirc"]],Fs=[{title:"Enable",description:"Enable the animated appearance of text when the text is visible on the screen",property:"appear",type:"checkbox",value:!h.bol},{title:"Speed",description:"Time of appearance of each symbol or specified number in the count option",property:"appearSpeed",type:"range",unit:"ms",seconds:!0,value:.5,range:[10,2e3,10]},{title:"Delay",description:"Delay as a percentage of the speed of each item",property:"appearDelay",percent:!0,type:"range",unit:"%",value:.5,range:[0,100,5]},{title:"Async Delay",description:"Additional random delay for each item as a percentage of the appearance speed",property:"appearAsync",percent:!0,type:"range",unit:"%",value:0,range:[-200,200,5],advanced:!0},{title:"Count",description:"The number of characters that will have the same appearance start time",property:"appearCount",type:"range",unit:"",value:1,range:[-2,10,1],rangeValues:[["-2","all","All"],["-1","line","Line"],["0","word","Word"]]},{title:"Reverse",description:"Line-by-line reverse order of appearance. When RTL text is used, the order will be from left to right",property:"appearReverse",type:"checkbox",value:!h.bol},{title:"Random",description:"Random order of appearance",property:"appearRandom",type:"checkbox",value:!h.bol},{title:"Timing Function",description:"Time function for the appearance time of all text",property:"appearFunction",type:"select",value:"inOutSine",select:Ut,advanced:!0},{subtitle:"Part",title:"Timing Function",description:"Time function for the appearance time of each character",property:"appearPartFunction",type:"select",value:"inOutSine",select:Ut,advanced:!0}],Bs=[{title:"Speed",property:"disappearSpeed",description:"Time of disappearance of each symbol or specified number in the count option",type:"range",unit:"ms",seconds:!0,value:-.01,range:[-10,2e3,10],rangeValues:[["-10","inherit","Inherit"]]},{title:"Delay",description:"Delay as a percentage of the speed of each character or specified number in the count option",property:"disappearDelay",percent:!0,type:"range",unit:"%",value:-.05,range:[-5,100,5],rangeValues:[["-5","inherit","Inherit"]]},{title:"Count",property:"disappearCount",description:"The number of characters that will have the same disappearance start time",type:"range",unit:"",value:-3,range:[-3,10,1],rangeValues:[["-3","inherit","Inherit"],["-2","all","All"],["-1","line","Line"],["0","word","Word"]]},{title:"Reverse",property:"disappearReverse",description:"Line-by-line reverse order of disappearance. When RTL text is used, the order will be from left to right",type:"select",value:"inherit",select:[["inherit","Inherit"],["true","Yes"],["false","No"]]},{title:"Random",property:"disappearRandom",description:"Random order of disappearance",type:"select",value:"inherit",select:[["inherit","Inherit"],["true","Yes"],["false","No"]]}],Ms=[{title:"Stroke",property:"stroke",type:"select",select:[["false","None"],["full","Full"],["in","Cut In"],["out","Cut Out"]],value:"false"},{subtitle:"Stroke",title:"Width",property:"strokeWidth",depend:[["stroke",1,"false"]],dependTitle:"Only when the stroke option is enabled",type:"range",unit:"px",value:2,range:[1,20,.5]},{subtitle:"Stroke",title:"Blur",property:"strokeBlur",depend:[["stroke",1,"false"]],dependTitle:"Only when the stroke option is enabled",type:"range",value:0,unit:"px",range:[0,20,.5]},{subtitle:"Decoration",title:"Stroke",description:"Cut the text stroke out of the decorations",property:"decorsStroke",type:"select",value:!h.bol,select:[["false","None"],["all","All"],["in","Decorations In"],["out","Decorations Out"]]},{subtitle:"Decoration Stroke",title:"Width",property:"decorsStrokeWidth",depend:[["decorsStroke",1,!h.bol]],dependTitle:"Not enabled",type:"range",unit:"px",value:2,range:[1,20,.5]},{subtitle:"Decoration Stroke",title:"Blur",property:"decorsStrokeBlur",depend:[["decorsStroke",1,!h.bol]],dependTitle:"Not enabled",type:"range",value:0,unit:"px",range:[0,20,.5]}],qs=[{subtitle:"Texture",title:"Split",description:"Drawing glyphs on texture, one character at a time or word by word. If word by word, then word will be drawn as one glyph and options with effects will be applied as to one glyph",property:"split",type:"select",value:"letters",select:[["words","Words"],["letters","Letters"]]},{title:"Round Position",description:"Rounding pixel fractions for character positions",property:"roundPosition",type:"checkbox",value:!!h.bol},{title:"Scale font size",description:"Initial font size for the effects, so that when you change the font size, the effect values are also scaled and the text will look the same.",property:"scaleFontSize",type:"range",unit:"px",value:0,range:[0,160,1],rangeValues:[["0","auto","Auto"],["1","false","False"]]},{title:"Field of View",description:"Field of view for all text. Affects effects when using rotate and translate with z coordinate",property:"fov",type:"range",unit:"",value:40,range:[1,160,1]}],ie=(a,e,t,s,i,r,n)=>[{titles:["Time","Dur","Trans"],inputs:["number","number","number"],value:[a,e,t],percent:[!1,!0,!0],units:["s","%","%"],min:[.05,0,0],max:[10,100,50],step:[.05,1,1],basic:!0},{titles:["Time<br>size","Time<br>offset"],inputs:["select","number"],value:[s,i],values:[Ne],percent:[!1,!0],units:["","%"],min:[0,0],max:[100,100],step:[1,1],basic:!0},{titles:["Min<br>Strength","Max<br>Strength"],inputs:["number","number"],value:[r,n],percent:[!0,!0],units:["%","%"],min:[0,0],max:[100,100],step:[1,1],basic:!0}],be=(a,e,t,s=0)=>[{titles:["Time","Duration"],inputs:["number","number"],value:[a,e],percent:[!1,!0],units:["s","%"],min:[1,1],max:[10,100],step:[.1,1],basic:!0},{titles:["Time size","Time offset"],inputs:["select","number"],value:[t,s],values:[Ne],percent:[!1,!0],units:["","%"],min:[0,0],max:[1,100],step:[1,1],basic:!0}],ee={wobbling:{...v.wobbling,fields:[{titles:["Strength","Speed"],inputs:["number","number"],value:[100,100],percent:[!0,!0],units:["%","%"],min:[1,1],max:[200,200],step:[1,1]}]},waves:{...v.waves,fields:[{titles:["Strength","Length"],inputs:["number","number"],value:[100,100],percent:[!0,!0],units:["%","%"],min:[1,0],max:[200,200],step:[1,1]},{titles:["Speed","empty"],inputs:["number"],value:[100],percent:[!0],units:["%"],min:[1],max:[200],step:[1]}]},verticalWaves:{title:"Vertical Waves",description:"Vertical waves distortion",fields:[{titles:["Strength","Length"],inputs:["number","number"],value:[100,100],percent:[!0,!0],units:["%","%"],min:[1,0],max:[200,200],step:[1,1]},{titles:["Speed","Offset"],inputs:["number","number"],value:[100,0],percent:[!0,!0],units:["%","%"],min:[1,0],max:[200,100],step:[1,1]}]},noise:{title:"Noise",description:"Noise distortion",fields:[{titles:["Strength","Speed"],inputs:["number","number"],value:[100,100],percent:[!0,!0],units:["%","%"],min:[1,1],max:[200,200],step:[1,1]}]},colorNoise:{title:"Noise color",description:"Color by Noise",fields:[...be(5,100,"word"),{titles:["Color","Strength"],inputs:["color","number"],value:["#ff0000ff",35],units:["","%"],percent:[!1,!0],min:[0,1],max:[100,100],step:[1,1]},{titles:["Move X","Move Y"],inputs:["number","number"],value:[100,0],percent:[!0,!0],units:["%","%"],min:[-100,-100],max:[100,100],step:[1,1]},{titles:["Scale X","Scale Y"],inputs:["number","number"],value:[100,50],percent:[!0,!0],units:["%","%"],min:[0,0],max:[200,200],step:[1,1]}]},alphaNoise:{title:"Noise alpha",description:"Alpha by Noise",fields:[...be(5,100,"word"),{titles:["Alpha","Strength"],inputs:["number","number"],value:[100,35],units:["%","%"],percent:[!0,!0],min:[1,1],max:[100,100],step:[1,1]},{titles:["Move X","Move Y"],inputs:["number","number"],value:[100,0],percent:[!0,!0],units:["%","%"],min:[-100,-100],max:[100,100],step:[1,1]},{titles:["Scale X","Scale Y"],inputs:["number","number"],value:[100,50],percent:[!0,!0],units:["%","%"],min:[0,0],max:[200,200],step:[1,1]}]},alpha:{title:"Alpha",description:"Smooth alpha",fields:[...be(5,40,"glyph"),{titles:["Strength","empty"],inputs:["number"],value:[100],percent:[!0],units:["%"],min:[0],max:[100],step:[1]}]},color:{title:"Color",description:"Smooth color",fields:[...be(5,40,"glyph"),{titles:["Strength","Color"],inputs:["number","color"],value:[80,"#0088ffff"],percent:[!0,!1],units:["%",""],min:[0],max:[100],step:[1]}]},glitch:{title:"Glitch",description:"Displacement glitch",fields:[...be(5,40,"word"),{titles:["Strength","Speed"],inputs:["number","number"],value:[100,100],percent:[!0,!0],units:["%","%"],min:[1,1],max:[200,200],step:[1,1]},{titles:["Angle","empty"],inputs:["number"],value:[90],units:["°"],min:[0],max:[360],step:[1]}]},smoothGlitch:{title:"Smooth Glitch",description:"Smooth displacement glitch",fields:[...be(5,40,"word"),{titles:["Strength","Speed"],inputs:["number","number"],value:[100,100],percent:[!0,!0],units:["%","%"],min:[1,1],max:[200,200],step:[1,1]},{titles:["Angle","empty"],inputs:["number"],value:[145],units:["°"],min:[0],max:[360],step:[1]}]},colorGlitch:{title:"Color Glitch",description:"Color glitch",fields:[...be(5,40,"word"),{titles:["Color 1","Color 2"],inputs:["color","color"],value:["#ff0000bb","#00aaffbb"],percent:[!1,!1],min:[0,0],max:[100,100],step:[1,1]},{titles:["Strength","Speed"],inputs:["number","number"],value:[100,100],percent:[!0,!0],units:["%","%"],min:[1,1],max:[200,200],step:[1,1]}]},flame:{title:"Flame",description:"Color flame",fields:[...be(5,100,"word"),{titles:["Color","Length"],inputs:["color","number"],value:["#ff0000ff",100],units:["","%"],percent:[!1,!0],min:[0,1],max:[100,200],step:[1,1]},{titles:["Strength","Speed"],inputs:["number","number"],value:[100,100],percent:[!0,!0],units:["%","%"],min:[1,1],max:[200,200],step:[1,1]},{titles:["Angle"],inputs:["number"],value:[90],units:["°"],min:[0],max:[360],step:[1]}]},colors:{title:"Colors",description:"Color shifting",fields:[{titles:["Color 1","Color 2"],inputs:["color","color"],value:["#ff000055","#00aaff55"],percent:[!1,!1],min:[0,0],max:[100,100],step:[1,1]},{titles:["Color 3","Color 4"],inputs:["color","color"],value:["#ffff0055","#00ff7755"],percent:[!1,!1],min:[0,0],max:[100,100],step:[1,1]},{titles:["Strength","Speed"],inputs:["number","number"],value:[100,100],percent:[!0,!0],units:["%","%"],min:[1,1],max:[200,200],step:[1,1]}]},translate:{...v.translate,fields:[...be(3,20,"glyph"),{pack:!0,titles:["Length","X","Y","Z"],inputs:["number","number","number"],value:[40,0,0],percent:[!0,!0,!0],units:["%","%","%"],min:[-100,-100,-100],max:[100,100,100],step:[1,1,1]}]},scale:{...v.scale,fields:[...be(3,20,"glyph"),...C.scale(20,20)]},rotate:{...v.rotate,fields:[...be(3,20,"glyph"),...C.rotate(20,0,0)]}},Ws={fdistortion:{...v.distortion,fields:[...ie(5,100,0,"glyph",0,0,100),...C.distortion(50,50,2,2,0,0,2,2)]},fglitch:{...v.glitch,fields:[...ie(2,50,50,"glyph",95,0,100),...C.glitch(10,100,20,90,.01,50)]},cglitch:{...v.cglitch,fields:[...ie(2,100,0,"glyph",0,0,100),...C.cglitch("#ff0000ff","#00aaffff",5,90,!1,80,.01,200,30)]},falpha:{...v.alpha,fields:[...ie(2,50,50,"glyph",95,0,100),...C.alpha(100)]},falphaNoise:{...v.alphaNoise,fields:[...ie(2,50,50,"glyph",95,0,100),...C.alphaNoise(100,0,0,5,5)]},fnoiseDistortion:{...v.uvNoise,fields:[...ie(5,100,0,"glyph",0,0,100),...C.uvNoise(2,2,0,20,5,5)]},vtranslate:{...v.translate,fields:[...ie(2,50,50,"glyph",95,0,100),...C.translate(20,0,0)]},vscale:{...v.scale,fields:[...ie(2,50,50,"glyph",95,0,100),...C.scale(150,150)]},vrotate:{...v.rotate,fields:[...ie(2,50,50,"glyph",95,0,100),...C.rotate(0,0,90)]},fslide:{...v.slide,fields:[...ie(2,50,50,"glyph",95,0,100),...C.slide(270)]},fcolor:{...v.color,fields:[...ie(2,50,50,"glyph",95,0,100),...C.color("#ff2200ff")]},fcolorNoise:{...v.colorNoise,fields:[...ie(2,50,50,"glyph",95,0,100),...C.colorNoise("#ff2200ff",0,0,5,5)]}},xe=a=>[{titles:["Strength","empty"],inputs:["number"],value:[a],percent:[!0],units:["%"],min:[0],max:[100],step:[1],basic:!0}],Vs={distortion:{title:"Distortion",description:"Sine distoirtion",fields:[...xe(100),{titles:["Length X","Length Y"],inputs:["number","number"],percent:[!0,!0],units:["%","%"],value:[100,100],min:[1,1],max:[200,200],step:[1,1]},{titles:["Amplitude X","Amplitude Y"],inputs:["number","number"],percent:[!0,!0],units:["%","%"],value:[100,100],min:[1,1],max:[200,200],step:[1,1]}]},waves:{...v.waves,fields:[...xe(100),{titles:["Length","empty"],inputs:["number"],value:[100],percent:[!0],units:["%"],min:[0],max:[200],step:[1],basic:!0}]},noise:{title:"Noise",description:"Noise distortion",fields:[...xe(70)]},strokeNoise:{title:"Stroke Noise",description:"Text stroke noise",fields:[...xe(70)]},alphaNoise:{title:"Alpha Noise",description:"Alapha noise",fields:[...xe(30),{titles:["Alpha","empty"],inputs:["number"],percent:[!0],value:[90],units:["%"],min:[0],max:[100],step:[1]},{titles:["Scale X","Scale Y"],inputs:["number","number"],percent:[!0,!0],value:[500,200],units:["%","%"],min:[10,10],max:[400,400],step:[1,1]}]},glitch:{title:"Glitch",description:"Displacement glitch",fields:[...xe(100),{titles:["Length","Angle"],inputs:["number","number"],value:[100,90],percent:[!0,!1],units:["%","°"],min:[1,0],max:[200,360],step:[1,1]}]}},Us={fdistortion:{...v.distortion,fields:[...xe(100),...C.distortion(0,10,0,.6,0,0,0,0)]},fglitch:{...v.glitch,fields:[...xe(50),...C.glitch(5,.01,2,90,.01,35)]},falpha:{...v.alpha,fields:[...xe(100),...C.alpha(50)]},falphaNoise:{...v.alphaNoise,fields:[...xe(25),...C.alphaNoise(100,0,0,2,2)]},fnoiseDistortion:{...v.uvNoise,fields:[...xe(50),...C.uvNoise(2,2,0,20,5,5)]}},U=(a,e,t=100)=>[{titles:["Mouse<br>Radius","Mouse<br>Strength"],inputs:["number","number"],value:[a,e],percent:[!1,!0],units:["px","%"],min:[0,0],max:[200,t],step:[1,1],basic:!0}],ps={fdistortion:{...v.distortion,fields:[...U(150,100),...C.distortion(50,50,2,2,0,0,2,2)]},fglitch:{...v.glitch,fields:[...U(150,100),...C.glitch(10,100,20,90,.01,50)]},cglitch:{...v.cglitch,fields:[...U(150,100),...C.cglitch("#ff0000ff","#00aaffff",5,90,!1,80,.01,200,30)]},falpha:{...v.alpha,fields:[...U(150,100),...C.alpha(100)]},falphaNoise:{...v.alphaNoise,fields:[...U(150,100),...C.alphaNoise(100,0,0,5,5)]},fnoiseDistortion:{...v.uvNoise,fields:[...U(150,50),...C.uvNoise(2,2,0,20,5,5)]},vtranslate:{...v.translate,fields:[...U(150,50),...C.translate(20,0,0)]},vscale:{...v.scale,fields:[...U(150,50),...C.scale(150,150)]},vrotate:{...v.rotate,fields:[...U(150,50),...C.rotate(0,0,90)]},fslide:{...v.slide,fields:[...U(150,50),...C.slide(270)]},fcolor:{...v.color,fields:[...U(150,50),...C.color("#ff2200ff")]},fcolorNoise:{...v.colorNoise,fields:[...U(150,50),...C.colorNoise("#ff2200ff",0,0,5,5)]},fbubble:{...v.bubble,fields:[...U(150,50)]},vfollow:{...v.follow,fields:[...C.follow("word",30,30,50,50)]}},Xs={follow:{title:"Follow",...v.follow,fields:[ps.vfollow.fields[0],{titles:["Distance","Transition"],inputs:["number","number"],value:[30,50],percent:[!1,!0],units:["px","%"],min:[-100,0],max:[100,200],step:[1,1]}]},bubble:{title:"Bubble",...v.bubble,fields:[...U(150,50)]},wobbling:{...v.wobbling,fields:[...U(150,100),ee.wobbling.fields[0]]},waves:{...v.waves,fields:[...U(150,100),ee.waves.fields[0],ee.waves.fields[1]]},glitch:{title:"Glitch",...v.glitch,fields:[...U(150,100),ee.glitch.fields[2],ee.glitch.fields[3]]},colorGlitch:{title:"Color Glitch",...v.cglitch,fields:[...U(150,100),ee.colorGlitch.fields[2],ee.colorGlitch.fields[3]]},alpha:{...v.alpha,fields:[...U(150,100),{titles:["Strength","empty"],inputs:["number"],value:[100],percent:[!0],units:["%"],min:[0],max:[200],step:[1]}]},color:{...v.color,fields:[...U(150,100,200),{titles:["Color","empty"],inputs:["color"],value:["#0088ffff"],percent:[!1],units:[""],min:[0],max:[100],step:[1]}]},noise:{title:"Noise",description:"Noise distortion",fields:[...U(150,100),{titles:["Strength","Speed"],inputs:["number","number"],value:[100,100],percent:[!0,!0],units:["%","%"],min:[1,1],max:[200,200],step:[1,1]}]},colorNoise:{title:"Noise color",description:"Color by Noise",fields:[...U(150,80),{titles:["Color","empty"],inputs:["color"],value:["#ff0000ff"],units:[""],percent:[!1],min:[0],max:[100],step:[1]},{titles:["Move X","Move Y"],inputs:["number","number"],value:[100,0],percent:[!0,!0],units:["%","%"],min:[-100,-100],max:[100,100],step:[1,1]},{titles:["Scale X","Scale Y"],inputs:["number","number"],value:[100,50],percent:[!0,!0],units:["%","%"],min:[0,0],max:[200,200],step:[1,1]}]},alphaNoise:{title:"Noise alpha",description:"Alpha by Noise",fields:[...U(150,70),{titles:["Alpha","empty"],inputs:["number"],value:[90],units:["%"],percent:[!0],min:[0],max:[100],step:[1]},{titles:["Move X","Move Y"],inputs:["number","number"],value:[100,0],percent:[!0,!0],units:["%","%"],min:[-100,-100],max:[100,100],step:[1,1]},{titles:["Scale X","Scale Y"],inputs:["number","number"],value:[100,50],percent:[!0,!0],units:["%","%"],min:[0,0],max:[200,200],step:[1,1]}]},translate:{...v.translate,fields:[...U(150,100),{pack:!0,titles:["Length","X","Y","Z"],inputs:["number","number","number"],value:[40,0,0],percent:[!0,!0,!0],units:["%","%","%"],min:[-100,-100,-100],max:[100,100,100],step:[1,1,1]}]},scale:{...v.scale,fields:[...U(150,100),...C.scale(20,20)]},rotate:{...v.rotate,fields:[...U(150,100),...C.rotate(20,0,0)]}},j=(a,e)=>[{titles:["Distance","Fading"],description:["Scroll distance for multiplying effect values"],inputs:["number","number"],value:[a,e],units:["px","s"],min:[1,.1],max:[100,5],step:[1,.1],basic:!0}],Ys={wobbling:{...v.wobbling,fields:[...j(40,.5),ee.wobbling.fields[0]]},waves:{...v.waves,fields:[...j(40,.5),ee.waves.fields[0],ee.waves.fields[1]]},glitch:{title:"Glitch",...v.glitch,fields:[...j(40,1),ee.glitch.fields[2],ee.glitch.fields[3]]},colorGlitch:{title:"Color Glitch",...v.cglitch,fields:[...j(40,1),ee.colorGlitch.fields[2],ee.colorGlitch.fields[3]]},alpha:{...v.alpha,fields:[...j(40,1),{titles:["Strength","empty"],inputs:["number"],value:[100],percent:[!0],units:["%"],min:[0],max:[100],step:[1]}]},color:{...v.color,fields:[...j(40,1),{titles:["Color","empty"],inputs:["color"],value:["#0088ffff"],percent:[!1],units:[""],min:[0],max:[100],step:[1]}]},noise:{title:"Noise",description:"Noise distortion",fields:[...j(40,1),{titles:["Strength","Speed"],inputs:["number","number"],value:[100,100],percent:[!0,!0],units:["%","%"],min:[1,1],max:[200,200],step:[1,1]}]},colorNoise:{title:"Noise color",description:"Color by Noise",fields:[...j(40,1),{titles:["Color","empty"],inputs:["color"],value:["#ff0000ff"],units:[""],percent:[!1],min:[0],max:[100],step:[1]},{titles:["Move X","Move Y"],inputs:["number","number"],value:[100,0],percent:[!0,!0],units:["%","%"],min:[-100,-100],max:[100,100],step:[1,1]},{titles:["Scale X","Scale Y"],inputs:["number","number"],value:[100,50],percent:[!0,!0],units:["%","%"],min:[0,0],max:[200,200],step:[1,1]}]},alphaNoise:{title:"Noise alpha",description:"Alpha by Noise",fields:[...j(40,1),{titles:["Alpha","empty"],inputs:["number"],value:[90],units:["%"],percent:[!0],min:[0],max:[100],step:[1]},{titles:["Move X","Move Y"],inputs:["number","number"],value:[100,0],percent:[!0,!0],units:["%","%"],min:[-100,-100],max:[100,100],step:[1,1]},{titles:["Scale X","Scale Y"],inputs:["number","number"],value:[100,50],percent:[!0,!0],units:["%","%"],min:[0,0],max:[200,200],step:[1,1]}]},translate:{...v.translate,fields:[...j(40,1),{pack:!0,titles:["Length","X","Y","Z"],inputs:["number","number","number"],value:[0,50,0],percent:[!0,!0,!0],units:["%","%","%"],min:[-100,-100,-100],max:[100,100,100],step:[1,1,1]}]},scale:{...v.scale,fields:[...j(40,1),...C.scale(20,20)]},rotate:{...v.rotate,fields:[...j(40,1),...C.rotate(20,0,0)]}},_s={fdistortion:{...v.distortion,fields:[...j(40,1),...C.distortion(0,200,0,50,0,0,2,2)]},fglitch:{...v.glitch,fields:[...j(40,1),...C.glitch(10,100,20,90,.01,50)]},cglitch:{...v.cglitch,fields:[...j(40,1),...C.cglitch("#ff0000ff","#00aaffff",5,90,!1,80,.01,200,30)]},falpha:{...v.alpha,fields:[...j(40,1),...C.alpha(100)]},falphaNoise:{...v.alphaNoise,fields:[...j(40,1),...C.alphaNoise(100,0,0,5,5)]},fnoiseDistortion:{...v.uvNoise,fields:[...j(40,1),...C.uvNoise(2,2,0,20,5,5)]},vtranslate:{...v.translate,fields:[...j(40,1),...C.translate(20,0,0)]},vscale:{...v.scale,fields:[...j(40,1),...C.scale(150,150)]},vrotate:{...v.rotate,fields:[...j(40,1),...C.rotate(0,0,90)]},fslide:{...v.slide,fields:[...j(40,1),...C.slide(270)]},fcolor:{...v.color,fields:[...j(40,1),...C.color("#ff2200ff")]},fcolorNoise:{...v.colorNoise,fields:[...j(40,1),...C.colorNoise("#ff2200ff",0,0,5,5)]}},Q=[{titles:["Time Start","Time End"],inputs:["number","number"],value:[0,100],percent:[!0,!0],units:["%","%"],min:[0,0],max:[100,100],step:[1,1],basic:!0}],Xt={falpha:{...v.alpha,fields:[...Q,...C.alpha(100)]},falphaNoise:{...v.alphaNoise,fields:[...Q,...C.alphaNoise(100,0,0,5,5)]},fcolorNoise:{...v.colorNoise,fields:[...Q,...C.colorNoise("#ff2200ff",0,0,5,5)]},fcolor:{...v.color,fields:[...Q,...C.color("#ff2200ff")]},vtranslate:{...v.translate,fields:[...Q,...C.translate(20,0,0)]},vscale:{...v.scale,fields:[...Q,...C.scale(150,150)]},vrotate:{...v.rotate,fields:[...Q,...C.rotate(0,0,90)]},fslide:{...v.slide,fields:[...Q,...C.slide(270)]},fglitch:{...v.glitch,fields:[...Q,...C.glitch(10,100,20,90,.01,50)]},cglitch:{...v.cglitch,fields:[...Q,...C.cglitch("#ff0000ff","#00aaffff",15,90,!1,80,.01,80,30)]},fdistortion:{...v.distortion,fields:[...Q,...C.distortion(60,60,20,20,0,0,2,2)]},fnoiseDistortion:{...v.uvNoise,fields:[...Q,...C.uvNoise(5,5,0,0,5,5)]}},Yt={wobbling:{...v.wobbling,fields:[...Q,ee.wobbling.fields[0]]},waves:{...v.waves,fields:[...Q,ee.waves.fields[0],ee.waves.fields[1]]},glitch:{title:"Glitch",...v.glitch,fields:[...Q,ee.glitch.fields[2],ee.glitch.fields[3]]},colorGlitch:{title:"Color Glitch",...v.cglitch,fields:[...Q,ee.colorGlitch.fields[2],ee.colorGlitch.fields[3]]},alpha:{...v.alpha,fields:[...Q,{titles:["Alpha","empty"],inputs:["number"],value:[100],percent:[!0],units:["%"],min:[0],max:[100],step:[1]}]},color:{...v.color,fields:[...Q,{titles:["Color","empty"],inputs:["color"],value:["#cc2222ff"],percent:[!1],units:[""],min:[0],max:[100],step:[1]}]},noise:{title:"Noise",description:"Noise distortion",fields:[...Q,{titles:["Strength","Speed"],inputs:["number","number"],value:[100,100],percent:[!0,!0],units:["%","%"],min:[1,1],max:[200,200],step:[1,1]}]},alphaNoise:{...v.alphaNoise,fields:[...Q,{titles:["Move X","Move Y"],inputs:["number","number"],value:[100,0],percent:[!0,!0],units:["%","%"],min:[-100,-100],max:[100,100],step:[1,1]},{titles:["Scale X","Scale Y"],inputs:["number","number"],value:[100,50],percent:[!0,!0],units:["%","%"],min:[0,0],max:[200,200],step:[1,1]}]},colorNoise:{title:"Noise color",description:"Color by Noise",fields:[...Q,{titles:["Color","empty"],inputs:["color"],value:["#ff0000ff"],units:[""],percent:[!1],min:[0],max:[100],step:[1]},{titles:["Move X","Move Y"],inputs:["number","number"],value:[100,0],percent:[!0,!0],units:["%","%"],min:[-100,-100],max:[100,100],step:[1,1]},{titles:["Scale X","Scale Y"],inputs:["number","number"],value:[100,50],percent:[!0,!0],units:["%","%"],min:[0,0],max:[200,200],step:[1,1]}]},translate:{...v.translate,fields:[...Q,{pack:!0,titles:["Length","X","Y","Z"],inputs:["number","number","number"],value:[30,0,0],percent:[!0,!0,!0],units:["%","%","%"],min:[-100,-100,-100],max:[100,100,100],step:[1,1,1]}]},scale:{...v.scale,fields:[...Q,...C.scale(20,20)]},rotate:{...v.rotate,fields:[...Q,...C.rotate(20,0,0)]}},Ye=a=>[{titles:["Cut off",a?"Color":"Opacity"],inputs:["checkbox",a?"color":"number"],value:[0,a?"#cc2222ff":100],units:["",a?"":"%"],percent:[!1,!a],min:[0,0],max:[1,100],step:[1,1]}],hs=a=>({fill:{title:"Fill",fields:[...Ye(a)]},lines:{title:"Lines",fields:[...Ye(a),{titles:["Distance","Line Width"],inputs:["number","number"],value:[6,2],units:["px","px"],min:[1,1],max:[20,20],step:[1,1]},{titles:["Angle"],inputs:["number"],value:[0],units:["°"],min:[0],max:[360],step:[1]}]},zigzag:{title:"Zigzag",fields:[...Ye(a),{titles:["Distance","Line Width"],inputs:["number","number"],value:[6,2],units:["px","px"],min:[1,1],max:[20,20],step:[1,1]},{titles:["Width","Height"],inputs:["number","number"],value:[5,5],units:["px","px"],min:[1,1],max:[20,20],step:[1,1]},{titles:["Angle"],inputs:["number"],value:[0],units:["°"],min:[0],max:[360],step:[1]}]},circles:{title:"Circles",fields:[...Ye(a),{titles:["Fill","Line Width"],inputs:["checkbox","number"],value:[!1,1],units:["","px"],min:[1,1],max:[20,20],step:[1,1]},{titles:["Min Radius","Max Radius"],inputs:["number","number"],value:[3,3],units:["px","px"],min:[.5,.5],max:[20,20],step:[.5,.5]},{titles:["Distance X","Distance Y"],inputs:["number","number"],value:[4,4],units:["px","px"],min:[0,0],max:[20,20],step:[.1,.1]},{titles:["Random X","Random Y"],inputs:["number","number"],value:[0,0],units:["px","px"],min:[0,0],max:[5,5],step:[.1,.1]}]},triangles:{title:"Triangles",fields:[...Ye(a),{titles:["Fill","Line Width"],inputs:["checkbox","number"],value:[!1,1],units:["","px"],min:[1,1],max:[20,20],step:[1,1]},{titles:["Min Radius","Max Radius"],inputs:["number","number"],value:[3,3],units:["px","px"],min:[.5,.5],max:[20,20],step:[.5,.5]},{titles:["Distance X","Distance Y"],inputs:["number","number"],value:[4,4],units:["px","px"],min:[0,0],max:[20,20],step:[.1,.1]},{titles:["Random X","Random Y"],inputs:["number","number"],value:[0,0],units:["px","px"],min:[0,0],max:[5,5],step:[.1,.1]}]},noise:{title:"Noise",fields:[...Ye(!1),{titles:["Density","Smooth"],inputs:["number","checkbox"],percent:[!0,!1],value:[50,!0],units:["%",""],min:[0,100],max:[99,400],step:[1,10]},{titles:["Scale X","Scale Y"],inputs:["number","number"],percent:[!0,!0],value:[100,100],units:["%","%"],min:[10,10],max:[400,400],step:[1,1]}]}}),dt=a=>[{titles:["Strength","empty"],inputs:["number"],value:[a],percent:[!0],units:["%"],min:[0],max:[100],step:[1],basic:!0}],_t={fdistortion:{...v.distortion,fields:[...dt(100),...C.distortion(50,50,1,1,0,0,0,0)]},fglitch:{...v.glitch,fields:[...dt(100),...C.glitch(10,100,20,90,.01,50)]},falphaNoise:{...v.alphaNoise,fields:[...dt(100),...C.alphaNoise(100,0,0,5,5)]},fnoiseDistortion:{...v.uvNoise,fields:[...dt(100),...C.uvNoise(2,2,0,20,5,5)]}},Ht={fdistortion:{...v.distortion,fields:[...ie(5,100,0,"glyph",0,0,100),...C.distortion(50,50,1,1,0,0,0,0)]},fglitch:{...v.glitch,fields:[...ie(5,100,0,"glyph",0,0,100),...C.glitch(10,100,20,90,.01,50)]},falphaNoise:{...v.alphaNoise,fields:[...ie(5,100,0,"glyph",0,0,100),...C.alphaNoise(100,0,0,5,5)]},fnoiseDistortion:{...v.uvNoise,fields:[...ie(5,100,0,"glyph",0,0,100),...C.uvNoise(2,2,0,20,5,5)]},fslide:{...v.slide,fields:[...ie(5,100,0,"glyph",0,0,100),...C.slide(270)]},fcolor:{...v.color,fields:[...ie(5,100,0,"glyph",0,0,100),...C.color("#ff2200ff")]},fcolorNoise:{...v.colorNoise,fields:[...ie(5,100,0,"glyph",0,0,100),...C.colorNoise("#ff2200ff",0,0,5,5)]}},$t=[["topleft","Top Left"],["topcenter","Top Center"],["topright","Top Right"],["centerleft","Center Left"],["center","Center"],["centerright","Center Right"],["bottomleft","Bottom Left"],["bottomcenter","Bottom Center"],["bottomright","Bottom Right"]],fs=[["repeat","Repeat"],["repeat-x","Repeat X"],["repeat-y","Repeat Y"],["no-repeat","No Repeat"]],Hs={dlinearGrad:{title:"Linear Gradient",fields:[{titles:["Operation","Angle"],inputs:["select","number"],value:["out",0],values:[[["out","Glyph Out"],["in","Glyph In"],["decorsOut","Decorations Out"],["decorsIn","Decorations In"]]],units:["","°"],min:[0,0],max:[0,360],step:[0,1]},{titles:["Color stops"],inputs:["stack"],stackTitle:["color stop"],value:["#c22"],itemsStart:[[["colorStop",[0,0]],["colorStop",[100,100]]]],skipNames:[!0],items:[{colorStop:{title:"Color Stop",fields:[{titles:["Position","Alpha"],inputs:["number","number"],percent:[!0,!0],value:[50,100],units:["%","%"],min:[0,0],max:[100,100],step:[1,1]}]}}]}]},dpattern:{title:"Pattern",fields:[{titles:["Operation","Invert"],inputs:["select","checkbox"],value:["out",!1],values:[[["in","In"],["out","Out"]]]},{titles:["Opacity","DPR Scale"],inputs:["number","checkbox"],percent:[!0,!1],description:["","Scale to device pixel ratio"],value:[100,!0],units:["%"],min:[0],max:[100],step:[1]},{titles:["Patterns"],inputs:["stack"],stackTitle:["pattern"],items:[hs(!1)]},{titles:["Effects"],inputs:["stack"],stackTitle:["effect"],items:[_t]}]},dimage:{title:"Image",fields:[{titles:["File"],inputs:["file"],value:[""]},{titles:["Operation","Invert"],inputs:["select","checkbox"],value:["out",!1],values:[[["in","In"],["out","Out"]]]},{titles:["Opacity","DPR Scale"],inputs:["number","checkbox"],percent:[!0,!1],description:["","Scale to device pixel ratio"],value:[100,!1],units:["%",""],min:[0,1],max:[100,200],step:[1,1]},{titles:["Align","Repeat"],inputs:["select","select"],value:["center","repeat"],values:[$t,fs]},{titles:["Scale X","Scale Y"],inputs:["number","number"],percent:[!0,!0],value:[100,100],units:["%","%"],min:[10,10],max:[400,400],step:[1,1]},{titles:["Translate X","Translate Y"],inputs:["number","number"],value:[0,0],units:["px","px"],min:[-100,-100],max:[100,100],step:[1,1]},{titles:["Effects"],inputs:["stack"],stackTitle:["effect"],items:[_t]}]}},js={linearGrad:{title:"Linear Gradient",fields:[{titles:["Operation","Angle"],inputs:["select","number"],value:["out",0],values:[[["out","Glyph Out"],["in","Glyph In"],["decorsOut","Decorations Out"],["decorsIn","Decorations In"]]],units:["","°"],min:[0,0],max:[0,360],step:[0,1]},{titles:["Opacity","Position"],inputs:["number","number"],value:[100,100],percent:[!0,!0],units:["%","%"],min:[1,0],max:[100,100],step:[1,1]}]},fill:{title:"Fill",fields:[{titles:["Operation","Opacity"],inputs:["select","number"],values:[[["out","Glyph Out"],["in","Glyph In"],["decorsOut","Decorations Out"],["decorsIn","Decorations In"]]],value:["out",50],percent:[!1,!0],units:["","%"],min:[0,1],max:[100,100],step:[1,1]}]},lines:{title:"Lines",fields:[{titles:["Operation","Angle"],inputs:["select","number"],value:["out",0],values:[[["out","Glyph Out"],["in","Glyph In"],["decorsOut","Decorations Out"],["decorsIn","Decorations In"]]],units:["","°"],min:[0,0],max:[0,360],step:[0,1]},{titles:["Distance","Width"],inputs:["number","number"],value:[5,2],percent:[!1,!1],units:["px","px"],min:[0,.5],max:[20,20],step:[.5,.5]},{titles:["Opacity","empty"],inputs:["number"],value:[100],percent:[!0],units:["%"],min:[1],max:[100],step:[1]}]},noiseLines:{title:"Distorted Lines",fields:[{titles:["Operation","Angle"],inputs:["select","number"],value:["out",0],values:[[["out","Glyph Out"],["in","Glyph In"],["decorsOut","Decorations Out"],["decorsIn","Decorations In"]]],units:["","°"],min:[0,0],max:[0,360],step:[0,1]},{titles:["Distance","Width"],inputs:["number","number"],value:[5,2],percent:[!1,!1],units:["px","px"],min:[0,.5],max:[20,20],step:[.5,.5]},{titles:["Opacity","Noise<br>Strength"],inputs:["number","number"],value:[100,3],percent:[!0,!1],units:["%","px"],min:[1,0],max:[100,20],step:[1,1]}]},zigzag:{title:"ZigZag",fields:[{titles:["Operation","Angle"],inputs:["select","number"],value:["out",0],values:[[["out","Glyph Out"],["in","Glyph In"],["decorsOut","Decorations Out"],["decorsIn","Decorations In"]]],units:["","°"],min:[0,0],max:[0,360],step:[0,1]},{titles:["Distance","Width"],inputs:["number","number"],value:[5,2],percent:[!1,!1],units:["px","px"],min:[0,.5],max:[20,20],step:[.5,.5]},{titles:["Opacity","empty"],inputs:["number"],value:[100],percent:[!0],units:["%"],min:[1],max:[100],step:[1]}]},circles:{title:"Circles",fields:[{titles:["Operation","Fill"],inputs:["select","checkbox"],value:["out",!0],values:[[["out","Glyph Out"],["in","Glyph In"],["decorsOut","Decorations Out"],["decorsIn","Decorations In"]]],units:["",""],min:[0,0],max:[0,360],step:[0,1]},{titles:["Distance","empty"],inputs:["number"],value:[2],percent:[!1],units:["px"],min:[.5],max:[20],step:[.5]},{titles:["Min Radius","Max Radius"],inputs:["number","number"],value:[3,3],units:["px","px"],min:[.5,.5],max:[20,20],step:[.5,.5]},{titles:["Random","Opacity"],inputs:["number","number"],value:[0,100],percent:[!1,!0],units:["px","%"],min:[0,0],max:[20,100],step:[.5,1]}]}},Ie=(a,e)=>[{titles:["Operation",e?"Color":"Opacity"],inputs:["select",e?"color":"number"],value:[a,e||100],percent:[!1,!e],values:[[["in","In"],["out","Out"],["bgIn","Backgrounds in"],["bgOut","Backgrounds out"]],[]],units:["%",e?"":"%"],min:[0,1],max:[100,100],step:[1,1]}],Pt={dlinearGrad:{title:"Linear gradient",fields:[...Ie("in"),{titles:["Size","Angle"],inputs:["select","number"],value:["canvas",45],values:[Ne],units:[0,"°"],min:[0,0],max:[0,360],step:[0,1]},{titles:["Color stops"],inputs:["stack"],stackTitle:["color stop"],value:["#c22"],skipNames:[!0],itemsStart:[[["colorStop",[0,"#0011ffff"]],["colorStop",[100,"#ffa200ff"]]]],items:[{colorStop:{title:"Color Stop",fields:[{titles:["Position","Color"],inputs:["number","color"],percent:[!0,!1],value:[50,"#cc2222ff"],units:["%",""],min:[0,0],max:[100,100],step:[1,1]}]}}]}]},dradialGrad:{title:"Radial gradient",fields:[...Ie("in"),{titles:["Size","Fit"],inputs:["select","checkbox"],value:["canvas",!1],values:[Ne]},{titles:["Align","Type"],description:["Align for gradient image when using fit with value false"],inputs:["select","select"],value:["center","circumscribed"],values:[$t,[["inscribed","Inscribed"],["circumscribed","Circumscribed"],["contain","Contain"]]]},{titles:["Translate X","Translate Y"],inputs:["number","number"],value:[50,50],percent:[!0,!0],units:["%","%"],min:[-50,-50],max:[150,150],step:[1,1]},{titles:["Scale","empty"],inputs:["number"],value:[100],percent:[!0],units:["%"],min:[1],max:[200],step:[1]},{titles:["Color stops"],inputs:["stack"],stackTitle:["color stop"],value:["#c22"],skipNames:[!0],itemsStart:[[["colorStop",[0,"#0011ffff"]],["colorStop",[100,"#ffa200ff"]]]],items:[{colorStop:{title:"Color Stop",fields:[{titles:["Position","Color"],inputs:["number","color"],percent:[!0,!1],value:[50,"#cc2222ff"],units:["%",""],min:[0,0],max:[100,100],step:[1,1]}]}}]}]},dpattern:{title:"Pattern",fields:[...Ie("out"),{titles:["Size","Fit"],inputs:["select","checkbox"],percent:[!1,!1],value:["canvas",!1],description:["","Fit to the selected size"],values:[Ne,[]]},{titles:["Invert","DPR Scale"],inputs:["checkbox","checkbox"],description:["Doesn't work with the operation in","Scale to device pixel ratio"],value:[!1,!0]},{titles:["Patterns"],inputs:["stack"],stackTitle:["pattern"],items:[hs(!0)]},{titles:["Effects"],inputs:["stack"],stackTitle:["effect"],items:[Ht]}]},dimage:{title:"Image",fields:[{titles:["File"],inputs:["file"],value:[""]},...Ie("in"),{titles:["Size","Fit"],inputs:["select","checkbox"],description:["","Fit to the selected size"],percent:[!1,!1],value:["canvas",!0],values:[Ne,[]]},{titles:["Invert","DPR Scale"],inputs:["checkbox","checkbox"],description:["Doesn't work with the operation in","Scale to device pixel ratio"],value:[!1,!1]},{titles:["Align","Repeat"],inputs:["select","select"],value:["center","repeat"],values:[$t,fs]},{titles:["Scale X","Scale Y"],inputs:["number","number"],percent:[!0,!0],value:[100,100],units:["%","%"],min:[10,10],max:[400,400],step:[1,1]},{titles:["Translate X","Translate Y"],inputs:["number","number"],value:[0,0],units:["px","px"],min:[-200,-200],max:[200,200],step:[1,1]},{titles:["Effects"],inputs:["stack"],stackTitle:["effect"],items:[Ht]}]}},Qs={linearGrad:{title:"Linear Gradient",fields:[Pt.dlinearGrad.fields[0],Pt.dlinearGrad.fields[1],{titles:["Color 1","Color 2"],inputs:["color","color"],value:["#0011ffff","#ffa200ff"],units:["",""],min:[0,0],max:[100,100],step:[1,1]},{titles:["Position","empty"],inputs:["number"],value:[100],percent:[!0],units:["%"],min:[0,0],max:[100,100],step:[1,1]}]},radialGrad:{title:"Radial Gradient",fields:[...Ie("in"),{titles:["Size","Type"],inputs:["select","select"],value:["canvas","circumscribed"],values:[Ne,[["inscribed","Inscribed"],["circumscribed","Circumscribed"],["contain","Contain"]]]},{titles:["Color 1","Color 2"],inputs:["color","color"],value:["#0011ffff","#ffa200ff"],units:["",""],min:[0,0],max:[100,100],step:[1,1]}]},lines:{title:"Distorted Lines",fields:[...Ie("out"),{titles:["Color 1","Color 2"],inputs:["color","color"],value:["#cc222288","#cc2222ff"],units:["",""],min:[0,0],max:[100,100],step:[1,1]},{titles:["Distance","Width"],inputs:["number","number"],value:[5,2],percent:[!1,!1],units:["px","px"],min:[0,.5],max:[20,20],step:[.5,.5]},{titles:["Angle","Distortion<br>Strength"],inputs:["number","number"],value:[135,3],percent:[!1,!1],units:["°","px"],min:[1,0],max:[100,20],step:[1,1]}]},noiseLines:{title:"Distorted Lines by Noise",fields:[...Ie("out","#cc220088"),{titles:["Distance","Width"],inputs:["number","number"],value:[5,2],percent:[!1,!1],units:["px","px"],min:[0,.5],max:[20,20],step:[.5,.5]},{titles:["Angle","Noise<br>Strength"],inputs:["number","number"],value:[135,3],percent:[!1,!1],units:["°","px"],min:[1,0],max:[100,20],step:[1,1]}]},dots:{title:"Dots",description:"Dostirted dots",fields:[...Ie("out","#cc2200ff"),{titles:["Maximum</br>Radius","Distortion</br>Strength"],inputs:["number","number"],value:[50,50],percent:[!0,!0],units:["%","%"],min:[0,0],max:[200,200],step:[1,1]},{titles:["Distortion</br>Speed","empty"],inputs:["number"],value:[100],percent:[!0],units:["%"],min:[0],max:[200],step:[1]}]}},pt=[{title:"canvasPadding",subtitle:"Padding for the canvas element",type:["number","array"],default:"4",description:['Extra padding of the canvas in pixels. The value as an array must be in the form of four numbers, top, right, bottom, left, respectively. For the example, the value <span class="text-prop notranslate">[50, 30, 0, 0]</span> will add an indentation of <span class="text-prop notranslate">50px</span> at the top, <span class="text-prop notranslate">30px</span> at the right, <span class="text-prop notranslate">0px</span> at the bottom and <span class="text-prop notranslate">0px</span> at the left. ',"The canvas size is automatically calculated, but if you need to specify an additional size in a particular case, you can use this option.",["examples",[]]]},{title:"texturePadding",subtitle:"Padding for the glyphs on the texture",type:["number"],default:"2",description:["Additional distance between the glyphs on the texture."]},{title:"textureColor",subtitle:"Color for drawing glyphs on the texture",type:["string"],default:"'currentcolor'",description:['Color for drawing glyphs on the texture. The value must be a string in the form of <a href="https://www.w3schools.com/cssref/css_colors_legal.php" target="_blank">CSS color</a>.','This color affects only the rendering on the texture. The text is rendered differently in different browsers with different colors. So the text color <span class="text-prop notranslate">#fff</span> can be slightly bolder than <span class="text-prop notranslate">#000</span>.']},{title:"pauseOnBlur",subtitle:"Pause animation during the window losses focus",type:["boolean"],default:"false",description:["Pause the animation when the window loses focus.",'This is a global option and can only be applied in the <span class="text-prop notranslate">setDefaultOptions</span> method for all renderers.']},{title:"wrapOnly",subtitle:"Process only children marked with the attribute",type:["boolean"],default:"false",description:['If <span class="text-prop notranslate">true</span>, only internal elements that have a <span class="text-prop notranslate">data-wgltr-wrap</span> attribute will be processed. If you use JavaScript to create an instance, only the specified internal elements will be processed. Specified options will be inherited for internal elements.',"You can use this option if you want to add the effects only to a certain sections of text, to inline elements, or to multiple elements with different parents. For example it could be countdown. This way only one canvas and one texture will be used for all text."]},{title:"roundPosition",subtitle:"Round off the position of characters",type:["boolean"],default:"true",description:['Round off the position of characters. For example, if the value is set to <span class="text-prop notranslate">false</span> then if the character position contains half a pixel, it will be drawn a bit blurry because of half a pixel. Rounding is done in screen pixels, not CSS, i.e. device pixel ratio is not taken into account.']},{title:"fov",subtitle:"Field of view",type:["number"],default:"40",description:["The field of view for effects that affect the Z coordinate, such as rotation, translate and others.",["examples",[["fov-40",{fov:40}],["fov-80",{fov:80}]]]]},{title:"scaleFontSize",subtitle:"Scale by font size difference",type:["number","boolean"],default:"false",description:[`Initial font size for scaling effect values. If set to a number, all effects will be scaled by the difference between the current font size and the one specified in this option. For example, you can do custom effects for text with <span class="text-prop notranslate">100px</span> size and if you apply them to text with <span class="text-prop notranslate">50px</span> size, they won't be scaled, but if you set <span class="text-prop notranslate">scaleFontSize</span> to <span class="text-prop notranslate">100</span>, the effects for text with <span class="text-prop notranslate">50px</span> size will look identical to text with <span class="text-prop notranslate">100px</span> size, because the effect value will be scaled as <span class="text-prop notranslate">value * (fontSize / scaleFontSize)</span>.`,"This option is ignored when using presets, since they are automatically scaled."]},{title:"split",subtitle:"Splitting characters or words on the texture",type:["string"],default:"'letters'",description:[`There can only be two values for this option, they are <span class="text-prop notranslate">'words'</span> and <span class="text-prop notranslate">'letters'</span>. The <span class="text-prop notranslate">'letters'</span> value will split all the characters one by one to be drawn on the texture. The <span class="text-prop notranslate">'words'</span> value will draw the words on the texture of the word as a whole.`,'This option is made for languages in which the appearance of the word depends on the position of the characters. For ligatures there is a separate option <span class="text-prop notranslate">ligatures</span>.',`Unfortunately, if this option is set to <span class="text-prop notranslate">'words'</span> then all words behave like characters, i.e. there will be limitations in some of the effects as well as character-by-character appear and change animations.`,"In the examples below you can see that without this option some languages will not display characters correctly.",["examples",[["split-letters",{split:"letters"}],["split-words",{split:"words"}]]]]},{title:"reserved",subtitle:"Reserved characters for the texture",type:["array"],default:"[]",description:[`An array of characters or strings for ligatures to be reserved on the texture. For example, you can reserve the character <span class="text-prop notranslate">f</span> and the ligature <span class="text-prop notranslate">fl</span>, the value will look like <span class="text-prop notranslate">['f', 'fl']</span>. You can also specify a range of characters, e.g. <span class="text-prop notranslate">['2-5']</span> will be the same as <span class="text-prop notranslate">['2', '3', '4', '5']</span> and if <span class="text-prop notranslate">['A-z']</span> is set, all capital and small English letters will be reserved.`,"Without this option, if a new character is added that is not on the texture, the texture will be recalculated and redrawn. But by using this option and specifying characters that can be added to the text, the texture will not be redrawn and the change will be much faster.","It makes sense to use this option if you dynamically change the text with the script many times.",'Note that this option is not inherited. And if you have an internal element with a different font family or size, the characters of that style will not be reserved, to reserve it you need to add this option to the internal element using <span class="text-prop notranslate">data-wgltr-wrap</span> attribute or in options for JavaScript.']},{title:"ligatures",subtitle:"Groups of characters to draw as a single glyph",type:["array"],default:"[]",description:[`An array of strings that should be drawn on the texture as a single glyph. For example, you can specify <span class="text-prop notranslate">['fl', 'fi']</span> and when these sequences occur in the text, they will be considered as one glyph in both texture rendering and animation.`,'Ligatures that count as one character, such as <span class="text-prop notranslate">Ꜵ</span> or sequential unicode characters, do not need to be specified. Ligatures that are formed by two or more characters, such as stylistic ligatures <span class="text-prop notranslate">fl</span>, <span class="text-prop notranslate">fi</span>, should be specified.',["examples",[["ligatures-",{ligatures:[]}],["ligatures-fi",{ligatures:["fi"]}]]]]},{title:"cssShadows",subtitle:"Process CSS shadows",type:["boolean"],default:"true",description:["Processing and rendering CSS text shadows."]},{title:"customTextDecorationColor",subtitle:"Do not process the CSS text-decoration",type:["boolean"],default:"false",description:['By default <span class="text-prop notranslate">text-decoration</span> is text color, but since the script makes the text transparent, <span class="text-prop notranslate">text-decoration</span> becomes transparent. To make <span class="text-prop notranslate">text-decoration</span> visible, the script sets <span class="text-prop notranslate">text-decoration-color</span> CSS property to the color of the text. If you want to specify a different color you can set this option to <span class="text-prop notranslate">true</span> so the script ignores the color setting for <span class="text-prop notranslate">text-decoration-color</span>.']},{title:"smoothWidth",subtitle:"Smooth width resize",type:["boolean","number"],default:"false",description:['When using animated change the text changes its size, this option is used to specify whether to animate width resize and what the speed should be. If <span class="text-prop notranslate">false</span>, it will be resized without animation. If a number is used as the value, this number will indicate the animation time in seconds, i.e., a value of <span class="text-prop notranslate">0.5</span> will equal 500 milliseconds.']},{title:"smoothHeight",subtitle:"Smooth height resize",type:["boolean","number"],default:"0.2",description:['When using animated change the text changes its size, this option is used to specify whether to animate height resize and what the speed should be. If <span class="text-prop notranslate">false</span>, it will be resized without animation. If a number is used as the value, this number will indicate the animation time in seconds, i.e., a value of <span class="text-prop notranslate">0.5</span> will equal 500 milliseconds.']},{break:"Decorations"},{title:"stroke",subtitle:"Activate text stroke",type:["boolean","string"],default:"false",description:[`Draws the outlines of the glyph on the texture instead of the glyph itself. The values taken are <span class="text-prop notranslate">false</span> to disable stroke, <span class="text-prop notranslate">true</span> to draw a full stroke, <span class="text-prop notranslate">'in'</span> to draw a stroke only inside the glyph, and <span class="text-prop notranslate">'out'</span> to draw a stroke only from inside the glyph.`,`Some fonts have overlapping contours and will not render correctly with the <span class="text-prop notranslate">stroke</span> option. To partially fix this you can use the <span class="text-prop notranslate">'out'</span> value. As you can see in the examples below, the second example shows that the <span class="text-prop notranslate">Montserrat</span> font has overlapping contours, and the third example shows applying the <span class="text-prop notranslate">'out'</span> value that cuts out everything inside the glyph and partially fixes the overlapping contours.`,["examples",[["default",{stroke:!1}],["stroke-wrong",{stroke:!0}],["stroke-out",{stroke:"out"}],["stroke-true-font",{stroke:!0}],["stroke-out-font",{stroke:"out"}],["stroke-in-font",{stroke:"in"}]]]]},{title:"strokeWidth",subtitle:"Text stroke width in pixels",type:["number"],default:"2",description:["Glyph outline size in pixels after applying the appear option.",["examples",[["strokeWidth-1",{stroke:!0,strokeWidth:1}],["strokeWidth-4",{stroke:!0,strokeWidth:4}],["strokeWidth-4-out",{stroke:"out",strokeWidth:4}],["strokeWidth-4-in",{stroke:"in",strokeWidth:4}]]]]},{title:"strokeBlur",subtitle:"Text stroke blur in pixels",type:["number"],default:"0",description:['Glyph outline blur in pixels. A value of <span class="text-prop notranslate">0</span> completely disables blur.',`The blur will be clipped along with the outline when using the <span class="text-prop notranslate">'in'</span> and <span class="text-prop notranslate">'out'</span> values of the <span class="text-prop notranslate">stroke</span> option.`,["examples",[["strokeBlur-3",{stroke:!0,strokeBlur:3}],["strokeBlur-6",{stroke:!0,strokeBlur:6}],["strokeBlur-6-in",{stroke:"in",strokeBlur:6}],["strokeBlur-6-out",{stroke:"out",strokeBlur:6}]]]]},{title:"decorsStroke",subtitle:"Cut the text stroke out of the decorations",type:["string","boolean"],default:"false",description:[`Cutting decorations with a glyph stroke. Values can be <span class="text-prop notranslate">false</span> - turn off, <span class="text-prop notranslate">'all'</span> - apply to all decorations, <span class="text-prop notranslate">'in'</span> - apply only to decorations that is drawn on the glyph, <span class="text-prop notranslate">'out'</span> - apply only to decorations that is cut out of the glyph.`,["examples",[["decorsStroke-false",{decorsStroke:!1}],["decorsStroke-all",{decorsStroke:"all"}]]]]},{title:"decorsStrokeWidth",subtitle:"The width of the text stroke to cut out of the decorations",type:["number"],default:"2",description:["The width of the text stroke to cut out of the decorations in pixels.",["examples",[["decorsStroke-all",{decorsStrokeWidth:2}],["decorsStrokeWidth-5",{decorsStrokeWidth:5}]]]]},{title:"decorsStrokeBlur",subtitle:"The blur of the text stroke to cut out of the decorations",type:["number"],default:"0",description:["The blur of the text stroke to cut out o the decorations in pixels.",["examples",[["decorsStrokeWidth-5",{decorsStrokeBlur:0}],["decorsStrokeBlur-5",{decorsStrokeBlur:5}]]]]},{title:"decors",subtitle:"Decorations that are cut from the glyphs on the texture",type:["array","string"],default:"[]",description:["Decorations are cutting different patterns, gradients and custom pictures out of the glyph when creating a texture. Decorations can contain any number of decorations of different types and in any order.","Decorations are specified as a string if a simple preset is used, or as an array containing flexible presets with the effect type and its value. The array can contain simple, flexible and advanced effects together.","Here is a complete list of all available simple persets:",["examples",[["decorsPresets-linearGrad",{decors:"linearGrad"}],["decorsPresets-stroke",{decors:"stroke"}],["decorsPresets-filledStroke",{decors:"filledStroke"}],["decorsPresets-lines",{decors:"lines"}],["decorsPresets-zigzag",{decors:"zigzag"}],["decorsPresets-obliqueLines",{decors:"obliqueLines"}],["decorsPresets-gradLines",{decors:"gradLines"}]]]]},{title:"backgrounds",subtitle:"Dynamic text backgrounds",type:["array","string"],default:"[]",description:["Backgrounds are a layer on a glyph or cut out of a glyph dynamically when drawing text. Backgrounds, like static decorations, can contain any number of backgrounds of different types and in any order.","Backgrounds are specified as a string if a simple preset is used, or as an array containing flexible presets with the effect type and its value. The array can contain simple, flexible and advanced effects together.","Here is a complete list of all available simple persets:",["examples",[["backgroundsPresets-linearGrad",{backgrounds:"linearGrad"}],["backgroundsPresets-radialGrad",{backgrounds:"radialGrad"}],["backgroundsPresets-lines",{backgrounds:"lines"}],["backgroundsPresets-gradLines",{backgrounds:"gradLines"}],["backgroundsPresets-noiseLines",{backgrounds:"noisesLines"}]]]]},{break:"Effects"},{title:"effects",subtitle:"Animated text effects",type:["string","array"],default:"[]",description:["Effects are animated text effects that play continuously. Effects can contain any number of effects of different types and in any order. Often the order matters, but some effects are applied at different stages of the shader, so they may not affect each other.","Effects are specified as arrays containing the effect type and its values, as well as the flexible preset type and its values. You can set simple presets as a string, flexible presets and raw effects using an array, as well as combine them. A more detailed description of each effect with each value can be found in the documentation.","Here is a complete list of all available simple persets:",["examples",[["effectsPresets-wobbling",{effects:"wobbling"}],["effectsPresets-waves",{effects:"waves"}],["effectsPresets-verticalWaves",{effects:"verticalWaves"}],["effectsPresets-noise",{effects:"noise"}],["effectsPresets-noiseColor",{effects:"noiseColor"}],["effectsPresets-smallNoiseColor",{effects:"smallNoiseColor"}],["effectsPresets-verticalNoiseColor",{effects:"verticalNoiseColor"}],["effectsPresets-alphaNoiseColor",{effects:"alphaNoiseColor"}],["effectsPresets-glitch",{effects:"glitch"}],["effectsPresets-smoothGlitch",{effects:"smoothGlitch"}],["effectsPresets-colorGlitch",{effects:"colorGlitch"}],["effectsPresets-flame",{effects:"flame"}],["effectsPresets-colors",{effects:"colors"}],["effectsPresets-translate",{effects:"translate"}],["effectsPresets-scale",{effects:"scale"}],["effectsPresets-rotate",{effects:"rotate"}]]]]},{title:"staticEffects",subtitle:"Static effects applied to the texture",type:["array"],default:"[]",description:["Static effects are effects that are applied at the texture creation stage to each glyph. Effects can contain any number of effects of different types and in any order.","Static effects are specified as arrays containing the effect type and its values, as well as the flexible preset type and its values. You can set simple presets as a string, flexible presets and raw effects using an array, as well as combine them. A more detailed description of each effect with each value can be found in the documentation.","Here is a complete list of all available simple persets:",["examples",[["staticEffectsPresets-distortion",{staticEffects:"distortion"}],["staticEffectsPresets-waves",{staticEffects:"waves"}],["staticEffectsPresets-noise",{staticEffects:"noise"}],["staticEffectsPresets-alphaNoise",{staticEffects:"alphaNoise"}],["staticEffectsPresets-stretchedNoise",{staticEffects:"stretchedNoise"}],["staticEffectsPresets-strokeNoise",{staticEffects:"strokeNoise"}],["staticEffectsPresets-glitch",{staticEffects:"glitch"}],["staticEffectsPresets-smallGlitch",{staticEffects:"smallGlitch"}]]]]},{title:"appearEffects",subtitle:"Animated text appear effects",type:["array"],default:"[]",description:["Appear effects are dynamic effects that are applied when playing an appearance animation or text change animation. Effects can contain any number of effects of different types and in any order.","Appear effects are specified as arrays containing the effect type and its values, as well as the flexible preset type and its values. You can set simple presets as a string, flexible presets and raw effects using an array, as well as combine them. A more detailed description of each effect with each value can be found in the documentation.","Here is a complete list of all available simple persets:",["examples",[["appearEffectsPresets-alpha",{appearEffects:"alpha"}],["appearEffectsPresets-color",{appearEffects:"color"}],["appearEffectsPresets-alphaNoise",{appearEffects:"alphaNoise"}],["appearEffectsPresets-colorNoise",{appearEffects:"colorNoise"}],["appearEffectsPresets-noise",{appearEffects:"noise"}],["appearEffectsPresets-wobbling",{appearEffects:"wobbling"}],["appearEffectsPresets-glitch",{appearEffects:"glitch"}],["appearEffectsPresets-colorGlitch",{appearEffects:"colorGlitch"}],["appearEffectsPresets-roll",{appearEffects:"roll"}],["appearEffectsPresets-noiseFromTop",{appearEffects:"noiseFromTop"}],["appearEffectsPresets-noiseWaves",{appearEffects:"noiseWaves"}]]]]},{title:"disappearEffects",subtitle:"Animated text disappear effects",type:["array"],default:"[]",description:['Disappear effects contain the same effects as <span class="text-prop notranslate">appearEffects</span> but are played in reverse order.',"If the disappear effects are not specified then the appear effects will play back in reverse."]},{title:"mouseEffects",subtitle:"Animated mouse effects",type:["array"],default:"[]",description:["Mouse effects are dynamic effects that are applied depending on the cursor position. Effects can contain any number of effects of different types and in any order.","Mouse effects are specified as arrays containing the effect type and its values, as well as the flexible preset type and its values. You can set simple presets as a string, flexible presets and raw effects using an array, as well as combine them. A more detailed description of each effect with each value can be found in the documentation.","Here is a complete list of all available simple persets:",["examples",[["mouseEffectsPresets-follow",{mouseEffects:"follow"}],["mouseEffectsPresets-bubble",{mouseEffects:"bubble"}],["mouseEffectsPresets-alpha",{mouseEffects:"alpha"}],["mouseEffectsPresets-wobbling",{mouseEffects:"wobbling"}],["mouseEffectsPresets-waves",{mouseEffects:"waves"}],["mouseEffectsPresets-color",{mouseEffects:"color"}],["mouseEffectsPresets-noise",{mouseEffects:"noise"}],["mouseEffectsPresets-noiseColor",{mouseEffects:"noiseColor"}],["mouseEffectsPresets-noiseAlpha",{mouseEffects:"noiseAlpha"}],["mouseEffectsPresets-glitch",{mouseEffects:"glitch"}],["mouseEffectsPresets-colorGlitch",{mouseEffects:"colorGlitch"}],["mouseEffectsPresets-translate",{mouseEffects:"translate"}],["mouseEffectsPresets-scale",{mouseEffects:"scale"}],["mouseEffectsPresets-rotate",{mouseEffects:"rotate"}]]]]},{title:"scrollEffects",subtitle:"Animated scroll effects",type:["array"],default:"[]",description:["Scroll effects are dynamic effects that are applied depending on your scroll speed. Effects can contain any number of effects of different types and in any order.","Scroll effects are specified as arrays containing the effect type and its values, as well as the flexible preset type and its values. You can set simple presets as a string, flexible presets and raw effects using an array, as well as combine them. A more detailed description of each effect with each value can be found in the documentation.","Here is a complete list of all available simple persets:",["examples",[["scrollEffectsPresets-wobbling",{scrollEffects:"wobbling"}],["scrollEffectsPresets-waves",{scrollEffects:"waves"}],["scrollEffectsPresets-alpha",{scrollEffects:"alpha"}],["scrollEffectsPresets-color",{scrollEffects:"color"}],["scrollEffectsPresets-noise",{scrollEffects:"noise"}],["scrollEffectsPresets-noiseColor",{scrollEffects:"noiseColor"}],["scrollEffectsPresets-noiseAlpha",{scrollEffects:"noiseAlpha"}],["scrollEffectsPresets-glitch",{scrollEffects:"glitch"}],["scrollEffectsPresets-colorGlitch",{scrollEffects:"colorGlitch"}],["scrollEffectsPresets-translate",{scrollEffects:"translate"}],["scrollEffectsPresets-scale",{scrollEffects:"scale"}],["scrollEffectsPresets-rotate",{scrollEffects:"rotate"}]]]]},{break:"Appear"},{title:"appear",subtitle:"Activate text appearance",type:["boolean"],default:"false",description:["Enables animated text appearance.",["examples",[["default",{appear:!1}],["appear-true",{appear:!0}]]]]},{title:"appearDestroy",subtitle:"Destroy after appear",type:["boolean"],default:"false",description:["Destroys the WGLTR instance when the appearance is complete."]},{title:"appearFunction",subtitle:"Timing function for text appearing",type:["string"],default:"'inOutSine'",description:[`Timing function for the timing of all text that appears. Available values: <span class="text-prop notranslate">'linear'</span>, <span class="text-prop notranslate">'inQuad'</span>, <span class="text-prop notranslate">'outQuad'</span>, <span class="text-prop notranslate">'inOutQuad'</span>, <span class="text-prop notranslate">'inCubic'</span>, <span class="text-prop notranslate">'outCubic'</span>, <span class="text-prop notranslate">'inOutCubic'</span>, <span class="text-prop notranslate">'inExpo'</span>, <span class="text-prop notranslate">'outExpo'</span>, <span class="text-prop notranslate">'inOutExpo'</span>, <span class="text-prop notranslate">'inSine'</span>, <span class="text-prop notranslate">'outSine'</span>, <span class="text-prop notranslate">'inOutSine'</span>, <span class="text-prop notranslate">'inCirc'</span>, <span class="text-prop notranslate">'outCirc'</span>, <span class="text-prop notranslate">'inOutCirc'</span>, <span class="text-prop notranslate">'inQuart'</span>, <span class="text-prop notranslate">'outQuart'</span>, <span class="text-prop notranslate">'inOutQuart'</span>.`]},{title:"appearPartFunction",subtitle:"Time function for the appearance of each character",type:["string"],default:"'inOutSine'",description:[`Timing function for the timing of each glyph that appears. Available values: <span class="text-prop notranslate">'linear'</span>, <span class="text-prop notranslate">'inQuad'</span>, <span class="text-prop notranslate">'outQuad'</span>, <span class="text-prop notranslate">'inOutQuad'</span>, <span class="text-prop notranslate">'inCubic'</span>, <span class="text-prop notranslate">'outCubic'</span>, <span class="text-prop notranslate">'inOutCubic'</span>, <span class="text-prop notranslate">'inExpo'</span>, <span class="text-prop notranslate">'outExpo'</span>, <span class="text-prop notranslate">'inOutExpo'</span>, <span class="text-prop notranslate">'inSine'</span>, <span class="text-prop notranslate">'outSine'</span>, <span class="text-prop notranslate">'inOutSine'</span>, <span class="text-prop notranslate">'inCirc'</span>, <span class="text-prop notranslate">'outCirc'</span>, <span class="text-prop notranslate">'inOutCirc'</span>, <span class="text-prop notranslate">'inQuart'</span>, <span class="text-prop notranslate">'outQuart'</span>, <span class="text-prop notranslate">'inOutQuart'</span>.`]},{title:"appearFunctionReset",subtitle:"The point at which the time function is reset for the following text",type:["boolean"],default:"false",description:["The point at which the time function is reset for the following text. This option is not inherited."]},{title:"appearReset",subtitle:"The point at which the time is reset for the following text",type:["boolean"],default:"false",description:["The point at which the time is reset for the following text. This option is not inherited. For example, if you wrap the last half of the text with this option, the text inside the element with this option will begin to appear as the initial text begins to appear."]},{title:"appearDelay",subtitle:"Text appearance delay",type:["number"],default:"0.5",description:['Delay as a percentage of the speed of each character or specified number in the <span class="text-prop notranslate">appearCount</span> option. For example, the value <span class="text-prop notranslate">0.5</span> means 50%, that is, the next character will begin to appear only when the current character has passed 50% of its path.']},{title:"appearAsync",subtitle:"Text appearance additive random delay",type:["number"],default:"0",description:['Additional random delay for each item as a percentage of the appearance speed of each character or specified number in the <span class="notranslate text-prop">appearCount</span> option. For example, a value of <span class="notranslate text-prop">0.5</span> would be 50% and would add a random time from 0% to 50% of the appearance speed.']},{title:"appearStartDelay",subtitle:"Text appearance delayed start",type:["number"],default:"0.0",description:['Delay at the beginning of the text appear in seconds. For example, a value of <span class="notranslate text-prop">1.5</span> would make the text wait a second and a half and then start to appear.']},{title:"appearSpeed",subtitle:"Appearance time",type:["number"],default:"0.5",description:['The speed of appearing of each character in seconds. Can be distorted by the <span class="text-prop notranslate">appearFunction</span> option.']},{title:"appearCount",subtitle:"Delayed characters count",type:["number","string"],default:"1",description:[`The number of elements with the same appearance time. If a number is set, then that number will represent the number of characters, but when the <span class="text-prop notranslate">split</span> option with value <span class="text-prop notranslate">'words'</span> is set, then the number will represent the number of words. Available values are <span class="text-prop notranslate">'all'</span> - to make the appearance time one for all characters in the text, <span class="text-prop notranslate">'word'</span> - to make the appearance time one for all characters in a word, <span class="text-prop notranslate">'line'</span> - to make the appearance time one for all characters in a line.`]},{title:"appearReverse",subtitle:"Text appearance in reverse order",type:["boolean"],default:"false",description:["Line-by-line reverse order of appearance. When RTL text is used, the order will be from left to right."]},{title:"appearRandom",subtitle:"Text appearance in random order",type:["boolean"],default:"false",description:["Randomly swaps the appearance times of appearance items."]},{title:"appearShadowOpacityOnly",subtitle:"Disabling appearance effects for shadows",type:["boolean"],default:"true",description:["Do not apply appearing effects to the shadows, but only the alpha appearance effect."]},{break:"Disappear"},{title:"disappearReset",subtitle:"The point at which the time is reset for the following text",type:["boolean"],default:"false",description:["The point at which the time is reset for the following text when text disappearance."]},{title:"disappearDelay",subtitle:"Disappearance delay for characters",type:["number","string"],default:"'inherit'",description:['Delay as a percentage of the speed of each character or specified number in the <span class="text-prop notranslate">appearCount</span> or <span class="notranslate text-prop">disappearCount</span> option, but only for text disappearance animation. For example, the value <span class="text-prop notranslate">0.5</span> means 50%, that is, the next character will begin to disappear only when the current character has passed 50% of its path.',`The <span class="notranslate text-prop">'inherit'</span> value will inherit the value of the <span class="notranslate text-prop">appearDelay</span> option.`]},{title:"disappearAsync",subtitle:"Text disappearance additive random delay",type:["number","string"],default:"'inherit'",description:['Additional random delay for each item as a percentage of the disappearance speed of each character or specified number in the <span class="notranslate text-prop">disappearCount</span> option. For example, a value of <span class="notranslate text-prop">0.5</span> would be 50% and would add a random time from 0% to 50% of the disappearance speed.']},{title:"disappearSpeed",subtitle:"Disappearance time",type:["number","string"],default:"'inherit'",description:['The speed of disappearing of each character in seconds. Can be distorted by the <span class="text-prop notranslate">appearFunction</span> option.',`The <span class="notranslate text-prop">'inherit'</span> value will inherit the value of the <span class="notranslate text-prop">appearSpeed</span> option.`]},{title:"disappearCount",subtitle:"Delayed characters count",type:["number","string"],default:"'inherit'",description:[`The number of elements with the same disappearance time. If a number is set, then that number will represent the number of characters, but when the <span class="text-prop notranslate">split</span> option with value <span class="text-prop notranslate">'words'</span> is set, then the number will represent the number of words. Available values are <span class="text-prop notranslate">'all'</span> - to make the disappearance time one for all characters in the text, <span class="text-prop notranslate">'word'</span> - to make the disappearance time one for all characters in a word, <span class="text-prop notranslate">'line'</span> - to make the disappearance time one for all characters in a line.`,`The <span class="notranslate text-prop">'inherit'</span> value will inherit the value of the <span class="notranslate text-prop">appearCount</span> option.`]},{title:"disappearRandom",subtitle:"Text disappearance in random order",type:["boolean","string"],default:"'inherit'",description:["Randomly swaps the disappearance times of items.",`The <span class="notranslate text-prop">'inherit'</span> value will inherit the value of the <span class="notranslate text-prop">appearRandom</span> option.`]},{title:"disappearReverse",subtitle:"Text disappearance in reverse order",type:["boolean","string"],default:"'inherit'",description:["Line-by-line reverse order of disappearance. When RTL text is used, the order will be from left to right.",`The <span class="notranslate text-prop">'inherit'</span> value will inherit the value of the <span class="notranslate text-prop">appearReverse</span> option.`]},{break:"Change"},{title:"change",subtitle:"Activate animated text changes",type:["boolean","string"],default:"false",description:[`If <span class="notranslate text-prop">true</span> then all internal elements will start change accordingly to the other change options. If <span class="notranslate text-prop">'manual'</span> then all internal elements will be processed for change but will wait for the <span class="notranslate text-prop">change</span> method to be called.`]},{title:"changeAlign",subtitle:"Text alignment when changing",type:["string"],default:"'inherit'",description:[`Determine the position of the smaller text between the two changing elements. Available values: <span class="notranslate text-prop">'left'</span>, <span class="notranslate text-prop">'right'</span>, <span class="notranslate text-prop">'center'</span> and <span class="notranslate text-prop">'inherit'</span>. The <span class="notranslate text-prop">'inherit'</span> value will inherit the CSS <span class="notranslate text-prop">text-align</span> property.`,["examples",[["changeAlign-left",{changeAlign:"left"}],["changeAlign-center",{changeAlign:"center"}],["changeAlign-right",{changeAlign:"right"}]]]]},{title:"changeStartTime",subtitle:"Text change start time",type:["number"],default:"1.0",description:["The time after which the text will start to change in seconds, after the text appears if appearing enabled."]},{title:"changeTime",subtitle:"Text change delay",type:["number"],default:"3.0",description:['Time to wait for text change in seconds. Does not affect the start time of the change, use the <span class="notranslate text-prop">changeStartTime</span> option for this. For example, a value of <span class="notranslate text-prop">5.0</span> will wait 5 seconds before each text change.']},{title:"changeDelay",subtitle:"Delay between change text appearing and disappearing",type:["number"],default:"-0.2",description:['Delay between change text appearing and disappearing in seconds. For example, a value of <span class="notranslate text-prop">-1.0</span> will will make the appearance animation play one second before the disappearance animation of the previous text ends.',["examples",[["changeDelay-07",{changeDelay:-.7}],["changeDelay-1",{changeDelay:-1}]]]]},{title:"changeLoop",subtitle:"Infinite change restart",type:["boolean"],default:"true",description:[`Infinite change restart. If <span class="notranslate text-prop">false</span> then the change will stop at the last item in the queue. Ignored when using the <span class="notranslate text-prop">change</span> option with the value <span class="notranslate text-prop">'manual'</span>.`]},{title:"changeRandom",subtitle:"Random change order",type:["boolean"],default:"false",description:[`If <span class="notranslate text-prop">true</span> then the change queue will be sorted in random order. If used in addition to the <span class="notranslate text-prop">changeLoop</span> option then the random order will be new each time after all items are displayed. When using the <span class="notranslate text-prop">change</span> option with the value <span class="notranslate text-prop">'manual'</span>, a random element that is not yet in the queue will be selected for the next change when the <span class="notranslate text-prop">change</span> method is called.`]},{title:"changeMove",subtitle:"Smoothly text move",type:["number","boolean"],default:"0.2",description:['Smoothly move text if text change triggered text movement. The number value is the duration of the move animation in seconds. The <span class="notranslate text-prop">value</span> false causes the text to move instantly.']},{title:"changeMultiline",subtitle:"Moving text to another line",type:["boolean"],default:"true",description:['Smoothly move text from the sides if text change has triggered the text to move to another line. If <span class="notranslate text-prop">false</span> then the text is simply moved from one point to another.',["examples",[["changeMultiline-false",{changeMultiline:!1}],["changeMultiline-true",{changeMultiline:!0}]]]]},{title:"changeAppearReset",subtitle:"The point at which the time is reset for the following text",type:["boolean","string"],default:"false",description:["The point at which the time is reset for the following text. Only works when changing text.",`The <span class="notranslate text-prop">'inherit'</span> value will inherit the value of the <span class="notranslate text-prop">appearReset</span> option.`]},{title:"changeAppearDelay",subtitle:"Appearance delay for characters",type:["number","string"],default:"'inherit'",description:['Delay as a percentage of the speed of each character or specified number in the <span class="text-prop notranslate">appearCount</span> option. For example, the value <span class="text-prop notranslate">0.5</span> means 50%, that is, the next character will begin to appear only when the current character has passed 50% of its path. Only works when changing text.',`The <span class="notranslate text-prop">'inherit'</span> value will inherit the value of the <span class="notranslate text-prop">appearDelay</span> option.`]},{title:"changeAppearAsync",subtitle:"Text appearance additive random delay",type:["number","string"],default:"'inherit'",description:['Additional random delay for each item as a percentage of the appearance speed of each character or specified number in the <span class="notranslate text-prop">appearCount</span> option. For example, a value of <span class="notranslate text-prop">0.5</span> would be 50% and would add a random time from 0% to 50% of the appearance speed.',`The <span class="notranslate text-prop">'inherit'</span> value will inherit the value of the <span class="notranslate text-prop">appearAsync</span> option.`]},{title:"changeAppearSpeed",subtitle:"Appearance time",type:["number","string"],default:"'inherit'",description:['The speed of appearing of each character in seconds. Can be distorted by the <span class="text-prop notranslate">appearFunction</span> option. Only works when changing text.',`The <span class="notranslate text-prop">'inherit'</span> value will inherit the value of the <span class="notranslate text-prop">appearSpeed</span> option.`]},{title:"changeAppearCount",subtitle:"Delayed characters count",type:["number","string"],default:"'inherit'",description:[`The number of elements with the same appearance time. If a number is set, then that number will represent the number of characters, but when the <span class="text-prop notranslate">split</span> option with value <span class="text-prop notranslate">'words'</span> is set, then the number will represent the number of words. Available values are <span class="text-prop notranslate">'all'</span> - to make the appearance time one for all characters in the text, <span class="text-prop notranslate">'word'</span> - to make the appearance time one for all characters in a word, <span class="text-prop notranslate">'line'</span> - to make the appearance time one for all characters in a line. Only works when changing text.`,`The <span class="notranslate text-prop">'inherit'</span> value will inherit the value of the <span class="notranslate text-prop">appearCount</span> option.`]},{title:"changeAppearRandom",subtitle:"Text appearance in random order",type:["boolean","string"],default:"'inherit'",description:["Randomly swaps the appearance times of appear items. Only works when changing text.",`The <span class="notranslate text-prop">'inherit'</span> value will inherit the value of the <span class="notranslate text-prop">appearRandom</span> option.`]},{title:"changeAppearReverse",subtitle:"Text appearance in reverse order",type:["boolean","string"],default:"'inherit'",description:["Line-by-line reverse order of appearance. When RTL text is used, the order will be from left to right. Only works when changing text.",`The <span class="notranslate text-prop">'inherit'</span> value will inherit the value of the <span class="notranslate text-prop">appearReverse</span> option.`]}];pt.generate=()=>{const a=h.template("wgltr-option");let e="";pt.forEach(t=>{if(t.break){e+='<div class="wgltr-option-full"></div>',e+='</div><div class="col-md-12 wgltr-options hidden">';return}e+=a.replace("$title",t.title).replace("$subtitle",t.subtitle).replace("$popup",t.title)}),h.q("#wgltr-options")[0].innerHTML='<div class="col-md-12 wgltr-options">'+e+'<div class="wgltr-option-full"></div></div>',pt.push({title:"Effects List",description:["The array of effects.",["list",[["distortion",["Draws lines according to the options. This pattern has this order of values:",'<span class="text-prop notranslate">cutOff</span> - boolean value that specifies whether to cut or draw,','<span class="text-prop notranslate">opacity</span> - a number that indicates the opacity of decoration in percent from 0 to 1, i.e. from 0% to 100%,','<span class="text-prop notranslate">distance</span> - a number indicating the distance between the lines in pixels,','<span class="text-prop notranslate">lineWidth</span> - a number indicating line width in pixels,','<span class="text-prop notranslate">angle</span> - a number in degrees which indicates lines rotation.']],["noise",["Draws noise according to the options. This pattern has this order of values:",'<span class="text-prop notranslate">cutOff</span> - boolean value that specifies whether to cut or draw,','<span class="text-prop notranslate">opacity</span> - a number that indicates the opacity of decoration in percent from 0 to 1, i.e. from 0% to 100%.,','<span class="text-prop notranslate">density</span> - a number that indicates density of noise in percent from 0 to 1, i.e. from 0% to 100%,','<span class="text-prop notranslate">smooth</span> - a boolean value that indicates that noise should be blurred if scaled,','<span class="text-prop notranslate">scaleX</span> - a number that indicates scale the noise on the x-coordinate in percent from 0 to 1, i.e. from 0% to 100%,','<span class="text-prop notranslate">scaleY</span> - a number that indicates scale the noise on the y-coordinate in percent from 0 to 1, i.e. from 0% to 100%.']]]]]},{title:"Patterns List",description:["The array of patterns.",["list",[["lines",["Draws lines according to the options. This pattern has this order of values:",'<span class="text-prop notranslate">cutOff</span> - boolean value that specifies whether to cut or draw,','<span class="text-prop notranslate">opacity</span> - a number that indicates the opacity of decoration in percent from 0 to 1, i.e. from 0% to 100%,','<span class="text-prop notranslate">distance</span> - a number indicating the distance between the lines in pixels,','<span class="text-prop notranslate">lineWidth</span> - a number indicating line width in pixels,','<span class="text-prop notranslate">angle</span> - a number in degrees which indicates lines rotation.']],["noise",["Draws noise according to the options. This pattern has this order of values:",'<span class="text-prop notranslate">cutOff</span> - boolean value that specifies whether to cut or draw,','<span class="text-prop notranslate">opacity</span> - a number that indicates the opacity of decoration in percent from 0 to 1, i.e. from 0% to 100%.,','<span class="text-prop notranslate">density</span> - a number that indicates density of noise in percent from 0 to 1, i.e. from 0% to 100%,','<span class="text-prop notranslate">smooth</span> - a boolean value that indicates that noise should be blurred if scaled,','<span class="text-prop notranslate">scaleX</span> - a number that indicates scale the noise on the x-coordinate in percent from 0 to 1, i.e. from 0% to 100%,','<span class="text-prop notranslate">scaleY</span> - a number that indicates scale the noise on the y-coordinate in percent from 0 to 1, i.e. from 0% to 100%.']]]]]})};let At=[];const Zs=a=>`<div class="popup-examples">${a.reduce((t,[s,i])=>(At.push(i),t+h.template("popup-example").replace("$src","./assets/examples/"+s+".png")),"")}</div>`,us=a=>a.map(e=>{if(Array.isArray(e)){const[t,s]=e;if(t==="list")return`<dl class="popup-dlist">${s.map(i=>`<dt class="popup-dlist-title notranslate">${i[0]}</dt><dd class="popup-dlist-description">${us(i[1])}</dd>`).join("")}</dl>`;if(t==="examples")return Zs(s)}return`<p>${e}</p>`}).join("");class It{constructor(e,t){e.removeAttribute("data-popup-opener"),e.on("click",s=>{s.preventDefault();const[i,r]=t.split(","),n=pt.find(f=>f.title===r),o=n.type?n.type.map(f=>`<span class="text-prop notranslate popup-type">${f}</span>`).join(" or "):"";At=[];const l=us(n.description),p=h.template("popup-content").replace("$title",n.title).replace("$type",o).replace("$default",n.default).replace("$description",l),c=h.q(`#${i}`)[0];return c.ilvPopup.open(p),h.qe(c,".popup-example-code").forEach((f,u)=>{new cs(f,""),f.ilvCode.setJSOptions(At[u],!1,!1)}),h.q("[data-popup-opener]").forEach(f=>{new It(f,f.getAttribute("data-popup-opener"))}),o||h.qe(c,".val-info")[0].remove(),!1})}}h.elements.push([It,"data-popup-opener"]);class Js{constructor(e,t){this.el=e,this.bg=h.qe(e,".shine-card-bg")[0],this.type=t,this.enabled=!1,this.strength=0,this.bcr=new DOMRect(0,0,1,1),h.cla(this.el,`shine-card-${this.type}-back`),e.on("mousemove",s=>{this.move(s.pageX,s.pageY)}),e.on("mouseenter",s=>(this.activate(s.pageX,s.pageY),s.preventDefault(),!1)),e.on("mouseleave",s=>(this.deactivate(),s.preventDefault(),!1))}calcCoords(e,t){this.bcr=h.bcr(this.el),this.x=e-this.bcr.x,this.y=t-this.bcr.y}calcTransform(){const{strength:e}=this;let[t,s]=[this.x/this.bcr.width,this.y/this.bcr.height];switch(this.type){case"rotate":[t,s]=[s*10-5,-(t*10-5)],this.el.style.transform=`perspective(700px) rotateY(${s*e}deg) rotateX(${t*e}deg)`;break;case"scale":[t,s]=[t*20-10,s*20-10],this.el.style.transform=`perspective(700px) translate(${t*e}px, ${s*e}px)`;break}}move(e,t){this.calcCoords(e,t),this.bg.style.setProperty("--shine-x",this.x+"px"),this.bg.style.setProperty("--shine-y",this.y+"px"),this.calcTransform()}activate(e,t){this.enabled=!0,this.move(e,t),clearTimeout(this.deactivateTimeout),h.cla(this.bg,"shine-card-bg-active");let s=performance.now(),i=this.strength;h.rafLoop(r=>{const n=Math.min(r-s,100);return s=r,i=Math.max(Math.min(i+n/200,1),0),this.strength=kt.inOut(i),this.calcTransform(),this.strength<1&&this.enabled})}deactivate(){this.enabled=!1,this.deactivateTimeout=setTimeout(()=>{h.clr(this.bg,"shine-card-bg-active")},50);let e=performance.now(),t=this.strength;h.rafLoop(s=>{const i=Math.min(s-e,100);return e=s,t=Math.max(Math.min(t-i/200,1),0),this.strength=kt.inOut(t),this.calcTransform(),this.strength>0&&!this.enabled})}}h.elements.push([Js,"data-shine-card"]);const X=window,me=document,jt=X.requestAnimationFrame.bind(X),Lt=X.IntersectionObserver,rt=X.ResizeObserver,_e=X.MutationObserver,ne=X.DOMRect,Ks=me.querySelectorAll.bind(me),Te=me.createElement.bind(me),Dt=X.navigator.userAgent.toLowerCase(),Qt=Dt.indexOf("gecko/")!==-1,je=Dt.indexOf("webkit")>0&&!(Dt.indexOf("chrome")>0);let x=X.devicePixelRatio;const{min:ve,max:S,round:G,ceil:et,floor:Gt,pow:Rt,abs:ae,sign:Zt,sqrt:ft,log2:ei,atan2:ti,tan:si,sin:we,cos:ge,PI:W,random:re}=Math,K="wgltr",nt=`${K}Options`,Jt=`data-${K}`,Kt=`data-${K}-wrap`,ii=new RegExp("(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])",""),fe={colorsChangeDelay:Qt?120:10,canvasPadding:4,glyphsPadding:Qt?4:2,texturePadding:2,textureColor:"currentcolor",pauseOnBlur:!1,wrapOnly:!1,roundPosition:!0,fov:40,scaleFontSize:!1,scrollParent:document.documentElement,split:"letters",reserved:[],ligatures:[],smoothWidth:!1,smoothHeight:.2,cssShadows:!0,customTextDecorationColor:!1,appear:!1,appearDestroy:!1,appearMargin:100,appearFunction:"inOutSine",appearPartFunction:"inOutSine",appearFunctionReset:!1,appearReset:!1,appearDelay:.5,appearStartDelay:0,appearSpeed:.5,appearCount:1,appearReverse:!1,appearRandom:!1,appearAsync:0,appearShadowOpacityOnly:!0,disappearReset:!1,disappearDelay:"inherit",disappearSpeed:"inherit",disappearCount:"inherit",disappearReverse:"inherit",disappearRandom:"inherit",disappearAsync:"inherit",change:!1,changeAlign:"inherit",changeTime:3,changeStartTime:1,changeDelay:-.2,changeSkipFirst:!1,changeAppearReset:!1,changeAppearDelay:"inherit",changeAppearSpeed:"inherit",changeAppearCount:"inherit",changeAppearRandom:"inherit",changeAppearReverse:"inherit",changeAppearAsync:"inherit",changeLoop:!0,changeRandom:!1,changeMove:.2,changeMultiline:!0,stroke:!1,strokeWidth:2,strokeBlur:0,decors:[],decorsStroke:!1,decorsStrokeWidth:2,decorsStrokeBlur:0,backgrounds:[],effects:[],staticEffects:[],mouseEffects:[],scrollEffects:[],appearEffects:[],disappearEffects:[],changeAppearEffects:[],appeared:void 0,disappeared:void 0,changed:void 0,changeStarted:void 0,changeAppeared:void 0,changeDisappeared:void 0},vt={effects:{wobbling:[["wobbling",1,1]],waves:[["waves",1,1,1]],longWaves:[["waves",1,3,1]],verticalWaves:[["verticalWaves",1,1,1,0]],noise:[["wobbling",.5,1],["noise",1,1]],noiseColor:[["wobbling",.5,1],["colorNoise",5,1,"word",.95,"#f00f",.5,1,0,1,.5]],smallNoiseColor:[["wobbling",.5,1],["colorNoise",5,1,"word",.95,"#f00f",.28,.26,1,.3,.3],["colorNoise",5,1,"word",0,"#f00f",.2,-.51,1,.2,.2]],verticalNoiseColor:[["wobbling",.5,1],["colorNoise",5,1,"word",.95,"#f00f",.5,0,1,.5,1]],alphaNoiseColor:[["wobbling",.5,1],["colorNoise",5,1,"word",.95,"#f00f",.4,1,0,1,.5],["alphaNoise",5,1,"word",.95,.5,.25,1,0,1,.5]],noiseAlpha:[["wobbling",.5,1],["alphaNoise",5,1,"word",.95,.7,.4,1,0,1,.5]],glitch:[["wobbling",.5,1],["glitch",5,.4,"word",.95,1,1,90]],smoothGlitch:[["wobbling",.5,1],["smoothGlitch",5,.4,"word",.95,1,1,145]],colorGlitch:[["wobbling",.5,1],["colorGlitch",5,.4,"word",.95,"#f00b","#0afb",1,1]],flame:[["wobbling",.5,1],["flame",5,1,"word",.95,"#f00f",1,1,1,90]],colors:[["wobbling",.5,1],["colors","#f005","#0af5","#ff05","#0f75",1.2,1]],translate:[["wobbling",.5,1],["translate",3,.2,"glyph",.95,.2,0,0]],scale:[["wobbling",.5,1],["scale",3,.2,"glyph",.95,.2,.2]],rotate:[["wobbling",.5,1],["rotate",3,.2,"glyph",.95,0,0,30]]},staticEffects:{distortion:[["distortion",1,1,1,1,1]],waves:[["waves",1,1]],noise:[["noise",.7]],alphaNoise:[["alphaNoise",.25,.9,2,2]],stretchedNoise:[["alphaNoise",.25,.9,10,1.5]],strokeNoise:[["strokeNoise",1]],glitch:[["glitch",.8,.9,120]],smallGlitch:[["glitch",.7,.2,120]]},decors:{linearGrad:[["linearGrad","out",90,.6,.9]],stroke:{presets:[],options:{stroke:"out"}},filledStroke:{presets:[["fill","in",1]],options:{stroke:"out",decorsStroke:"all",decorsStrokeWidth:3}},lines:[["lines","out",0,4,1,.5]],zigzag:[["zigzag","out",135,4,1,.5]],obliqueLines:[["lines","out",135,4,1,.5]],gradLines:[["lines","out",135,4,2,.5],["linearGrad","decorsOut",90,1,.8]],strokedLines:{presets:[["lines","out",135,5,2,.5]],options:{decorsStroke:"out",decorsStrokeWidth:4,decorsStrokeBlur:2}},noiseLines:[["noiseLines","out",135,6,2,.5,2]],hardNoiseLines:[["noiseLines","out",135,10,2,.5,10]],dots:[["circles","out",1,4,1,1,0,.8]],circles:[["circles","out",0,2,0,4,4,.7]]},backgrounds:{linearGrad:[["linearGrad","in",1,"wrap",45,"#f00f","#fa0f",.8]],radialGrad:[["radialGrad","in",1,"wrap","circumscribed","#f08f","#fa0f"]],lines:[["lines","out",.4,"#c224","#c22f",10,1,-135,4]],gradLines:[["lines","out",.8,"#c224","#c22f",10,1,-135,4],["linearGrad","bgOut",1,"glyph",0,"#f220","#f22",.75]],noiseLines:[["noiseLines","out","#c22d",10,3,135,10],["linearGrad","bgOut",1,"glyph",180,"#f220","#f22",.75]],dots:[["dots","out","#c22f",.5,.5,1]]},appearEffects:{alpha:[["alpha",0,1,1]],color:[["alpha",0,.3,1],["color",0,1,"#c22f"]],alphaNoise:[["alphaNoise",0,1,-1,0,1,.5]],colorNoise:[["alphaNoise",0,.8,-1,0,1,.5],["colorNoise",0,1,"#f00f",-1,0,1,.5]],noise:[["alphaNoise",0,.5,-1,0,1,.5],["noise",0,1,2,1]],wobbling:[["alpha",0,.5,1],["wobbling",0,1,2,2]],glitch:[["glitch",0,1,1,1,90]],colorGlitch:[["alpha",0,.2,1],["glitch",0,1,1,1,90],["colorGlitch",0,1,"#f00b","#0afb",1,1]],roll:[["alpha",0,.7,1],["rotate",0,1,0,0,45],["translate",0,1,-.6,0,0]],noiseFromTop:[["alphaNoise",0,1,.2,1.4,.7,1.5],["alpha",0,.3,1],["translate",0,1,0,-.6,0],["wobbling",0,1,2.5,1]],noiseWaves:[["alphaNoise",0,1,-1,0,1.5,1.5],["waves",0,1,2,.5,2],["translate",0,1,.4,0,0]]},mouseEffects:{follow:[["follow","word",30,.5]],bubble:[["bubble",200,.4]],alpha:[["alpha",150,1,1]],wobbling:[["wobbling",150,1,1.5,2]],waves:[["waves",150,1,1,1,1]],color:[["color",150,1,"#08ff"]],noise:[["noise",150,1,1,1]],noiseColor:[["colorNoise",150,.5,"#f00f",1,0,1,.5]],noiseAlpha:[["alphaNoise",150,.5,1,1,0,1,.5]],glitch:[["glitch",150,1,1,1,90]],colorGlitch:[["colorGlitch",150,1,"#f00b","#0afb",1,1]],translate:[["translate",150,1,0,-.2,0]],scale:[["scale",150,1,.2,.2]],rotate:[["rotate",150,1,0,0,30]]},scrollEffects:{wobbling:[["wobbling",40,1,1.5,2]],waves:[["waves",40,1,1,1.5,5]],alpha:[["alpha",40,1,1]],color:[["color",40,1,"#08ff"]],noise:[["noise",40,1,1,1]],noiseColor:[["colorNoise",100,1,"#f00f",0,1,.5,1]],noiseAlpha:[["alphaNoise",100,1,1,0,1,1,1]],glitch:[["glitch",40,.5,1,1,90]],colorGlitch:[["colorGlitch",40,.5,"#f00b","#0afb",1,1]],translate:[["translate",40,.5,0,.4,0]],scale:[["scale",40,.5,.2,.2]],rotate:[["rotate",40,.5,0,0,30]]}};vt.disappearEffects=vt.appearEffects;const ye={};ye.effects={wobbling:(a=1,e=1)=>[["fdistortion",5,1,0,"canvas",0,0,1,200,300,2*a,4*a,1,1,2.5/e,2/e]],waves:(a,e,t)=>[["fdistortion",5,1,0,"canvas",0,0,1,0,300*e,0,10*a,0,0,0,2/t]],verticalWaves:(a,e,t,s)=>[["fdistortion",5,1,0,"canvas",0,0,1,300*e,0,10*a,0,s,0,2/t,0]],noise:(a,e)=>[["fnoiseDistortion",5,1,0,"canvas",0,0,1,1.5*a,2*a,10*e,20*e,10,10]],colorNoise:(a,e,t,s,i,r,n,o,l,p)=>[["fcolorNoise",a,e,.5,t,s,0,r,i,-20*n,-20*o,10*l,10*p]],alphaNoise:(a,e,t,s,i,r,n,o,l,p)=>[["falphaNoise",a,e,.5,t,s,0,r,i,-20*n,-20*o,10*l,10*p]],alpha:(a,e,t,s,i)=>[["falpha",a,e,.5,t,s,0,1,i]],color:(a,e,t,s,i,r)=>[["fcolor",a,e,.5,t,s,0,i,r]],glitch:(a,e,t,s,i,r,n)=>[["fglitch",a,e,.5,t,s,0,1,20*i,1,30,n,.1/r,.4]],smoothGlitch:(a,e,t,s,i,r,n)=>[["fglitch",a,e,.5,t,.98,0,1,10*i,0,15,n,.1/r,1]],colorGlitch:(a,e,t,s,i,r,n,o)=>[["cglitch",a,e,.5,t,s,0,1,i,r,8*n,90,!0,.5,.05/o,2,50]],colors:(a,e,t,s,i,r)=>[["cglitch",1,1,0,"glyph",0,0,1,a,e,8*i,45,!1,0,.5/r,.7,8],["cglitch",1,1,0,"glyph",0,0,1,t,s,8*i,135,!1,0,.5/r,.7,8]],flame:(a,e,t,s,i,r,n,o,l)=>[["cglitch",a,e,.5,t,s,0,1,i,"#0000",10*n,l,!1,.7,.1/o,.8,6*r]],translate:(a,e,t,s,i,r,n)=>[["vtranslate",a,e,.5,t,s,0,1,100*i,100*r,100*n]],scale:(a,e,t,s,i,r)=>[["vscale",a,e,.5,t,s,0,1,i,r]],rotate:(a,e,t,s,i,r,n)=>[["vrotate",a,e,.5,t,s,0,1,i,r,n]]};ye.staticEffects={distortion:(a,e,t,s,i)=>[["fdistortion",1,100*e*a,100*t*a,1.5*s*a,1.5*i*a,1,1,1,1]],waves:(a,e)=>[["fdistortion",1,0,10*e,0,1*a,0,0,0,0]],alphaNoise:(a,e,t,s)=>[["falphaNoise",a,e,0,0,2*t,2*s]],noise:a=>[["fnoiseDistortion",a,3*a,4*a,10,10,10,10]],strokeNoise:a=>[["fnoiseDistortion",a,3*a,4*a,10,10,.1,.1]],glitch:(a,e,t)=>[["fglitch",a,10*a,1,5*e,t,.1,.4]]};ye.mouseEffects={bubble:(a,e)=>[["fbubble",a,e]],follow:(a,e,t)=>[["vfollow",a,e,e,t,t]],wobbling:(a,e,t,s)=>[["fdistortion",a,e,200,300,4*t,8*t,1,1,2.5/s,2/s]],waves:(a,e,t,s,i)=>[["fdistortion",a,e,0,300*s,0,20*t,0,0,0,2/i]],glitch:(a,e,t,s,i)=>[["fglitch",a,e,20*t,1,30,i,.1/s,.4]],colorGlitch:(a,e,t,s,i,r)=>[["cglitch",a,e,t,s,8*i,90,!0,.5,.05/r,2,50]],alpha:(a,e,t)=>[["falpha",a,e,t]],color:(a,e,t)=>[["fcolor",a,e,t]],noise:(a,e,t,s)=>[["fnoiseDistortion",a,e,3*t,4*t,10*s,20*s,10,10]],colorNoise:(a,e,t,s,i,r,n)=>[["fcolorNoise",a,e,t,-20*s,-20*i,10*r,10*n]],alphaNoise:(a,e,t,s,i,r,n)=>[["falphaNoise",a,e,t,-20*s,-20*i,10*r,10*n]],translate:(a,e,t,s,i)=>[["vtranslate",a,e,100*t,100*s,100*i]],scale:(a,e,t,s)=>[["vscale",a,e,t,s]],rotate:(a,e,t,s,i)=>[["vrotate",a,e,t,s,i]]};ye.scrollEffects={wobbling:(a,e,t,s)=>[["fdistortion",a,e,200,300,4*t,8*t,1,1,2.5/s,2/s]],waves:(a,e,t,s,i)=>[["fdistortion",a,e,0,300*s,0,20*t,0,0,0,2/i]],glitch:(a,e,t,s,i)=>[["fglitch",a,e,20*t,1,30,i,.1/s,.4]],colorGlitch:(a,e,t,s,i,r)=>[["cglitch",a,e,t,s,8*i,90,!0,.5,.05/r,2,50]],alpha:(a,e,t)=>[["falpha",a,e,t]],color:(a,e,t)=>[["fcolor",a,e,t]],noise:(a,e,t,s)=>[["fnoiseDistortion",a,e,3*t,4*t,10*s,20*s,10,10]],colorNoise:(a,e,t,s,i,r,n)=>[["fcolorNoise",a,e,t,-20*s,-20*i,10*r,10*n]],alphaNoise:(a,e,t,s,i,r,n)=>[["falphaNoise",a,e,t,-20*s,-20*i,10*r,10*n]],translate:(a,e,t,s,i)=>[["vtranslate",a,e,100*t,100*s,100*i]],scale:(a,e,t,s)=>[["vscale",a,e,t,s]],rotate:(a,e,t,s,i)=>[["vrotate",a,e,t,s,i]]};ye.appearEffects={wobbling:(a,e,t,s)=>[["fdistortion",a,e,200,300,6*t,12*t,1,1,1.25/s,1/s]],waves:(a,e,t,s,i)=>[["fdistortion",a,e,0,300*s,0,20*t,0,0,0,2/i]],alpha:(a,e,t)=>[["falpha",a,e,t]],color:(a,e,t)=>[["fcolor",a,e,t]],noise:(a,e,t,s)=>[["fnoiseDistortion",a,e,3*t,4*t,10*s,20*s,10,10]],alphaNoise:(a,e,t,s,i,r)=>[["falphaNoise",a,e,1,100*t,100*s,10*i,10*r]],colorNoise:(a,e,t,s,i,r,n)=>[["fcolorNoise",a,e,t,100*s,100*i,10*r,10*n]],glitch:(a,e,t,s,i)=>[["fglitch",a,e,20*t,1,30,i,.1/s,.4]],colorGlitch:(a,e,t,s,i,r)=>[["cglitch",a,e,t,s,8*i,90,!0,.5,.05/r,2,50]],translate:(a,e,t,s,i)=>[["vtranslate",a,e,100*t,100*s,100*i]],scale:(a,e,t,s)=>[["vscale",a,e,t,s]],rotate:(a,e,t,s,i)=>[["vrotate",a,e,t,s,i]]};ye.disappearEffects={...ye.appearEffects};ye.decors={linearGrad:(a,e,t,s)=>[["dlinearGrad",a,e,[[0,0],[s,t]]]],fill:(a,e)=>[["dpattern",a,0,1,1,[["fill",0,e]],[]]],lines:(a,e,t,s,i)=>[["dpattern",a,0,1,1,[["lines",0,i,t,s,e]],[]]],noiseLines:(a,e,t,s,i,r)=>[["dpattern",a,0,1,1,[["lines",0,i,t,s,e]],[["fnoiseDistortion",1,r,r,0,20,4+r/2,4+r/2]]]],zigzag:(a,e,t,s,i)=>[["dpattern",a,0,1,1,[["zigzag",0,i,t,s,5,5,e]],[]]],circles:(a,e,t,s,i,r,n)=>[["dpattern",a,0,1,1,[["circles",0,n,e,1,s,i,t,t*2,r,r]],[]]]};ye.backgrounds={linearGrad:(a,e,t,s,i,r,n)=>[["dlinearGrad",a,e,t,s,[[0,i],[n,r]]]],radialGrad:(a,e,t,s,i,r)=>[["dradialGrad",a,e,t,!1,"center",s,.5,.5,1,[[.1,i],[.9,r]]]],lines:(a,e,t,s,i,r,n,o)=>[["dpattern",a,e,"word",0,0,1,[["lines",0,t,3,5,n],["lines",0,s,i,r,n]],[["fdistortion",5,1,0,"glyph",0,0,1,47,85,o,o,0,0,2,4]]]],noiseLines:(a,e,t,s,i,r)=>[["dpattern",a,1,"wrap",0,0,1,[["lines",0,e,t,s,i]],[["fnoiseDistortion",5,1,0,"glyph",0,0,1,r,r,0,20,5+r/5,5+r/5]]]],dots:(a,e,t,s,i)=>[["dpattern",a,1,"canvas",0,0,1,[["circles",0,e,1,1,.5,4*t,4,4,0,0]],[["fdistortion",5,1,0,"glyph",0,0,1,200,200,5*s,5*s,1,0,1/i,.5/i]]]]};const ai=["reserved","appearReverse","appearRandom","appearReset","appearStartDelay","appearFunctionReset","disappearReset","disappearRandom","disappearReverse","change","changeAppearReset","changeAppearRandom","changeAppearReverse","appeared","changed","changeStarted","changeAppeared","changeDisappeared"],es={resizeHard:["split","roundPosition","disappear","appearAsync","changeAppearAsync","disappearAsync"],resizeSoft:["fov","canvasPadding","scaleFontSize","effects","appear","mouseEffects","scrollEffects","appearEffects","disappearEffects","stroke","strokeWidth","strokeBlur","appearSpeed","appearCount","appearDelay","appearReverse","appearRandom","changeAppearSpeed","changeAppearCount","changeAppearDelay","changeAppearReverse","changeAppearRandom","disappearSpeed","disappearCount","disappearDelay","disappearReverse","disappearRandom","stroke","strokeWidth","strokeBlur","decors","decorsStroke","decorsStrokeWidth","decorsStrokeBlur","staticEffects"],shadersHard:["scaleFontSize","effects","appearFunction","appearPartFunction","appearEffects","mouseEffects","scrollEffects","disappearEffects","backgrounds"],shadersSoft:["fov"],textureHard:["scaleFontSize","decors","staticEffects"],textureSoft:["scaleFontSize","decors","staticEffects","stroke","strokeWidth","strokeBlur","decorsStroke","decorsStrokeWidth","decorsStrokeBlur"]},ri=["vCP.xy","vUP","(vCP.zw-uWC.xy)/uWC.zw","(vCP.zw-uLC.xy)/uLC.zw","(vCP.zw-uWRC.xy)/uWRC.zw"],ni=["1.0","vAP.x","uID.x","uID.y","uID.z"],oi=["vU.zw","vAP.zw","uWC.zw","uLC.zw","uWRC.zw"],li=["vec4(0.0,0.0,vU.zw)","vec4(vVP.zw-vAP.zw/vec2(2.),vAP.zw)","uWC","uLC","uWRC"],ds=(a,e,t)=>{const s=t-e;return a=a%s,a<e?a+s:a},ke=(a,e)=>a==="inherit"?e:a,ts=a=>a===me.documentElement?X:a,$e=(a,e)=>{e.forEach((t,s)=>a[s]+=t)},ut=(a,e)=>{const t=typeof e=="function"?a.findIndex(e):a.indexOf(e);t>=0&&a.splice(t,1)},Qe=(a,e,t,s,i)=>{a.push(e,t,s,i,e,t,s,i,e,t,s,i,e,t,s,i)},gs=(a,e)=>{let t=0;a.forEach(s=>{if(!(!s.url||s.image))if(s.url.width)s.image=s.url;else{t++;const i=new Image;i.onload=()=>{s.image=i,t--,t===0&&e(!0)},i.onerror=()=>{console.warn(`WGLTR. Image '${s.url}' not found!`),t--,t===0&&e(!0)},i.src=s.url}}),t===0&&e(!1)},R=a=>(a.toFixed?a.toFixed(4):a)+"",Be=(a,e=0,t=1)=>`clamp(${a},${R(e)},${R(t)})`,Le=a=>Rt(2,et(ei(a))),xt=a=>{a=a*W/180;const e=we(a),t=ge(a),s=ae(e)+ae(t);return`(${t<0?"(1.-vUP.y)":"vUP.y"}*${R(ae(t)/s)})+(${e<0?"(1.-vUP.x)":"vUP.x"}*${R(ae(e)/s)})`},ci=(a,e,t)=>e===0&&t===1?a:e===1&&t===0?`(1.-${a})`:Be(`(${a}-${R(e)})/${R(t-e)}`),pi=a=>`if(${a}){discard;return;}`,Ft=a=>S(0,["canvas","glyph","word","line","wrap"].indexOf(a)),Pe=(a,e,t)=>{let s=-2;return t=t.reduce((r,n)=>(s+1===n?r[r.length-1][1]=n:r.push([n,n]),s=n,r),[]),`if(${t.reduce((r,[n,o],l)=>(l!==0&&(r+="||"),r+`(${e}>${(n-.5).toFixed(1)}&&${e}<${(o+.5).toFixed(1)})`),"")}){${a}}`},ms=(a,e)=>{let t=`(${a}<${R(e[0][0])})?${R(e[0][1])}:`;for(let s=0;s<e.length-1;s++){const[[i,r],[n,o]]=[e[s],e[s+1]],l=`clamp((${R(n)}-${R(i)}),.00001,1.)`;t+=`(${a}<${R(n)})?${R(o-r)}*((${a}-${R(i)})*(1./(${l})))+${R(r)}:`}return t+R(e[e.length-1][1])},le=(a,e)=>{if(!e)return a.map(o=>({args:o,scale:1}));const t=a[e],s=a.node?a.node.cssSize:106,i=s/106,r=s/(a.scaleFontSize||s),n=[];return t.forEach(o=>{const l=ye[bs(e)][o[0]];l?(l.length&&l.length!==o.length-1&&console.warn(`WGLTR. Expected ${l.length} arguments, found ${o.length-1}. Preset ${o[0]} in ${e}.`),n.push(...l(...o.slice(1)).map(p=>({args:p,scale:i})))):n.push({args:o,scale:r})}),n},hi=a=>a==="appearEffects"||a==="disappearEffects"||a==="changeAppearEffects",bs=a=>a==="changeAppearEffects"?"appearEffects":a==="changeDisappearEffects"?"disappearEffects":a,Bt=(a,e,t)=>{const s=a.base&&a.base[e];let i=[[],t];return s!==void 0&&(i=[t.slice(0,s),t.slice(s)]),i},Mt=(a,e)=>{if(!Ct[a]){console.warn(`WGLTR. Effect '${a}' in '${e}' not found!`);return}return[["staticEffects","effects"],["disappearEffects","appearEffects"],["changeAppearEffects","appearEffects"],["appearEffects","effects"],["decorsEffects","effects"],["scrollEffects","effects"],["mouseEffects","effects"]].forEach(([t,s])=>{e===t&&!Ct[a][e]&&(e=s)}),Ct[a][e]},Ze=(a,e,t,s=0)=>{const i=[];let r="";return t.forEach((n,o)=>{const[l,...p]=n.args,c=Mt(l,a);if(!c)return;const f=c[e];if(f){const u=Bt(c,a,p),g=c.args(a,...u,n.scale);g[1]=g[1].map(d=>R(d)),i.push(...c.req),r+=f(a,...g,...u,s+o)}}),{req:i,glsl:r}},fi=(a,e,t,s)=>{let i="";const r=Le(e),n=Le(t);return a.forEach(o=>{let l="",p=0;le(o,"decors").forEach(f=>{const[u]=f.args;if(u==="dlinearGrad"){const[,g,d,m]=f.args;if(m.length<1)return;switch(l+=`gp=${xt(d)};`,l+=`tmp=${ms("gp",m)};`,g){case"decorsIn":l+=`r=${Be("r*tmp")};`;break;case"decorsOut":l+=`ro=${Be("ro+(1.-ro)*tmp")};`;break;case"out":l+=`rt=${Be("rt*(1.-tmp)")};`;break;case"in":default:l+=`r=${Be("r+tmp")};`;break}}if(u==="dpattern"||u==="dimage"){let[,g,d,m,,,b]=f.args;u==="dimage"&&([,,g,d,m,,,,,,,,b]=f.args);const w=Ze("decorsEffects","frag",le(b)),k=p%e,y=Gt(p/e),T=(d?"(1.-tD.w)*":"tD.w*")+R(m);s.push(...w.req),p++,l+="uv=vDUV.xy;"+(w.glsl||"")+`tD=texture2D(uDecors,uv/vec2(${R(r)},${R(n)})+vec2(${R(k/r)},${R(y/n)}));`+(g==="out"?`ro=${Be("ro-"+T)};`:`r=${Be("r+"+T)};`)}}),i+=Pe(l,"uE.x",[o.uniqueID])}),i},ot=(a,e,t)=>{t.forEach(s=>{const[i,...r]=s.args,n=Mt(i,e);if(n&&n.paddingFrag){const o=Bt(n,e,r),[l,p,c,f]=n.paddingFrag(e,...o,s.scale);$e(a,[l*x,p*x,c*x,f*x])}})},Re=(a,e,t)=>a.addEventListener(e,t,{passive:!0}),ss=(a,e,t)=>a.removeEventListener(e,t,{passive:!0}),V=(a,e)=>{Object.keys(e).forEach(t=>{a.style.setProperty(t,e[t],"important")})},is=a=>a.nodeType===1&&["BR","WBR","HR","IMG"].every(e=>e!==a.nodeName),lt=a=>a.getBoundingClientRect(),xs=(a,e={})=>{let t;const s=["webgl2","webgl","experimental-webgl"];for(const i of s)if(t=a.getContext(i,e))return t},He=a=>new ne(a.x+X.scrollX,a.y+X.scrollY,a.width,a.height),at=a=>new ne(a.x*x,a.y*x,a.width*x,a.height*x),he=()=>new ne(1/0,1/0,-1/0,-1/0),vs=()=>new ne(-1/0,-1/0,-1/0,-1/0),Je=(a,e)=>{a.x===1/0&&(a.x=e.x,a.y=e.y,a.width=e.width,a.height=e.height);let t=S(0,a.x-e.x);a.x-=t,a.width+=t,a.width+=S(0,e.right-a.right),t=S(0,a.y-e.y),a.y-=t,a.height+=t,a.height+=S(0,e.bottom-a.bottom)},ct=(a,e)=>{a.width=S(a.width,e.width),a.height=S(a.height,e.height)},ui=(a,e)=>{a.x=S(a.x,e.x),a.y=S(a.y,e.y),a.width=S(a.width,e.width),a.height=S(a.height,e.height)},gt=a=>[a.x,a.y,a.width,a.height],ws=a=>{const e=[];for(let t=0;t<a.length;t++){const s=a[t];s.width>.1&&s.height>.1&&e.push(s)}return e},as=(a,e)=>re()*(e-a)+a,di=(a,e,t,s,i)=>{const r=a+(t-a)/2,n=e+(s-e)/2,o=ft((a-t)**2+(e-s)**2)/2,l=W-ti(s-e,t-a)+W+i*2;return[r+o*ge(l),n+o*we(l)]},gi=(a,e,t,s,i)=>{const r=e-s/2,n=t-i/2;a=ds(a,0,360);let o=[r+s,n];a>270?o=[r,n]:a>180?o=[r,n+i]:a>90&&(o=[r+s,n+i]);const[l,p]=di(e,t,o[0],o[1],(a-90)/180*W);return[l,p,e-(l-e),t-(p-t)]},mi=(a,e,t,s)=>{const i=1/si(a/2),r=1/(t-s);return[i/e,0,0,0,0,i,0,0,0,0,(s+t)*r,-1,0,0,2*s*t*r,0]},ys=(a,e=",")=>{const t=/[[\]]/gm,s=[],i=[];let r=a,n,o=0;for(;n=t.exec(a);)o===0&&i.push(n.index),o+=n[0]==="["?1:-1,o===0&&i.push(n.index+1);for(let l=0;l<i.length;l+=2){const[p,c]=[i[l],i[l+1]],f=a.substring(p,c);r=r.replace(f,s.length+"$_$"),s.push(f)}return r.replace(/'[^']+?'/g,l=>(s.push(l),s.length+"$_$")),r?r.split(e).map(l=>l.replace(/\d+?\$_\$/g,p=>s[parseInt(p)])):[]},rs=a=>{const e=a.match(/\((.+?)\)/)[1].split(",").map(t=>parseFloat(t));for(let t=0;t<3;t++)e[t]=e[t]/255;return e.length===3&&e.push(1),e},bi=a=>"#"+a.slice(0,3).map(e=>Gt(e*255).toString(16).padStart(2,"0")).join(""),Ss=a=>{if(a[0]!=="#")return[0,0,0,0];a=a.substring(1);let e;return a.length<5?e=a.split("").map(t=>parseInt(t,16)*16):e=a.match(/.{1,2}/g).map(t=>parseInt(t,16)),e.length===3?e.push(1):e[3]=e[3]/255,e},ns=a=>{const e=Ss(a);return e?`rgba(${e.join(",")})`:a},mt=a=>{const e=Ss(a);return`vec4(${e[0]/255},${e[1]/255},${e[2]/255},${e[3]})`},xi=(a,e,t,s,i)=>{switch(e-=s,t-=i,a){case"center":return[e/2,t/2];case"topcenter":return[e/2,0];case"topright":return[0,t];case"centerleft":return[0,t/2];case"centerright":return[e,t/2];case"bottomleft":return[0,t];case"bottomcenter":return[e/2,t];case"bottomright":return[e,t]}return[0,0]},vi=a=>a.reduce((e,t)=>{const s=(t+"").split("-");if(s.length===2){let[i,r]=s.map(o=>qt(o));const n=!isNaN(i);n?r+=1:[i,r]=s.map(o=>o.charCodeAt(0)),[i,r]=[ve(i,r),S(i,r)];for(let o=i;o<r;o++)e.push(n?o:String.fromCharCode(o))}else e.push(t);return e},[]),Es=a=>{const e={};return ys(a,",").forEach(t=>{if(!t||!t.trim())return;let[s,i]=t.split(/:/).map(r=>r.trim());i=qt(i),e[s]=i}),e},qt=a=>{if(a===void 0)return;if(a==="true"||a==="false")return a==="true";if(a.search(/[^\d.\-+]/)===-1&&a.search("-")<1)return parseFloat(a);if(a[0]==="["){const t=ys(a.substring(1,a.length-1)),s=[];return t.forEach(i=>{i.trim().length&&s.push(qt(i.trim()))}),s}const e=/[("']+(.+?)'?"?\)?$/g.exec(a);return e?e[1]:a},pe={effects:7,decorsEffects:1,staticEffects:1,appearEffects:2,disappearEffects:2,changeAppearEffects:2,mouseEffects:2,scrollEffects:2},Y={effects(a){const[e,t,s,i,r,n,o]=a,l=t*e,p=s*l,c=l-p;let f=`${Me}cur=uT;`;if(r!==0){const u=ni[Ft(i)];f+=`cur=cur+${R(e)}*(${u}*${R(r)});`}if(f+=`${E}total=mod(cur,${R(e)}),`,f+=t>=1?"t=1.;":"t=0.;",t<1&&(f+=`if(total<${R(l)}){t=1.;`,s>0&&(f+=`if(total<${R(p)}){t=total/${R(p)};t=${Ae.inOutSine};}else if(total>${R(c)}){t=1.-((total-${R(c)})/${R(p)});t=${Ae.inOutSine};}`),f+="}"),o<1||n>0){const u=o-n;f+=`t=t*${R(u)}+${R(n)};`}return f},appearEffects(a){const[e,t]=a;return ci("(1.-vCT)",t,e)},mouseEffects(a,e){let[t,s]=a;return t=S(t*e,1),`${E}l=${R(t)},s=${R(s)},d=min(mD/l,1.),t=max(0.,min(1.,1.-(mD/l)))*s;`},scrollEffects(a,e){return a==="scrollEffects"?`t=abs(uSR${e});`:""},process(a,e,t){return a==="effects"?this.effects(e):a==="staticEffects"?`${Ot}t=${R(e[0])};`:a==="mouseEffects"?this.mouseEffects(e,t):hi(a)?this.appearEffects(e):a==="decorsEffects"?`${Ot}t=${R(e[0])};`:`${E}t=1.;`}},Ct={fdistortion:{effects:{base:pe,args:(a,e,t,s)=>{e=Y.process(a,e,s);const[i,r,n,o,l,p,c,f]=t;return[e,[S(i*s/2,1),S(r*s/2,1),n*s,o*s,l,p,c===0?0:W*2*(1/c),f===0?0:W*2*(1/f)]]},paddingFrag:(a,e,[,,t,s],i)=>[t*i,s*i,t*i,s*i],req:["dst"],frag:(a,e,t,s,i,r)=>(t[2]+="*t",t[3]+="*t",`{${e+Y.scrollEffects(a,r)}dst(uv,ep,${t.join()});}`),appearFrag:(a,e,t)=>(t[2]+="*"+e,t[3]+="*"+e,`dst(uv,ep,${t.join()});`)}},fglitch:{effects:{base:pe,args:(a,e,t,s)=>{e=Y.process(a,e,s);const[i,r,n,o,l,p]=t,c=o*W/180;return[e,[i*s,r,n*x*s,`vec2(${R(we(c))},${R(ge(c))})`,xt(o+90),l,p]]},paddingFrag:(a,e,[t,,,s],i)=>{const r=t*i,n=ae(we(s*W/180)),o=ae(ge(s*W/180));return[r*n,r*o,r*n,r*o]},req:["glitch"],frag:(a,e,t,s,i,r)=>`{${e+Y.scrollEffects(a,r)}glitch(uv,ep,t,${t.join()});}`,appearFrag:(a,e,t)=>`glitch(uv,ep,${e},${t.join()});`}},fbubble:{mouseEffects:{base:pe,args:(a,e,t,s)=>(e=Y.process(a,e,s),[e,[]]),paddingFrag:(a,[e,t],s,i)=>Array(4).fill(e/4*ae(t)*i),req:[],frag:(a,e,t,s,i,r)=>`{${e}uv.x-=d*(l*(1.-d)/2.)*s*mSin*ep.x;uv.y-=d*(l*(1.-d)/2.)*s*mCos*ep.y;}`}},vfollow:{mouseEffects:{args:(a,e,[t,s,i,r,n],o)=>[e,[li[Ft(t)],s*o,i*o,S(r,0),S(n,0)]],paddingVert:(a,e,[,t,s,i,r],n)=>{[t,s]=[ae(t)*n,ae(s)*n];const[o,l]=[i<.5?1-i:.5*(.5/i),r<.5?1-r:.5*(.5/r)];return{offset:[t*o,s*l,t*o,s*l]}},req:["follow"],vert:(a,e,t)=>`follow(pos,${t.join()});`}},cglitch:{effects:{base:pe,args:(a,e,t,s)=>{e=Y.process(a,e,s);const[i,r,n,o,l,p,c,f,u]=t,g=o*W/180;return[e,[mt(i),mt(r),n*s,`vec2(${R(we(g))},${R(ge(g))})`,xt(o+90),+l,p,c*x,f,u*x*s]]},paddingFrag:(a,e,[,,t,s,,,,i],r)=>{const n=t*S(1,i)*r,o=ae(we(s*W/180)),l=ae(ge(s*W/180));return[n*o,n*l,n*o,n*l]},req:["cglitch"],fragColor:(a,e,t,s,i,r)=>`{${e+Y.scrollEffects(a,r)}cglitch(uSampler,uv,ep,tO,tA,t,${t.join()});}`,appearFragColor:(a,e,t)=>`cglitch(uSampler,uv,ep,tO,tA,${e},${t.join()});`}},falpha:{effects:{base:pe,args:(a,e,[t],s)=>(e=Y.process(a,e,s),[e,[1-t,t]]),req:[],frag:(a,e,t,s,i,r)=>`{${e+Y.scrollEffects(a,r)}tC.w*=${t[0]}+${t[1]}*(1.-t);}`,appearFrag:(a,e,t)=>`tC.w*=${t[0]}+${t[1]}*(1.-${e});`}},falphaNoise:{effects:{base:pe,args:(a,e,[t,s,i,r,n],o)=>(e=Y.process(a,e,o),[e,[t,s*o,i*o,r*x*o,n*x*o]]),req:["noise"],frag:(a,e,t,s,i,r)=>`{${e+Y.scrollEffects(a,r)}tC.w-=noise(uv,ep,t,${t.slice(1).join()})*${t[0]};}`,appearFrag:(a,e,t)=>`tC.w-=noise(uv,ep,${e},${t.slice(1).join()})*${t[0]};`}},fnoiseDistortion:{effects:{base:pe,args:(a,e,[t,s,i,r,n,o],l)=>(e=Y.process(a,e,l),[e,[t*l,s*l,i*l,r*l,n*x*l,o*x*l]]),paddingFrag:(a,e,[t,s],i)=>[t*i,s*i,t*i,s*i],req:["uvNoise"],frag:(a,e,t,s,i,r)=>`{${e+Y.scrollEffects(a,r)}uvNoise(uv,ep,t,${t.join()});}`,appearFrag:(a,e,t)=>`uvNoise(uv,ep,${e},${t.join()});`}},vtranslate:{effects:{base:pe,args:(a,e,[t,s,i],r)=>(e=Y.process(a,e,r),[e,[t*r,-s*r,i*r]]),paddingVert:(a,e,[t,s,i],r)=>({trans:[t*r,s*r,i*r]}),req:[],vert:(a,e,t,s,i,r)=>`{${e+Y.scrollEffects(a,r)}pos.xyz+=toPos(vec3(${t.join()}))*t;}`,appearVert:(a,e,t)=>`pos.xyz+=toPos(vec3(${t.join()}))*${e};`}},vscale:{effects:{base:pe,args:(a,e,[t,s],i)=>(e=Y.process(a,e,i),[e,[t,s]]),paddingVert:(a,e,[t,s])=>({scale:[t,s]}),req:[],vert:(a,e,t,s,i,r)=>`{${e+Y.scrollEffects(a,r)}pos*=vec4(vec2(${t.join()})*t+vec2(1.),1.,1.);}`,appearVert:(a,e,t)=>`pos*=vec4(vec2(${t.join()})*${e}+vec2(1.),1.,1.);`}},vrotate:{effects:{base:pe,args:(a,e,t,s)=>(e=Y.process(a,e,s),[e,t.map(i=>i/2*W/180)]),req:["quat"],paddingVert:()=>({rotate:!0}),vert:(a,e,t,s,i,r)=>`{${e+Y.scrollEffects(a,r)}pos=quat(vec3(${t.join()})*t)*pos;}`,appearVert:(a,e,t)=>`pos=quat(vec3(${t.join()})*${e})*pos;`}},fslide:{effects:{base:pe,args:(a,e,[t],s)=>[Y.process(a,e,s),[ms("a",[[0,0],["t",0],["(t+.02)",1]]),xt(t)]],req:[],frag:(a,e,t,s,i,r)=>`{${e+Y.scrollEffects(a,r)}${E}a=${t[1]};tC.w=tC.w*(${t[0]});}`,appearFrag:(a,e,t,s,i)=>`{${E}t=${e},a=${t[1]};tC.w=tC.w*(${t[0]});}`}},fcolor:{effects:{base:pe,args:(a,e,[t],s)=>(e=Y.process(a,e,s),[e,[mt(t)]]),req:["color"],fragColor:(a,e,t,s,i,r)=>`{${e+Y.scrollEffects(a,r)}color(tA,${t[0]},t);}`,appearFragColor:(a,e,t)=>`color(tA,${t[0]},${e});`}},fcolorNoise:{effects:{base:pe,args:(a,e,[t,s,i,r,n],o)=>(e=Y.process(a,e,o),[e,[mt(t),s*o,i*o,r*x*o,n*x*o]]),req:["noise","color"],fragColor:(a,e,t,s,i,r)=>`{${e+Y.scrollEffects(a,r)}color(tA,${t[0]},noise(uv,ep,t,${t.slice(1).join()}));}`,appearFragColor:(a,e,t)=>`color(tA,${t[0]},noise(uv,ep,${e},${t.slice(1).join()}));`}}},oe={uniqueID:0,process(a,e,t){return Object.keys(e).forEach(s=>{fe.hasOwnProperty(s)||console.warn(`WGLTR. Option ${s} not found!`)}),e.uniqueID=this.uniqueID++,e.data={},e.node=a,e.childs={},e.inherit={},e.own={},e.id={},e.gid=t.gid||{},e.parent=t,Object.keys(t).forEach(s=>{e.childs[s]=[],fe.hasOwnProperty(s)&&this.setOption(e,s,e[s])}),e},setOption(a,e,t){const s=ai.some(i=>e===i)?fe:a.parent;if(t===void 0)a[e]=s[e],a.childs[e].forEach(i=>i[e]=s[e]),delete a.own[e],delete a.id[e],s!==fe&&(a.inherit[e]=s.inherit[e]||s,a.inherit[e].childs[e].push(a,...a.childs[e]),a.childs[e]=[]);else{if(t=this.resolvePresets(a,e,t),a[e]=t,!a.own[e]&&(a.id[e]=a.gid[e]=(a.gid[e]||0)+1,a.own[e]=!0,a.inherit[e])){const i=a.inherit[e].childs[e];a.childs[e]=i.filter(r=>{let n=r.parent;for(;n&&n!==a;)n=n.parent;return!!n}),ut(i,a),a.childs[e].forEach(r=>{ut(i,r)}),a.inherit[e]=void 0}a.childs[e].forEach(i=>i[e]=t)}},resolvePresets(a,e,t){const s=bs(e),i=vt[s];if(i&&typeof t=="string"&&(t=[t]),!i||!Array.isArray(t))return t;const r=[];return t.forEach(n=>{if(typeof n!="string"){r.push(n);return}const o=i[n];if(!o){console.warn(`WGLTR. Preset '${n}' in '${e}' not found!`);return}const l=Array.isArray(o)?o:o.presets;r.push(...l),Object.entries(o.options||{}).forEach(([p,c])=>{this.setOption(a,p,c)})}),r},getIDs(a,e){return[a.uniqueID,...a.childs[e].map(t=>t.uniqueID)]},getNonInheritedValue(a,e,t,s,i){return s&&!e.own[a]&&(e=t),e.own[a]&&e[a]!=="inherit"?e[a]:i},getAppear(a,e,t,s,i){const r=!!(e.parent&&e.parent.change),n=e.options,o=r?e.parent.options:{};let l=oe.getNonInheritedValue(`appear${a}`,n,o,r,i);return(t||s)&&(l=oe.getNonInheritedValue(`changeAppear${a}`,n,o,r,l)),s&&(l=oe.getNonInheritedValue(`disappear${a}`,n,o,r,l)),l}},Cs={loaded:[],push(a){const e=Date.now(),t=this.loaded.find(s=>s===a);return t?t[K+"timeStamp"]:(a[K+"timeStamp"]=e,this.loaded.push(a),e)},update(){me.fonts.forEach(a=>{a.status==="loaded"&&this.push(a)})},check(a,e,t,s){this.update(),s=s||new Date().getTime(),me.fonts.load(a,e||"a").then(i=>{if(i.length){let r=!1;i.forEach(n=>{this.push(n)>s&&(r=!0)}),r&&t()}else setTimeout(()=>Cs.check(a,e,t,s),1)})}},Wt={cache:{},init(){this.el=Te("div"),this.baseline=Te("span"),this.text=Te("span"),V(this.el,{position:"absolute",opacity:"0","pointer-events":"none",top:"-20000px",left:"-20000px","z-index":"-9999",display:"flex","flex-direction":"row","align-items":"baseline"}),V(this.baseline,{width:"1px",height:"1px",display:"block"}),this.text.innerHTML="l",this.el.append(this.text,this.baseline),me.body.appendChild(this.el),this.range=me.createRange(),this.range.setStart(this.text,0),this.range.setEnd(this.text,1)},clear(a){a=a.toLowerCase(),Object.keys(this.cache).forEach(e=>{e.toLowerCase().indexOf(a)>=0&&delete this.cache[e]})},get(a,e){const t=`${a} 100px ${e}`;if(this.cache[t])return this.cache[t];this.el.style.font=t;const s=lt(this.baseline),i=this.range.getClientRects()[0],r=(s.bottom-i.top)/i.height;return this.cache[t]={offset:r,height:i.height}}};Wt.init();const zt={init(){this.el=Te("span"),this.el.style="white-space:nowrap;display:inline;font-size:1px;letter-spacing:100px;position:absolute;top:-2000px;opacity:0;pointer-events:none;",me.body.append(this.el),this.range=me.createRange()},setNode(a){this.y=-1e5,this.content=a.textContent||"",this.length=this.content.length,this.el.textContent=a.textContent,this.node=this.el.childNodes[0]},get(a){let e=1/0,t=-1/0,s=0;for(let i=a;i<this.length&&!/[\s\n\r\t]/g.test(this.content[i]);i++){this.range.setStart(this.node,i),this.range.setEnd(this.node,i+1);const r=ws(this.range.getClientRects());if(r.length){if(s+=1,t-e>=100&&(r[0].left<e||r[0].right>t)){s--;break}e=ve(e,r[0].left),t=S(t,r[0].right)}}return S(s,1)}};je&&zt.init();class wt{constructor(){this.canvas=Te("canvas"),this.ctx=this.canvas.getContext("2d",{willReadFrequently:!0})}resize(e,t,s=void 0){return this.canvas.width=S(e,1),this.canvas.height=S(t,1),s&&this.style(s),this}gco(e="source-over"){this.ctx.globalCompositeOperation=e}style(e){return this.ctx.strokeStyle=this.ctx.fillStyle=e}fill(e){e&&(this.ctx.fillStyle=e),this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height)}clear(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)}shadow(e,t,s,i){const{ctx:r}=this;r.shadowOffsetX=e,r.shadowOffsetY=t,r.shadowBlur=s,r.shadowColor=i}createPattern(e="repeat"){return this.ctx.createPattern(this.canvas,e)}drawLinearGradient(e,t,s,i,r,n){const[o,l,p,c]=gi(e,t,s,i,r),f=this.ctx.createLinearGradient(o,l,p,c);this.drawGradient(t,s,i,r,f,n)}drawRadialGradient(e,t,s,i,r,n,o,l,p){let c;switch(e){case"contain":c=S(i,r)/2;break;case"circumscribed":c=ft(Rt(i,2)+Rt(r,2))/2;break;default:c=ve(i,r)/2;break}const f=this.ctx.createRadialGradient(n*i,o*r,0,n*i,o*r,c*l);this.drawGradient(t,s,i,r,f,p)}drawGradient(e,t,s,i,r,n){let o=0;n.forEach(([l,p])=>{r.addColorStop(S(l,o),ns(p)),o=l}),this.style(r),this.ctx.fillRect(e-s/2,t-i/2,s,i)}drawDecorations(e,t,s,i){const r=this.ctx;e.forEach(([n,o,l,...p])=>{if(J.gco(o?"destination-out":void 0),l.length||(r.globalAlpha=l),n==="fill"){r.fillRect(0,0,s,i);return}const c=Ts.get(n,t,"repeat",s,i,l.length?ns(l):"#000",...p.map(f=>f));if(c){if(r.save(),r.fillStyle=c,r.imageSmoothingEnabled=!1,n==="noise"){r.imageSmoothingEnabled=!!p[1];let[,,f,u]=p;t&&(f*=x,u*=x),r.fillStyle.setTransform(new DOMMatrix().scale(f,u))}r.fillRect(0,0,s,i),r.restore()}}),r.globalAlpha=1,J.gco()}}const H=new wt,J=new wt,Ts={cache:{},cacheCount:0,canvas:new wt,get(a,e,t,s,i,r,...n){if(!this[a])return;const o=`${a}_${s}_${i}_${r}_${e}_${x}_${n.join("-")}`;return this.cache[o]?this.cache[o]:(this.cacheCount>50&&(this.cache={}),this.cacheCount++,this.cache[o]=this.createPattern(a,e,t,s,i,r,...n))},createPattern(a,e,t,s,i,r,...n){return s=G(s*x),i=G(i*x),this.canvas.resize(s,i),this.canvas.style(r),this[a](s,i,e,...n),this.canvas.createPattern(t)},image(a,e,t,s){const{ctx:i}=this.canvas;i.drawImage(s,0,0,a,e)},lines(a,e,t,s=3,i=1,r=0){const{ctx:n}=this.canvas;t&&(i*=x,s*=x),s=S(.1,G(s+i)),r*=W/180;const o=r-W/2;let[l,p]=[we(r),ge(r)];const[c,f]=[we(o),ge(o)],[u,g]=[G(a/2),G(e/2)],d=ft(a**2+e**2);l*=d,p*=d,n.beginPath();for(let m=-d/2;m<d/2;m+=s)n.moveTo(u-l-m*c,g-p-m*f),n.lineTo(u+l-m*c,g+p-m*f);n.lineWidth=i,n.stroke()},zigzag(a,e,t,s=3,i=1,r=2,n=2,o=0){const{ctx:l}=this.canvas;t&&(i*=x,s*=x),s=S(.1,G(s+i+n)),o*=W/180;const p=o-W/2;let[c,f]=[we(o),ge(o)];const[u,g]=[we(p),ge(p)],[d,m]=[G(a/2),G(e/2)],b=ft(a**2+e**2);c*=b,f*=b;const w=et(b/r),k=o+W/2,[y,T]=[we(k)*n,ge(k)*n];l.beginPath();for(let z=-b/2;z<b/2;z+=s){const $=d-c-z*u,A=m-f-z*g,D=d+c-z*u,L=m+f-z*g,Z=(D-$)/w,te=(L-A)/w;l.moveTo($,A);for(let q=0;q<=w;++q){const N=$+Z*q,F=A+te*q,_=N-Z/2,se=F-te/2;l.lineTo(_-y,se-T),l.lineTo(N,F)}}l.lineWidth=i,l.stroke()},circles(a,e,t,s=!1,i=1,r=5,n=5,o=4,l=4,p=0,c=0){const{ctx:f}=this.canvas;t&&(i*=x,o*=x,l*=x,p*=x,c*=x,r*=x,n*=x),f.beginPath();for(let u=0;u<a;){let g=0;for(let d=0;d<e;){f.moveTo(u,d);const m=as(r,n);f.arc(u-m,d,m,0,360),d+=m*2+S(l,0),d+=re()*c,g=S(g,m)}u+=g*2+S(o,0),u+=re()*p}f.lineWidth=i,s?f.fill():f.stroke()},triangles(a,e,t,s=!1,i=1,r=5,n=5,o=4,l=4,p=0,c=0){const{ctx:f}=this.canvas;t&&(i*=x,o*=x,l*=x,p*=x,c*=x,r*=x,n*=x),f.beginPath();for(let u=0;u<a;){let g=0;for(let d=0;d<e;){const m=as(r,n);f.moveTo(u,d),f.lineTo(u+m*2,d),f.lineTo(u+m,d+m*2),f.lineTo(u,d),d+=m*2+S(l,0),d+=re()*c,g=S(g,m)}u+=g*2+S(o,0),u+=re()*p}f.lineWidth=i,s?f.fill():f.stroke()},noise(a,e,t,s=.5){const{ctx:i}=this.canvas;let r=a*e;s*=2;let n=0;const o=new ImageData(new Uint8ClampedArray(4*r),a,e),l=o.data,p=s>1;for(p&&(s-=1);r--;)l[n+3]=p?re()<s?255:re()*255:re()>s?0:re()*255,n+=4;i.putImageData(o,0,0)}},ks={canvas:new wt,init(){const{ctx:a}=this.canvas;this.canvas.resize(10,10),a.fillStyle="#000",a.textBaseline="middle",a.font="10px sans-serif"},is(a){const{ctx:e}=this.canvas;this.canvas.clear(),e.fillText(a,0,5);const t=e.getImageData(0,0,10,10).data;for(let s=0;s<t.length;s+=4)if(t[s]>0||t[s+1]>0||t[s+2]>0)return!0;return!1}};ks.init();class wi{constructor(e,t){const s=lt(e.el);if(this.el=t,this.wgltr=e,this.range=me.createRange(),this.elRect=He(s),this.elRectStart=He(s),this.resizeElRect=this.elRect,this.prevElRect=this.elRect,this.dprRect=at(s),this.resizeTime=0,this.resizeTimer=0,this.words=[],this.chars=[],this.nodes=[],this.rootNodes=[],this.options=[],e.options.wrapOnly){const i=oe.process(void 0,e.options,fe);e.rootWrappers.forEach(r=>this.process(r,i))}else this.process(t);this.nodes=this.nodes.sort((i,r)=>i.level-r.level),this.changeNodes=this.nodes.filter(i=>!!i.change),this.refreshStyles()}process(e,t=fe,s=void 0,i=void 0,r=-1){const n=Te("span"),o=Te("span");V(n,{color:"rgba(0,0,0,0)",display:"inline",background:"none",font:"inherit","text-shadow":"none"}),V(o,{position:"absolute",width:"0",height:"0",transition:"color 1ms step-start",color:"inherit",opacity:"0"});let l=e[nt];!l&&s&&i===s&&(l={});const p=!!l,c=Array.from(e.childNodes),f=c.reduce((g,d)=>(is(d)&&g.push(d),g),[]),u={level:s?s.level+1:0,changeParent:i,changeIndex:r,wrap:n,parent:s,node:e,thief:o,styles:X.getComputedStyle(e)};p?(l=oe.process(u,l,t),l.index=this.options.length,this.options.push(l),l.change&&(u.change={nodes:[],order:[],started:!1,visible:0,current:0,previous:0,time:0},i=u,u.styles.display==="inline"?V(n,{display:"inline-block",position:"relative"}):u.styles.position==="static"&&V(e,{position:"relative"}),V(n,{"text-align":"center"}))):(l=t,u.inherited=!0),l.customTextDecorationColor||V(e,{"text-decoration-color":"var(--wgltr-color)"}),l.cssShadows||V(n,{"text-shadow":""}),u.options=l,s&&s.change&&(s.change.nodes.push(u),V(e,{"text-align":ke(l.changeAlign,u.styles.textAlign),left:"0",top:"0"}),r>0&&this.hideChangeEl(s.change,r)),f.forEach((g,d)=>{u.change&&(r=d),this.process(g,u.options,u,i,r)}),c.forEach(g=>n.appendChild(g)),e.append(n,o),["innerHTML","innerText","textContent"].forEach(g=>{Object.defineProperty(e,g,{configurable:!0,set(d){n[g]=d},get(){return n[g]}})}),e.insertAdjacentHTML=n.insertAdjacentHTML.bind(n),Re(o,"transitionstart",()=>this.transitionCallback()),Re(o,"transitionend",()=>this.transitionCallback()),this.nodes.push(n[K+"Info"]=u),(!s||!s.wrap)&&this.rootNodes.push(u)}transitionCallback(){this.wgltr.colorsBlocked||(this.wgltr.colorsChanged=!0,this.wgltr.colorsChangedTimer=fe.colorsChangeDelay)}toggleChangeEl(e,t){this.hideChangeEl(e,e.visible);const s=e.nodes[t];V(s.node,{width:"",position:"relative",visibility:"visible",display:"","z-index":"","user-select":"","pointer-events":""}),e.visible=t}hideChangeEl(e,t){V(e.nodes[t].node,{width:"100%",display:"inline-block",position:"absolute",left:"0","z-index":"-1","pointer-events":"none","user-select":"none"})}isChangeCurrent(e){return e.changeParent?e.changeParent.change.current===e.changeIndex:!0}isVisible(e){return e.changeParent?e.changeParent.change.visible===e.changeIndex:!0}isScreenVisible(e){if(e.changeParent){const t=e.changeParent.change;return t.current===e.changeIndex||t.isDisappear&&t.previous===e.changeIndex}return!0}refreshStyles(){this.useShadow=!1,this.sizeChanged=!1,this.nodes.forEach(e=>{const t=e.styles;e.weight=t.fontWeight,e.family=t.fontFamily,e.kerning=t.fontKerning.search("none")===-1,e.spacing=(parseFloat(t.letterSpacing)||0)*x,e.transform=t.textTransform,e.cssSize=parseFloat(t.fontSize);const s=e.cssSize*x;e.size!==void 0&&e.size!==s&&(this.sizeChanged=!0),e.size=s;const i=t.hyphenateCharacter||t.webkitHyphenateCharacter||'"-"';e.hyphensStr=i==="auto"?"-":i.substring(1,i.length-1);const r=t.fontVariant.search("small-caps")!==-1?"small-caps":"normal";if(e.font=r+" "+t.fontStyle+" "+e.weight+" "+e.size+"px "+e.family,e.opacityChain=[],this.wgltr.options.wrapOnly&&!e.parent){let n=e.node.parentNode;for(;n!==this.wgltr.el;)e.opacityChain.push(parseFloat(X.getComputedStyle(n).opacity)),n=n.parentNode;e.opacityChain.reverse()}this.processColor(e,t.color,t.opacity),e.options.cssShadows&&this.processShadow(e,t.textShadow),e.shadow&&(this.useShadow=!0)})}refreshColors(){return this.nodes.forEach(e=>{this.processColor(e,e.styles.color,e.styles.opacity),this.useShadow&&e.options.cssShadows&&this.useShadow&&this.processShadow(e,e.styles.textShadow)}),this.nodes.some(e=>e.colorChanged||e.shadowColorChanged)}processColor(e,t,s){let i=e.parent;for(;i&&t==="rgba(0, 0, 0, 0)";)t=i.rawColor,i=i.parent;e.opacity=parseFloat(s);const r=[e.opacity];for(i=e.parent;i;)r.push(i.opacity),i=i.parent;r.reverse(),r.unshift(...e.opacityChain),s=r.reduce((n,o)=>n*o,1),e.colorChanged=e.rawColor!==t||e.rawOpacity!==s,e.rawColor=t,e.rawOpacity=s,e.color=rs(e.rawColor),e.color[3]=e.color[3]*s,e.node.style.setProperty("--wgltr-color",t)}processShadow(e,t){if(t!=="none"){if(t!==e.prevShadow){const s=t.split("x, ").map(r=>{const n=r.match(/(rgba?\(.+?\))\s(.+?)\s(.+?)\s(.+)/);return[rs(n[1]),parseFloat(n[2]),parseFloat(n[3]),parseFloat(n[4])]}).reverse(),i=e.prevShadows;i?(e.shadowColorChanged=!i.every((r,n)=>r[0].every((o,l)=>o===s[n][0][l])),e.shadowChanged=!i.every((r,n)=>r.every((o,l)=>o===s[n][l]||l===0))):(e.shadowColorChanged=!0,e.shadowChanged=!0),e.shadow=s,e.prevShadows=s}else e.shadowChanged=!1,e.shadowColorChanged=!1;e.prevShadow=t}else e.shadowChanged=!1,e.shadowColorChanged=!1,e.parent&&(e.shadow=e.parent.shadow)}getTextNodes(e,t,s){const i=[],r=Array.from(e.childNodes).filter(n=>(is(n)||n.nodeType===3)&&n.textContent.trim()!=="");return r.forEach((n,o)=>{const l=o===0,p=o===r.length-1;if(n.nodeType===3){let c,f=e;for(;!c;)c=f[K+"Info"],f=f.parentElement;const u={info:c,node:n};l&&(u.start=t),p&&(u.end=s),i.push(u)}else{const c=n.children.length&&n.children[0][K+"Info"],f=c?n.children[0]:n,u=c&&!c.inherited;let g=l?t:void 0,d=p?s:void 0;u&&(g=g?[...g,c]:[c],d=d?[...d,c]:[c]),i.push(...this.getTextNodes(f,g,d))}}),i}calcSizes(){this.resizeElRect=He(lt(this.wgltr.el)),this.textNodes.forEach(e=>e.rects=[]),this.calcNodesBoundingBox(),this.changeNodes.length&&this.calcChangeBoundingBox(this.changeNodes,0),this.minNodeOffset=1/0,this.textNodes.forEach(e=>{e.rect=he(),e.rects.forEach(t=>{this.minNodeOffset=ve(this.minNodeOffset,G(t.x*x)),Je(e.rect,at(t))})})}calcNodesBoundingBox(){const{range:e}=this,t=He(lt(this.wgltr.el));this.textNodes.forEach(s=>{const{info:i,node:r}=s,{parent:n}=i,o=i.spacing/x;if(!this.isVisible(i))return;if(n&&n.change){i.changeWidth=0,e.selectNode(i.node);const p=e.getClientRects();for(let c=0;c<p.length;c++)i.changeWidth+=p[c].width-o}e.setStart(r,S(r.textContent.search(/[^\s\n\r\t]/),0)),e.setEnd(r,r.length);const l=Array.from(e.getClientRects());s.rects.push(...l.map(p=>{const c=He(p);return c.x-=t.x,c.y-=t.y,c}))})}calcChangeBoundingBox(e,t){const s=e[t],i=s.change.visible;s.change.nodes.forEach((r,n)=>{this.toggleChangeEl(s.change,n),t+1>=e.length?this.calcNodesBoundingBox():this.calcChangeBoundingBox(e,t+1)}),this.toggleChangeEl(s.change,i)}resize(){this.changeNodes.forEach(({change:e})=>{e.nodes.forEach(t=>{t.changeWidth=0})}),this.refreshStyles(),this.wgltr.removeTransform(),this.textNodes=[],this.rootNodes.forEach(e=>{this.textNodes.push(...this.getTextNodes(e.wrap))}),this.calcSizes(),this.wgltr.restoreTransform(),this.nodes.forEach(e=>{const{offset:t,height:s}=Wt.get(e.weight,e.family);e.baselineOffset=t,e.fontHeight=s*(e.size/100),e.fontBaseline=e.fontHeight*t})}refreshCoords(e=!1){const{range:t}=this;this.wgltr.removeTransform();const s=lt(this.wgltr.el);this.elRect=He(s),this.elDprRect=at(s),this.canvasPosDiff=this.elRect.x-this.elRectStart.x,this.reset(),this.prevDprRect=this.dprRect,this.dprRect=he(),this.textNodes.forEach(i=>{const{info:r,node:n}=i,o=n.textContent,l=r.options.ligatures.sort((k,y)=>k.length<y.length?1:-1).map(k=>k.split(""));Cs.check(r.font,o,()=>{this.wgltr.fontLoaded(r.family)});const p=this.isVisible(r),c=this.isScreenVisible(r);if(!/[^\s\n\r\t]/g.test(o))return;je&&zt.setNode(n);const f=r.spacing/x,u=[];let g=0,d={textNode:i,chars:[],isFirst:!0,rect:he()},m=he(),b=!1;for(;g<o.length;){const k=/\s/g.test(o[g]),y=g===o.length-1,T=m.x!==1/0;let z=/[\s\n\r\t]/g.test(o[g]),$=new ne,A=!1;if(!z){const D=je?zt.get(g):1;t.setStart(n,g),t.setEnd(n,g+D),g+=D-1;const L=t.getClientRects(),Z=ws(t.getClientRects());let te=L[0];if(Z.length>0&&(te=Z[0],b&&Z.length>1&&(te=Z[1])),$=at(te),$=new ne($.x-this.elDprRect.x,$.y-this.elDprRect.y,$.width,$.height),p&&(this.dprRect.x=ve(this.dprRect.x,$.x),this.dprRect.y=ve(this.dprRect.y,$.y),this.dprRect.width=S(this.dprRect.width,$.x+$.width)),!je)$.x===m.x&&$.y===m.y&&(A=!0);else if(b&&m.y>$.y-2&&m.y<$.y+2){const F=d.chars[d.chars.length-1];F.str=F.str.substring(0,F.str.length-r.hyphensStr.length)}let q=t.toString();const N=q.charCodeAt(0)===173&&Z.length>0;if(N){if(!je){const F=d.chars[d.chars.length-1];F.str+=r.hyphensStr}A=!1,b=!0}else b=!1;if(je&&(b=!!q.match(/\u00ad/),q=q.replace(/\u00ad/g,r.hyphensStr)),A){const F=d.chars[d.chars.length-1];F.str+=q,Z.length>0&&(F.rect=$)}else{const F=/[\u0591-\u07FF]/.test(q);d.chars.length&&T&&(!F&&m.x>$.x||F&&m.x<$.x)?($=m=he(),z=!0,g-=D):N||(Je(d.rect,$),d.chars.push({word:d,str:q,rect:$}))}m=$}if(k&&p){t.setStart(n,g),t.setEnd(n,g+1);const D=t.getClientRects();if(D.length){const L=at(D[0]);this.dprRect.x=ve(this.dprRect.x,L.x-this.elDprRect.x),this.dprRect.y=ve(this.dprRect.y,L.y-this.elDprRect.y)}}if((z||y)&&d.chars.length){if(this.processWord(r,d,f,l,e),p){if(this.processLine(this.nodes[0],d),d.line=this.nodes[0].curLine,r.changeParent){const D=r.changeParent.change;D.curLine===0&&(D.curLine=d.line)}}else if(c&&d.node.changeParent){const L=d.node.changeParent.change.nodes[d.node.changeIndex];this.processLine(L,d),d.line=L.curLine}if(!e){const D=d.line;d.chars.forEach(L=>{L.line=D})}u.push(d),d={textNode:i,chars:[],rect:he()}}g++}u[0].chars[0].start=i.start;const w=u[u.length-1];w.chars[w.chars.length-1].end=i.end}),e&&(this.offset=(this.elRect.x-this.prevElRect.x)*x,this.restorePositions()),this.dprRect.x=G(this.dprRect.x),this.dprRect.y=G(this.dprRect.y),e?this.processSmoothSizes():this.stopSmoothResize(),this.prevElRect=this.elRect,this.fixChangeLines(),this.refreshStylesInfo(),this.wgltr.restoreTransform()}reset(){this.words=[],this.chars=[],this.nodes.forEach(e=>{e.prevChars=e.chars||[],e.chars=[],e.curLine=0,e.curLineY=-1/0,e.change&&(e.change.curLine=0)})}processLine(e,t){const{rect:s}=t;s.top+s.height/2>e.curLineY&&(e.curLine++,e.curLineY=s.bottom)}processWord(e,t,s,i,r){switch(t.isRTL=/[\u0591-\u07FF]/.test(t.chars[0].str),t.node=e,e.options.split){case"words":const n=t.chars.reduce((o,l)=>o.x<l.rect.x?o:l.rect,t.chars[0].rect);t.chars=[{word:t,rect:n,str:t.chars.reduce((o,l)=>o+l.str,"")}];break;default:if(i.length){const o=[];for(let l=0;l<t.chars.length;l++){const p=t.chars[l];i.some(f=>{if(f[0]===p.str&&f.length<=t.chars.length-l){let u="";if(f.every(g=>(u+=t.chars[l+u.length].str,g===u[u.length-1])))return p.str=u,l+=u.length-1,o.push(p),!0}return!1})||o.push(p)}t.chars=o}}switch(e.transform){case"uppercase":t.chars.forEach(n=>{n.str=n.str.toUpperCase()});break;case"lowercase":t.chars.forEach(n=>{n.str=n.str.toLowerCase()});break}t.rect.width-=s,t.index=this.words.length,this.words.push(t),t.chars.forEach((n,o)=>n.id=this.chars.length+o),this.chars.push(...t.chars),e.chars.push(...t.chars);for(let n=0;n<t.chars.length&&e.prevChars.length!==0;n++){const o=e.prevChars.shift(),l=t.chars[n];if(o.str!==l.str){e.prevChars=[];break}l.oldPos=l.pos,l.id=o.id,l.pos=o.pos,l.line=o.line,l.visible=o.visible,r&&(l.asyncDelay=o.asyncDelay)}}fixChangeLines(){this.words.forEach(e=>{!this.isVisible(e.node)&&this.isScreenVisible(e.node)&&e.node.changeParent&&(e.line+=e.node.changeParent.change.curLine-1)})}restorePositions(){this.chars.forEach(e=>{if(e.word.oldLine=e.line,e.pos){let{x:t,y:s}=e.pos;t-=this.offset,e.word.node.options.roundPosition&&(t=G(t)),e.oldPos={x:t,y:s}}})}refreshStylesInfo(){this.nodes.forEach(e=>{const t=e.options;e.id=`${e.font}`,["stroke","strokeWidth","strokeBlur","decors","decorsStroke","decorsStrokeWidth","decorsStrokeBlur","staticEffects"].forEach(l=>{let p=t.id[l];p===void 0&&t.inherit[l]&&(p=t.inherit[l].id[l]),e.id+="_"+(p||0)});const s=t.glyphsPadding,i=[0,0,0,0],r=[0,0,0,0],n=[0,0,0,0];if(t.stroke&&t.stroke!=="in"){const l=(t.strokeWidth+t.strokeBlur)*1.5/2*x;$e(i,[l,l,l,l])}ot(i,"staticEffects",le(t,"staticEffects")),["effects","mouseEffects","scrollEffects"].forEach(l=>{ot(r,l,le(t,l))});const o=r.map(l=>l);ot(o,"appearEffects",le(t,"appearEffects")),ot(o,"disappearEffects",le(t,"disappearEffects")),e.shadowPadding=[],e.shadow&&e.shadow.forEach(l=>{const p=l[3]*x;e.shadowPadding.push(i.map(c=>G(c+p+s)))}),e.padding=i.map(l=>G(l+s)),e.decorsPadding=n.map(l=>G(l)),e.glPadding=r.map(l=>G(l)),e.glDynamicPadding=o.map(l=>G(l)),t.reserved&&(e.reserved=vi(t.reserved),e.changeParent&&e.reserved.length===0&&(e.reserved=e.changeParent.reserved))})}processSmoothSizes(){const e=this.options[0],t=this.elRect.height-this.prevElRect.height,s=this.elRect.width-this.prevElRect.width,i=e.smoothHeight&&(t>1||t<-1),r=e.smoothWidth&&(s>1||s<-1);(i||r)&&(r?i?(this.smoothSizeReduced=t<0||s<0,this.resizeTime=S(e.smoothHeight,e.smoothWidth)):(this.smoothSizeReduced=s<0,this.resizeTime=e.smoothWidth):(this.smoothSizeReduced=t<0,this.resizeTime=e.smoothHeight),this.smoothHeightChanged=i,this.smoothWidthChanged=r,this.resizeFrom=this.prevElRect,this.wgltr.startChanging(),V(this.el,{width:this.smoothWidthChanged?this.prevElRect.width+"px":"",height:this.smoothHeightChanged?this.prevElRect.height+"px":""}),this.smoothSizeReduced?this.waitForSmoothResize=!0:this.startSmoothResize())}startSmoothResize(){this.waitForSmoothResize=!1,this.smoothResizeStarted=!0,this.resizeTimer=this.resizeTime}stopSmoothResize(){this.smoothResizeStarted&&(this.smoothResizeStarted=!1,this.resizeTime=0,this.resizeTimer=0,V(this.el,{height:"",width:""}),this.wgltr.stopChanging())}processSmoothResize(e,t){const{elRect:s,resizeFrom:i}=this;if(this.waitForSmoothResize&&t&&this.startSmoothResize(),this.resizeTimer>0)if(this.resizeTimer=S(0,this.resizeTimer-e/1e3),this.resizeTimer<=0)this.stopSmoothResize();else{let r=1-this.resizeTimer/this.resizeTime;if(r=r<.5?2*r*r:-2*r*r+4*r-1,this.smoothWidthChanged){const n=i.width+(s.width-i.width)*r;V(this.el,{width:n+"px"})}if(this.smoothHeightChanged){const n=i.height+(s.height-i.height)*r;V(this.el,{height:n+"px"})}}}destroy(){this.nodes.forEach(e=>{V(e.node,{"--wgltr-color":"","text-decoration-color":""}),e.changeParent&&V(e.node,{"text-align":"",width:"",display:"","z-index":"","pointer-events":"","user-select":"",left:"",right:"",top:"",position:"",visibility:""}),e.thief&&e.thief.remove(),e.wrap&&e.wrap.replaceWith(...e.wrap.childNodes)})}}class yi{constructor(e){this.wgltr=e,this.gl=e.gl,this.prevGlyphs=[],this.glyphs=[],this.glyphsChanged=!0,this.maxGlyphWidth=1,this.maxGlyphHeight=1,this.size={width:1,height:1},this.shader=new Ps(this.gl,{attrs:[[P,"C",0],[P,"CC",0],[P,"UVLI",1],[P,"P",1],[P,"AP",1]],uniforms:[[De,"Sampler",0,1],[De,"Noise",0,1],[De,"Decors",0,1],[Me,"T",0,1],[P,"ID",0,1],[Ce,"E",0,1],[P,"U",1],[O,"NS",1],[O,"CO",0,1],[Ce,"M",0,1],[E,"AR",0]],varyings:[[E,"CT",1],[O,"UP",1],[P,"VP",1],[O,"DUV",1]]}),this.calcDecors(),this.loadDecors(),this.updateShader()}refresh(e=!1){const{htmlText:t}=this.wgltr;t.words.length!==0&&(this.measure(t),(this.glyphsChanged||e)&&(this.calcTextureSize(),this.updateTexture(),this.glyphsChanged=!1))}getID(e,t){return`${e.id}_${x}_${t||""}`}getGlyph(e){const t=this.prevGlyphs.find(i=>i.id===e);let s=this.glyphs.find(i=>i.id===e);return t?s||this.glyphs.push(s=t):this.glyphsChanged=!0,s}measure(e){const{ctx:t}=H;t.textBaseline="alphabetic",this.glyphs=[],this.pictographicCount=0,this.maxGlyphWidth=0,this.maxGlyphHeight=0,e.words.forEach(({node:s,chars:i})=>{t.font=s.font,i.forEach(r=>{this.processGlyph(this.getID(s,r.str),r.str,s)})}),e.nodes.forEach(s=>{s.reserved&&(t.font=s.font,s.reserved.forEach(i=>{this.processGlyph(this.getID(s,i+""),i+"",s)}))}),this.glyphsChanged&&(this.glyphs.sort((s,i)=>i.height-s.height),this.glyphs.sort(s=>s.isPictographic?-1:1)),this.prevGlyphs=this.glyphs}processGlyph(e,t,s){let i=this.getGlyph(e);if(!i){const r=ii.test(t)&&ks.is(t),n=H.ctx.measureText(t),o={rawWidth:n.width,left:n.actualBoundingBoxLeft,right:n.actualBoundingBoxRight,top:n.actualBoundingBoxAscent,bottom:n.actualBoundingBoxDescent};i={id:e,character:t,isPictographic:r,node:s,size:o},this.glyphs.push(i),i.isPictographic&&(this.pictographicCount++,o.right<o.rawWidth/2&&(o.right=o.rawWidth,o.left=0),o.top<o.rawWidth/2&&(o.top=o.rawWidth,o.bottom=o.rawWidth/4))}this.processShadowGlyphs(s.shadow,e,this.calcGlyphSizes(i,!1))}processShadowGlyphs(e=[],t,s){return e.map((i,r)=>{const n=`${t}_${i[3]}`;let o=this.getGlyph(n);return o||(o={...s,...{isPictographic:!1,staticEffects:-1,decors:-1,id:n,shadow:r}},this.glyphs.push(o)),this.calcGlyphSizes(o,!0,r)})}calcGlyphSizes(e,t,s){const{node:i}=e,r=t?i.shadowPadding[s]:i.padding;e.size.width=e.size.left+e.size.right,e.size.height=e.size.top+e.size.bottom;const n=e.texSize={padding:r,width:G(e.size.width)+r[0]+r[2],height:G(e.size.height)+r[1]+r[3]};return this.maxGlyphWidth=S(this.maxGlyphWidth,n.width),this.maxGlyphHeight=S(this.maxGlyphHeight,n.height),e}calcGlyphsMaxSize(e){return e.reduce((t,s)=>(ct(t,s.texSize),t),vs())}calcGlyphsOffset(e){return e.length?e.reduce((t,s)=>{const{node:i}=s;return ui(t,new ne(s.size.left,-(i.fontBaseline-s.size.top),s.size.right-s.size.rawWidth,i.fontBaseline+s.size.bottom-i.fontHeight)),t},new ne(-1/0,-1/0,-1/0,-1/0)):new ne(0,0,0,0)}calcTextureSize(){const e={width:128,height:128};let t=!1,s=!1;for(;!s;){s=!0;let i=0,r=0,n=0,o=0,l=0,p=o,c=l,f=0;for(let u=0;u<this.glyphs.length;u++){const g=this.glyphs[u],d=g.node.options.texturePadding;let{width:m,height:b}=g.texSize;if(m+=d,b+=d,o+m>e.width&&(o=0,l+=r,r=b,m>e.height)){s=!1;break}if(l+b>e.height)if(n<2&&b<=e.height&&!g.isPictographic){n++,o=p,l=c,r=f,u--;continue}else{s=!1;break}g.texPos={x:o+d/2,y:l+d/2},g.layer=g.isPictographic?3:n,o+=m,r=S(r,b),g.isPictographic&&(i++,i>=this.pictographicCount&&(p=o,c=l,f=r))}s||(t?e.height*=2:e.width*=2,t=!t)}this.size=e}prepareSizes(){let e=0,t=0;this.wgltr.htmlText.nodes.forEach(r=>{const n=r.decorsPadding;e=S(e,n[0]+n[2]),t=S(t,n[1]+n[3])});const s=Le(this.maxGlyphWidth+e),i=Le(this.maxGlyphHeight+t);return{decorsPaddingX:e,decorsPaddingY:t,maxWidth:s,maxHeight:i}}loadDecors(){gs(this.decorsList,e=>{e&&(this.updateTexture(),this.gl.resize(),this.wgltr.text.updateBuffers())})}calcDecors(){this.decorsList=this.wgltr.htmlText.options.reduce((t,s)=>{const i=le(s,"decors");return!s.inherit.decors&&i.forEach(({args:r})=>{t.push({type:r[0],url:r[0]==="dimage"?r[1]:"",args:r})}),t},[]);const e=ft(this.decorsList.reduce((t,s)=>t+(["dpattern","dimage"].indexOf(s.type)>=0?1:0),0));this.decorsSize={count:e,rows:et(e),cols:G(e)}}updateDecorsTexture(e,t){const{decorsList:s,decorsSize:i}=this,{rows:r,cols:n}=i;if(i.count<1)return;H.resize(Le(r*e),Le(n*t)),J.resize(e,t);let o=-1;s.forEach(l=>{if(["dimage","dpattern"].indexOf(l.type)>=0&&o++,l.type==="dimage"&&!l.image)return;const p=o%r,c=Gt(o/r);if(J.clear(),l.type==="dimage"){const f=l.image;let[,,,,,u,g,d,m,b,w,k]=l.args;w=G(w*x),k=G(k*x),u||(m/=x,b/=x);const y=Ts.createPattern("image",!1,d,f.width*m,f.height*b,"#000",f),[T,z]=xi(g,e,t,f.width*x*m,f.height*x*b);w+=T+p*e,k+=z+c*t,H.ctx.save(),H.ctx.translate(w,k),H.style(y),H.ctx.fillRect(p*e-w,c*t-k,e,t),H.style("#fff"),H.ctx.restore()}else if(l.type==="dpattern"){const[,,,,f]=l.args;J.drawDecorations(l.args[5],f,e,t),H.ctx.drawImage(J.canvas,p*e,c*t)}}),this.gl.createTexture(H.canvas,2,this.gl.gl.RGBA)}updateTexture(){const{maxWidth:e,maxHeight:t}=this.prepareSizes(),{size:s,gl:i,shader:r}=this,n=H.ctx,o=J.ctx,l=2/s.width,p=2/s.height;i.use(r.program),this.updateDecorsTexture(e,t),H.resize(e,t),J.resize(e,t),i.createTexture(void 0,0,i.gl.RGBA,e,t),i.prepareDecorations(s.width,s.height);for(let c=0;c<this.glyphs.length;c++){const f=this.glyphs[c],{x:u,y:g}=f.texPos,{character:d,node:m}=f,{width:b,height:w,padding:k}=f.texSize,y=m.options;let{left:T,top:z}=f.size;[T,z]=[G(T+k[0]),G(z+k[1])],H.clear(),n.textBaseline="alphabetic",o.font=n.font=m.font;const $=f.isPictographic&&f.shadow===void 0;if($)n.fillText(d,T,z);else if(f.shadow!==void 0)H.fill("#000"),H.shadow(0,2e3,m.shadow[f.shadow][3]*x,"#f00"),n.fillText(d,T,z-2e3),n.shadowColor="transparent";else{const Se=y.textureColor;if(H.style(Se.toLowerCase()==="currentcolor"?bi(m.color):Se),y.stroke){const de=y.stroke,We=y.strokeWidth,Fe=y.strokeBlur;n.lineWidth=We*x,Fe>0?(H.shadow(0,2e3,Fe*x,"#f00"),n.strokeText(d,T,z-2e3),n.shadowColor="transparent"):n.strokeText(d,T,z),(de==="in"||de==="out")&&(H.gco(`destination-${de}`),n.fillText(d,T,z))}else n.fillText(d,T,z);if(H.gco("source-in"),H.fill("#f00"),H.gco("screen"),H.fill("#000"),y.decors.length&&(J.clear(),J.style("#0f0"),o.fillText(d,T,z),n.drawImage(J.canvas,0,0),y.decorsStroke)){const de=y.decorsStrokeWidth,We=y.decorsStrokeBlur;J.clear(),J.style("#00f"),o.fillText(d,T,z),J.gco("destination-out"),o.lineWidth=de*x,We>0?(J.shadow(0,2e3,We*x,"#f00"),o.strokeText(d,T,z-2e3),o.shadowColor="transparent"):o.strokeText(d,T,z),J.gco(),n.drawImage(J.canvas,0,0)}H.gco()}i.updateTexture(n.canvas);let A=!y.stroke||y.stroke==="in"?1:0;switch(y.decorsStroke){case"all":A=2;break;case"in":A=3;break;case"out":A=4;break}r.uniform([["T",Math.random()*100],["E",[y.uniqueID,A,$?1:0]],["NS",[e/this.wgltr.text.noiseWidth,t/this.wgltr.text.noiseHeight]],["U",[1/(e/x),1/(t/x),s.width/x,s.height/x]]]);const D=u*l-1,L=(u+b)*l-1,Z=g*p-1,te=(g+w)*p-1,q=b/e,N=w/t,F=f.layer;let _=(1-q)/2,se=(1-N)/2;_-=_%(1/e),se-=se%(1/t);const ce=_+q,ue=se+N,[qe,tt,St,B,Ge,st]=r.getVbo("indices","C","CC","UVLI","P","AP");qe.push(0,1,2,0,2,3),St.push(1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0),tt.push(L,te,ce,ue,D,te,_,ue,D,Z,_,se,L,Z,ce,se),B.push(q,N,F,0,0,N,F,c,0,0,F,0,q,0,F,0),Qe(Ge,0,0,0,0),Qe(st,c,0,b,w),r.updateVbo(),i.processDecorations(r)}this.texture=i.decorTexture,r.cleanVBO(),i.finishDecorations(),i.bindTexture(0,this.texture),i.use(this.wgltr.text.shader.program)}updateShader(){const{gl:e,shader:t}=this,s=this.wgltr.htmlText.options,{rows:i,cols:r}=this.decorsSize;let n="";const o=[],l=fi(s,i,r,o);s.forEach(f=>{if(f.inherit.staticEffects)return;const u=Ze("staticEffects","frag",le(f,"staticEffects"));n+=Pe(u.glsl,"uE.x",oe.getIDs(f,"backgrounds")),o.push(...u.req)});const p="gl_Position=vec4(aC.xy,0.,1.);vVP=vec4(pxPos(aC.xy),pxPos(aC.zw));vUP=aCC.xy;vDUV=aC.zw;",c=`${P}tC=vec4(1.);${O}ep=vU.xy,uv=vUVLI.xy;`+(n||"")+`${P}tA=texture2D(uSampler,uv),_t;if(uE.z>.5&&tA.w<=.01){for(int x=-1;x<1;x++){for(int y=-1;y<1;y++){_t=texture2D(uSampler,uv+vU.xy*vec2(x,y));if(_t.w>=.01){tA.xyz=_t.xyz;}}}_t=texture2D(uSampler,uv+vec2(vU.x,.0));if(_t.w>=.01){tA.xyz=_t.xyz;}else{_t=texture2D(uSampler,uv+vec2(-vU.x,.0));if(_t.w>=.01){tA.xyz=_t.xyz;}else{_t=texture2D(uSampler,uv+vec2(.0,vU.y));if(_t.w>=.01){tA.xyz=_t.xyz;}else{_t=texture2D(uSampler,uv+vec2(.0,-vU.y));if(_t.w>=.01){tA.xyz=_t.xyz;}}}}}uv=vDUV.xy;${E}rt=tA.x,ro=1.,r=.0,gp=.0,tmp=.0;${P}tD;`+l+`lowp int l=int(vUVLI.z);${P}m=vec4(1.);if(l>=3){gl_FragColor=tA;return;}if(l==0)m=vec4(1.,0.,0.,1.);else if(l==1)m=vec4(0.,1.,0.,1.);else if(l==2)m=vec4(0.,0.,1.,1.);if((uE.y>1.5&&uE.y<2.5)||uE.y>3.5){rt=min(rt,rt*(ro+(1.-tA.z)));}else{rt=rt*ro;}${E}taz=((uE.y<1.5)||uE.y>3.5)?tA.y:tA.z;rt=(uE.y<.5)?rt+r*taz:min(rt+r*taz,max(taz,rt));gl_FragColor=vec4(m.xyz*rt*tC.w,1.);`;t.refresh(this._vertexDone?!1:p,[],c,o),e.use(t.program),t.uniform([["Sampler",0],["Noise",1],["Decors",2],["T",1],["AR",1],["CO",[0,0]],["M",[0,0,0]]]),this._vertexDone=!0,e.use(this.wgltr.text.shader.program)}destroy(){this.gl.gl.deleteTexture(this.texture)}}class Si{constructor(e){this.wgltr=e,this.gl=e.gl,this.backgrounds=[],this.time=0,this.chars=[],this.rect=new ne,this.isAppeared=!1,this.isManualAppear=!1,this.manualStartTime=1/0,this.isManualDisappear=!1,this.noiseWidth=128,this.noiseHeight=128,this.gl.createNoiseTexture(1,this.noiseWidth,this.noiseHeight),this.refreshBackgrounds(!0),this.refreshScrolls(),this.createShader(),this.updateShader(),this.updateMouseUniform(-1e4,-1e4,0),this.updateBackgroundsUniforms(),this.updateScrollUniform()}refresh(e=!1){this.refreshChars(),this.refreshUV(),this.calcSizes(e),this.charsPxToPercent(),this.setLineCoords()}refreshChars(){const{htmlText:e,fontTexture:t}=this.wgltr,{appearReverse:s,appearRandom:i}=this.wgltr.options,r=[],n=[],o=new Ei;o.start(s,i,!1),this.changedLines=[];let l=-1,p=-1;e.words.forEach(c=>c.glChars=[]),e.chars.forEach(c=>{const{rect:f,start:u,end:g,word:d,str:m}=c,{node:b,line:w}=d,k=t.getGlyph(t.getID(b,m)),{left:y,bottom:T}=k.size,{baselineOffset:z,options:$}=b,A=$;if(c.options=A,c.node=b,c.glyph=k,b.changeParent){const N=b.changeParent.change;N.previous!==N.current&&(c.isAppear=N.current===b.changeIndex,c.isDisappear=N.previous===b.changeIndex),(!this.isAppeared||this.isManualDisappear)&&(c.isAppear=!1,c.isDisappear=!1)}u&&u.forEach(N=>{if(N.change)return;const F=!!(N.parent&&N.parent.change),_=N.changeParent&&N.changeParent.change.keepOrder,se=oe.getAppear("Random",N,c.isAppear,c.isDisappear),ce=oe.getAppear("Reverse",N,c.isAppear,c.isDisappear),ue=c.reset=oe.getAppear("Reset",N,c.isAppear,c.isDisappear,c.reset),qe=!ce&&!se&&!ue&&!!N.options.inherit.appearCount&&!F;o.start(N.options,ce,se,ue,qe,_)});let D=f.x-y,L=f.y+z*f.height+T;$.roundPosition&&([D,L]=[G(D),G(L)]),c.oldLineX=-1e4,c.newLineX=-1e4,c.line!==w&&w>0&&c.line>0&&((l!==c.line||p!==w)&&(this.changedLines.push([]),l=c.line,p=w),this.changedLines[this.changedLines.length-1].push(c));const Z=A.appear==="appeared"&&(this.isManualAppear||this.isManualDisappear);A.appear===!0||A.appear==="manual"||Z||c.isAppear||c.isDisappear?([c.speed,c.count,c.delay,c.async]=[$.appearSpeed,$.appearCount,$.appearDelay,$.appearAsync],c.isAppear&&([c.speed,c.count,c.delay]=[ke(A.changeAppearSpeed,c.speed),ke(A.changeAppearCount,c.count),ke(A.changeAppearDelay,c.delay),ke(A.changeAppearAsync,c.async)]),c.isDisappear&&([c.speed,c.count,c.delay]=[ke(A.disappearSpeed,c.speed),ke(A.disappearCount,c.count),ke(A.disappearDelay,c.delay),ke(A.disappearAsync,c.async)])):(c.speed=-1,c.count=0,c.delay=0),c.asyncDelay===void 0&&(c.asyncDelay=c.async?c.async*re():0),c.effectsType=0,c.isDisappear&&A.disappearEffects.length?c.effectsType=2:(c.isAppear||c.isDisappear)&&A.changeAppearEffects.length&&(c.effectsType=1);const te=c.visible||c.isDisappear;te&&c.oldPos&&c.oldPos.x-2<D&&c.oldPos.x+2>D&&c.oldPos.y-2<L&&c.oldPos.y+2>L?c.pos=c.oldPos:(c.oldPos=te?c.oldPos||{x:D,y:L}:{x:D,y:L},c.pos={x:D,y:L}),c.moved&&(c.oldPos=c.pos),c.moved=!0,c.visible=e.isChangeCurrent(b),c.oldLine=c.line,c.line=w,c.bgID=$.uniqueID,c.glyph.isPictographic&&(c.bgID=-1);const q=c.isAppear||c.isDisappear;!$.appear&&!q&&c.visible&&(c.speed=-1),!c.isDisappear&&!c.visible&&(c.speed=1),o.push(c),g&&o.process(g.reduce((N,F)=>N+(F.change?0:1),0)),b.shadow&&b.shadow.forEach((N,F)=>{const _={parent:c,node:b,shadowID:F,glyph:t.getGlyph(t.getID(b,c.str)+"_"+N[3])};r.push(_),d.glChars.push(_)}),d.glChars.push(c),n.push(c)}),o.process(1),e.changeNodes.forEach(({change:c})=>{c.appear=[],c.disappear=[],c.keepOrder=!1}),this.totalTime=0,this.calcCharsTimes(o.result()),this.calcChangeTimes(),this.chars=[...r.sort((c,f)=>c.shadowID-f.shadowID),...n],this.refreshTime=this.time+e.resizeTimer}calcCharsTimes(e){let t,s,i,r,n,o,l;e.forEach((p,c)=>{const{speed:f,delay:u,asyncDelay:g,options:d,visible:m,node:b}=p[0],{start:w,reset:k}=p,{isAppear:y,isDisappear:T}=p[0];if(!m&&!T)return;if(n&&n.speed>0){const A=n.speed*(1-u);y||T?r-=A:s-=A}const z=k||o!==b.changeParent||l!==b.changeIndex;o=b.changeParent,l=b.changeIndex;const $=w&&w.some(({options:A})=>!A.inherit.appearFunction||A.appearFunctionReset);(c===0||k)&&(s=d.appearStartDelay,(d.appear==="manual"||this.isManualAppear||this.isManualDisappear)&&(s+=this.manualStartTime),t={start:s,end:0}),(z||k)&&(r=o?o.change.time:0,i={start:r,end:0}),$&&(t={start:s,end:0},i={start:r,end:0}),(z||k||$)&&(y&&o.change.appear.push(i),T&&o.change.disappear.push(i)),p.forEach(A=>{if(A.total=t,A.delay=s,A.changeTotal=i,A.changeDelay=r,n){const D=g*f;A.delay+=D,A.delay=S(A.delay,t.start),A.changeDelay+=D,A.changeDelay=S(A.changeDelay,i.start),D>0&&(s+=D,r+=D)}}),y||T?(r+=f,i.end=S(i.end,r)):(f>0&&(s+=f),t.end=S(t.end,s)),t.end<1/0&&(this.totalTime=S(this.totalTime,t.end)),n=p[0]})}calcChangeTimes(){const{htmlText:e}=this.wgltr;e.changeNodes.forEach(({change:t,options:s})=>{if(t.disappearAdditive=t.isWider?s.changeMove:0,t.disappearAdditive+=e.resizeTimer,t.disappear.forEach(i=>{i.start+=t.disappearAdditive,i.end+=t.disappearAdditive}),t.disappearEnd=S(t.disappearAdditive,t.disappear.reduce((i,r)=>S(i,r.end||0),0)),t.appearAdditive=S(t.disappearAdditive,t.disappearEnd-t.time+s.changeDelay),t.appear.forEach(i=>{i.start+=t.appearAdditive,i.end+=t.appearAdditive}),t.appearStart=t.appear.length?t.appear.reduce((i,r)=>ve(i,r.start||0),1/0):0,t.appearEnd=t.appear.reduce((i,r)=>S(i,r.end),0),t.textResizeTime=t.isWider?0:t.disappearEnd,t.changeEnd=S(t.appearEnd,t.disappearEnd),t.started){const i=t.changeEnd+(t.isWider?0:s.changeMove);t.changeStart=S(i,i+s.changeTime)}else t.changeStart=this.totalTime+s.changeStartTime;(s.appear==="manual"&&!this.isManualAppear||this.isManualDisappear)&&(t.changeStart=1/0)})}charsPxToPercent(){const{rect:e}=this,t=e.width/e.height;this.chars.forEach(s=>{const{size:i,texSize:r}=s.glyph,{x:n,y:o}=s.parent?s.parent.pos:s.pos,{x:l,y:p}=s.parent?s.parent.oldPos:s.oldPos,{width:c,height:f}=e,{width:u,height:g}=r,d=s.node.glPadding,m=s.node.glDynamicPadding;let b=i.width/2+this.offsetX,w=i.height/2-this.offsetY;if(s.node.shadow&&s.glyph.shadow!==void 0){const[,k,y]=s.node.shadow[s.glyph.shadow];b+=k*x,w-=y*x}s.centerX=((n+b)/c*2-1)*t,s.centerY=-((o-w)/f*2-1),s.oldCenterX=((l+b)/c*2-1)*t,s.oldCenterY=-((p-w)/f*2-1),s.maxWidth=s.node.maxGlyphSize.width/c*2*t,s.size={x:(d[2]/2-d[0]/2)/c*2*t,y:-((d[3]/2-d[1]/2)/f*2),width:(u+d[0]+d[2])/c*2*t,height:(g+d[1]+d[3])/f*2},s.dynamicSize={x:(m[2]/2-m[0]/2)/c*2*t,y:-((m[3]/2-m[1]/2)/f*2),width:(u+m[0]+m[2])/c*2*t,height:(g+m[1]+m[3])/f*2}})}setLineCoords(){this.changedLines.forEach(e=>{let t,s,i=e[0],r=e[e.length-1];const n=i.word.isRTL;n&&([i,r]=[r,i]),i.line>i.oldLine^n?(t=r.oldCenterX+r.maxWidth/2,s=i.centerX-i.maxWidth/2):(t=i.oldCenterX-i.maxWidth/2,s=r.centerX+r.maxWidth/2),e.forEach(o=>{o.oldLineX=t,o.newLineX=s})})}calcSizes(e=!1){const{htmlText:t}=this.wgltr,{dprRect:s}=t;let i=this.wgltr.options.canvasPadding;Array.isArray(i)||(i=[i,i,i,i]),i=i.map(p=>p*x),t.options.forEach(({data:p})=>{p.glyphRect=he(),p.wordRect=he(),p.lineRect=he(),p.wrapRect=he()}),t.nodes.forEach(p=>{p.maxGlyphSize=new ne(0,0,0,0)});const r=this.rect;this.rect=he();const n=he();if(t.words.forEach(p=>{const c=p.chars.map(d=>d.glyph);p.offset=this.calcRectOffset(p.node,c);const{full:f}=p.offset,u=p.textNode.rect,g=new ne(u.x-f.x,u.y-f.y,u.width+f.x+f.width,u.height+f.y+f.height);Je(n,u),Je(this.rect,g)}),this.rect.width+=i[1]+i[3],this.rect.height+=i[0]+i[2],this.rect.width=G(this.rect.width),this.rect.height=G(this.rect.height),e&&t.prevDprRect.width>=s.width){const p=t.prevDprRect.x-t.offset;r.width<=this.rect.width&&(s.x=p)}this.rect.x=s.x-(n.x-this.rect.x)-i[3],this.rect.y=s.y-(n.y-this.rect.y)-i[0];const o=(t.elRect.x-t.resizeElRect.x)*x;this.canvasReservedWidth=s.x-t.minNodeOffset+o,this.offsetX=-G(this.rect.x),this.offsetY=-G(this.rect.y);const l=this.linesRects||[];this.wordsRects=[],this.linesRects=[],t.words.forEach(p=>{const{fragment:c,padding:f}=p.offset;if(p.rect.width<=0)this.wordsRects.push([0,0,0,0]);else{const u=new ne((p.rect.x-this.rect.x-c.x)/x,(p.rect.y-this.rect.y-c.y)/x,(p.rect.width+c.x+c.width)/x,(p.rect.height+c.y+c.height)/x);let g=-1;p.line>0&&(g=p.line-1,this.linesRects[g]||(this.linesRects[g]=he()),Je(this.linesRects[g],u));let d=p.node.options;const m=p.node.maxGlyphSize;for(;d.node;){const{data:b}=d;ct(b.glyphRect,new ne(0,0,(m.width+f[0]+f[2])/x,(m.height+f[1]+f[3])/x)),ct(b.wordRect,u),g>-1&&ct(b.lineRect,this.linesRects[g]),Je(b.wrapRect,u),d=d.parent}this.wordsRects.push(gt(u))}}),this.linesRects=this.linesRects.map(p=>gt(p)),this.linesRects.push(...l.slice(this.linesRects.length,l.length))}calcRectOffset(e,t){const s=40/S(40,this.wgltr.options.fov),i=e.options,{padding:r,glDynamicPadding:n}=e,o=n.map((g,d)=>g+r[d]),l=this.wgltr.fontTexture.calcGlyphsMaxSize(t),p=this.wgltr.fontTexture.calcGlyphsOffset(t);if(ct(e.maxGlyphSize,l),e.shadow){const g=[0,0,0,0];e.shadow.forEach(d=>{let[,m,b,w]=d;w*=x,g[0]=S(g[0],-m+w),g[1]=S(g[1],-b+w),g[2]=S(g[2],m+w),g[3]=S(g[3],b+w)}),$e(o,g)}const c=[0,0,0,0];$e(c,o),$e(o,gt(p));const f=new ne(...o),u=vs();return["effects","mouseEffects","scrollEffects","appearEffects","changeAppearEffects","disappearEffects"].forEach(g=>{const d=[0,0,0,0],m=[1,1],b=[0,0],w=o.map(D=>D);let k=!1,y=!1,T=!1;if(le(i,g).forEach((D,L)=>{const[Z,...te]=D.args,q=Mt(Z,g),N=q&&q.paddingVert;if(N){const F=Bt(q,g,te),_=N(g,...F,D.scale);if(_.trans){const[se,ce,ue]=_.trans;$e(d,[S(0,-se),S(0,-ce),S(0,se),S(0,ce)]),ue&&(b[0]+=ue*2*x/s,b[1]+=ue/3*x/s),k=!0}if(_.scale){const[se,ce]=_.scale;m[0]+=m[0]*se,m[1]+=m[1]*ce,$e(d,[d[0]*se,d[1]*ce,d[2]*se,d[3]*ce])}_.offset&&$e(d,_.offset),_.rotate&&(y=!0,k&&(T=!0))}}),y){let D=S(l.width,l.height)*(.4/s);T&&(D+=S(S(S(d[0],d[1]),d[2]),d[3])/2),$e(w,[D,D,D,D])}const $=l.width*(m[0]-1)/2+S(b[0],0),A=l.height*(m[1]-1)/2+S(b[1],0);u.x=S(u.x,w[0]+d[0]*x+$),u.y=S(u.y,w[1]+d[1]*x+A),u.width=S(u.width,w[2]+d[2]*x+$),u.height=S(u.height,w[3]+d[3]*x+A)}),{glyphs:p,padding:c,fragment:f,full:u}}refreshUV(){const e=this.wgltr.fontTexture.size;this.chars.forEach(t=>{const{glPadding:s,glDynamicPadding:i}=t.node,{width:r,height:n}=e,{texPos:o,texSize:l}=t.glyph,{x:p,y:c}=o,f=p/r,u=c/n,g=f+l.width/r,d=u+l.height/n;t.uvPaddings=[f,u,g,d],t.uv=[f-s[0]/r,u-s[1]/n,g+s[2]/r,d+s[3]/n],t.uvDynamic=[f-i[0]/r,u-i[1]/n,g+i[2]/r,d+i[3]/n]})}refreshBackgrounds(e=!1){const{width:t,height:s}=this.rect;this.backgrounds=[],this.wgltr.htmlText.options.forEach(i=>{const r=le(i,"backgrounds");!i.inherit.backgrounds&&r.forEach(({args:n})=>{let[o,l,p,c]=n,f=!0,u=!1,g=!1,d="topleft",m=[];switch(o){case"dradialGrad":[o,l,p,c,f,d]=n;break;case"dpattern":[o,l,p,c,f,u]=n,g=n[6],m=n[8],d="center";break;case"dimage":[o,,l,p,c,f,u]=n,g=n[7],d=n[8],m=n[14];break}this.backgrounds.push({args:n,options:i,type:o,operation:l,opacity:p,fit:f,invert:u,align:d,dprScale:g,node:i.node,data:i.data,url:o==="dimage"?n[1]:"",effects:m,loaded:!0,texture:void 0,size:Ft(c),usize:[1,1],scale:[1,1]})})}),gs(this.backgrounds,i=>{i&&(this.drawBackgrounds(),this.updateBackgroundsUniforms())}),!e&&t>1&&s>1&&this.drawBackgrounds()}drawBackgrounds(){const{width:e,height:t}=this.rect;e<1||t<1||this.backgrounds.forEach((s,i)=>{const{type:r,data:n,size:o,args:l}=s,p=[[e,t],[n.glyphRect.width*x,n.glyphRect.height*x],[n.wordRect.width*x,n.wordRect.height*x],[n.lineRect.width*x,n.lineRect.height*x],[n.wrapRect.width*x,n.wrapRect.height*x]];let[c,f]=p[o];c>0&&f>0||([c,f]=p[1]),r==="dimage"&&s.image&&(c=s.image.width,f=s.image.height);const u=[0,0,0,0];r==="dpattern"&&s.effects.length&&(ot(u,"effects",le(s.effects)),c+=G(u[0]+u[2]),f+=G(u[1]+u[3]));const g=Le(c),d=Le(f);if(s.scale=[c/g-1/g,f/d-1/d],s.usize=[c/x,f/x],J.resize(g,d),r==="dlinearGrad"){const[,,,,m,b]=l;J.drawLinearGradient(m,c/2,f/2,c,f,b)}if(r==="dradialGrad"){const[,,,,,,m,b,w,k,y]=l;J.drawRadialGradient(m,c/2,f/2,c,f,b,w,k,y)}r==="dpattern"&&(s.scaleX=1+(u[0]+u[2])/c,s.scaleY=1+(u[1]+u[3])/f,J.drawDecorations(s.args[7],s.dprScale,c,f)),r==="dimage"&&s.image&&(s.scaleX=l[10],s.scaleY=l[11],s.usize=[s.image.width,s.image.height],s.dprScale||(s.usize[0]/=x,s.usize[1]/=x),J.ctx.drawImage(s.image,0,0)),s.texture=this.gl.createTexture(J.canvas,2+i,this.gl.gl.RGBA)})}bindBackgrounds(){this.backgrounds.forEach((e,t)=>{this.gl.bindTexture(2+t,e.texture)})}refreshScrolls(){this.scrolls=[];let e=0;this.wgltr.htmlText.options.forEach(t=>{t.inherit.scrollEffects||(t.scrollEffects.forEach(s=>{this.scrolls.push({cur:0,distance:s[1],fade:s[2]})}),t.data.scrollEffects=e,e+=t.scrollEffects.length)})}processScrolls(e){this.scrolls.forEach(t=>{t.cur!==0&&(t.cur-=e/t.fade*Zt(t.cur),ae(t.cur)<e/t.fade*1.2&&(t.cur=0))}),this.updateScrollUniform()}setScrollsStrength(e){this.scrolls.forEach(t=>{const s=ve(1,S(-1,e/t.distance));ae(s)>ae(t.cur)&&(t.cur=s)})}createShader(){this.shader=new Ps(this.gl,{attrs:[[P,"Color",1],[P,"UVLI",0],[P,"C",0],[P,"DCU",0],[P,"P",1],[P,"AP",1],[P,"NP",1],[P,"OP",0]],uniforms:[[De,"Sampler",0,1],[De,"Noise",0,1],[P,"E",0,1],[P,"ES",0,1],[E,"BGID",0,1],[Me,"T",0,1],[Ce,"ID",0,1],[E,"AR",0],[P,"NP",0,1],[E,"MW",0],[O,"CL",0],[$s,"Prj",0],[P,"U",1],[O,"NS",1],[O,"CO",0,1],[P,"WC",0,1],[P,"LC",0,1],[P,"WRC",0,1],[Ce,"M",0,1]],varyings:[[Me,"CT",1],[P,"UVLI",1],[O,"UP",1],[P,"CP",1],[P,"VP",1],[E,"CC",1]]})}updateShader(){const{gl:e}=this,{htmlText:t}=this.wgltr,s=this.shader;let i="",r="";const n=[],o=[];let l=!1,p=!1;const c=[["vert",n],["frag",o],["fragColor",o],["appearVert",n],["appearFrag",o],["appearFragColor",o]],f=["vert","frag","fragColor"],u=["appearVert","appearFrag","appearFragColor"],g=["appearEffects","changeAppearEffects","disappearEffects"],d=[["effects",f],["mouseEffects",f],["scrollEffects",f],["appearEffects",u],["changeAppearEffects",u],["disappearEffects",u]],m=c.reduce((y,[T])=>(y[T]="",y[T+"Alpha"]="",y),{});t.options.forEach(y=>{c.forEach(([T,z])=>{d.forEach(([$,A])=>{if(y.inherit[$])return;const D=le(y,$),L=Ze($,T,le(y,$),y.data[$]||0);if(!(!L.glsl||A.indexOf(T)===-1)){if(u.indexOf(T)>=0&&(L.glsl=Pe(L.glsl,"uE.w",[g.indexOf($)]),y.appearShadowOpacityOnly)){const Z=D.filter(q=>q.args[0]==="falpha"),te=Ze($,T,Z,y.data[$]||0);te.glsl&&(te.glsl=Pe(te.glsl,"uE.w",[g.indexOf($)]),m[T+"Alpha"]+=Pe(te.glsl,"uE.x",oe.getIDs(y,$)))}z.push(...L.req),m[T]+=Pe(L.glsl,"uE.x",oe.getIDs(y,$))}})}),y.inherit.appearFunction||(i+=Pe(`t=${Ae[y.appearFunction]};`,"uE.x",oe.getIDs(y,"appearFunction"))),y.inherit.appearPartFunction||(r+=Pe(`cT=${Ae[y.appearPartFunction]};`,"uE.x",oe.getIDs(y,"appearPartFunction"))),l=!!y.change||l,p=!!y.mouseEffects||p});const b=this.generateBackgroundsGLSL();o.push(...b.req);const w=`${P}tC=vec4(1.);${O}ep=vU.xy,uv=vUVLI.xy;`+(p?`${O}mPos=uM.xy*vU.zw;${E}mA=atan(vVP.x-mPos.x,vVP.y-mPos.y),mD=abs(sqrt(pow(vVP.x-mPos.x,2.)+pow(vVP.y-mPos.y,2.))),mSin=sin(mA),mCos=cos(mA);`:"")+m.frag+(m.appearFrag?`if(vCT>.001){if(vAP.y<.5){${m.appearFrag}}else{${m.appearFragAlpha}}}`:"")+(l?pi("vCC>-10.&&(vCC>0.&&uv.x>(vP.x+(vP.z-vP.x)*(1.-vCC))||vCC<.0&&uv.x<(vP.x+(vP.z-vP.x)*-vCC))"):"")+`${P}tA=tex(uSampler,uv,vColor),tO=tA;`+(b.glsl?`if(vNP.y<.5&&tA.w>0.){${E}dO=tA.w,o=tA.w;${Ce}r=tA.xyz,dR=tA.xyz;${O}buv=uv,bep=ep;`+b.glsl+"uv=buv;ep=bep;tA=vec4(r,(vAP.y<.5)?o:tA.w);tO=tA;}":"")+m.fragColor+(m.appearFragColor?`if(vCT>.001){${m.appearFragColor}}`:"")+"tA.w*=tC.w;gl_FragColor=tA;",k=`${E}tmp,tt,t=1.;if(uNP.w>0.){bool eI=aNP.w<0.;${E}e=eI?-aNP.w:aNP.w;t=clamp((uT-aNP.z)/(e-aNP.z),0.,1.);`+i+`t=(e-aNP.z)*t+aNP.z;t=clamp(((t-aNP.x)/uNP.w),0.,1.);if(eI){t=1.-t;}}${E}cT=t;`+r+`if(cT<.00001){gl_Position=vec4(0);return;}${O}c=cT>=1.?aC.xy:aDCU.xy;${P}pos=vec4(c,0.,1.);vUVLI=cT>=1.?aUVLI:vec4(aDCU.zw,aUVLI.zw);${O}cc=aC.zw;`+(l?`vCC=-20.;t=clamp((uT-uNP.x)/uE.y,0.,1.);t=${Ae.inOutQuad};if(t>=.0&&t<1.){${E}o=4./uU.z;cc=aOP.xy+(aC.zw-aOP.xy)*t;if(uE.z>.5){bool L=aOP.y-o>aC.w;if(uCL.y>-5000.){L=uNP.z>.5?!L:L;${E}h=aOP.z/2.,n=abs(uCL.x-aOP.x)+h,N=abs(aC.z-uCL.y)+h,l=n+N,c=l*t,v=L?1.:-1.;if(c>n){if(c-h<n+h){vCC=(c-h-(n+h))/aOP.z*v;}cc=vec2(aC.z+(L?-(l-c):(l-c)),aC.w);}else{if(c+h>n-h){vCC=(c+h-(n-h))/aOP.z*v;}cc=vec2(aOP.x+(L?c:-c),aOP.y);}}}}`:"")+`${E}z=-uPrj[0][0];${P}zr=vec4(uAR,1.,1.,1.);${P}vp=uPrj*(vec4(c+cc,z,1.)/zr),vps=uPrj*(vec4(c+aC.zw,z,1.)/zr),vpc=uPrj*(vec4(cc,z,1.)/zr);${O}px=pxPos(vp.xy/vp.w);vVP=vec4(px,pxPos(vpc.xy/vpc.w));vUP=uvPos(aC.xy);vCP=vec4((px+vec2(uCO.y,0.0))/uU.zw,pxPos(vps.xy/vps.w));`+(p?`${O}mPos=uM.xy*vU.zw;${E}mD=abs(sqrt(pow(vVP.z-mPos.x,2.)+pow(vVP.w-mPos.y,2.)));`:"")+`cT=1.-cT;vCT=cT;${m.vert}`+(m.appearVert?`if(cT<1.){${m.appearVert}}`:"")+"gl_Position=uPrj*((pos+vec4(cc,z,0.))/zr);";s.cleanDynamicUniforms(),this.backgrounds.forEach((y,T)=>{s.addDynamicUniform(De,"BG"+T),s.addDynamicUniform(O,"BGW"+T),s.addDynamicUniform(O,"BGS"+T)}),this.scrolls.forEach((y,T)=>{s.addDynamicUniform(E,"SR"+T)}),s.refresh(k,n,w,o),e.use(s.program),s.uniform([["Sampler",0],["Noise",1],...this.backgrounds.map((y,T)=>["BG"+T,T+2])]),this.shader=s}generateBackgroundsGLSL(){if(this.backgrounds.length<=0)return{req:[],glsl:""};const e=`${P}bg,tC=vec4(1.);${O}bgUV;`,t=[],s=[];let i=-1;return this.backgrounds.forEach((r,n)=>{if(!r.loaded)return;const o=Ze("effects","frag",le(r.effects)),l=Ze("effects","fragColor",le(r.effects));s.push(...o.req,...l.req);let p="r=mix(r,bg.xyz,bg.w);o=min(dO,o+bg.w*(1.-o));";switch(r.operation){case"out":p="o=max(0.0,o-bg.w*o);";break;case"bgIn":p="r=mix(r,dR,bg.w);";break;case"bgOut":p="o=min(dO,o+bg.w*(1.-o));";break}let c="";r.scaleX&&(c=`vec2(${R(r.scaleX)},${R(r.scaleY)})`);const f=ri[r.size],u=oi[r.size];let g=`bgUV=${f};`,d="vec2(1.)";if(r.fit||(d=`(${u}/uBGW${n})`,g+=`bgUV*=${d};`),c&&(g+=`bgUV/=${c};`,d=`(${d}/${c})`),r.type==="dimage"){const b=r.args[12],w=r.args[13];(b!==0||w!==0)&&(g+=`bgUV-=(vec2(1.)/${u})*vec2(${R(b)},${R(w)});`)}switch(r.align){case"center":g+=`bgUV+=vec2(.5)-${d}/vec2(2.);`;break;case"topcenter":g+=`bgUV.x+=.5-${d}.x/2.;`;break;case"topright":g+=`bgUV.x+=1.-${d}.x;`;break;case"centerleft":g+=`bgUV.y+=.5-${d}.y/2.;`;break;case"centerright":g+=`bgUV+=vec2(1.,.5)-${d}/vec2(1.,2.);`;break;case"bottomleft":g+=`bgUV.y+=1.-${d}.y;`;break;case"bottomcenter":g+=`bgUV+=vec2(.5,1.)-${d}/vec2(2.,1.);`;break;case"bottomright":g+=`bgUV+=vec2(1.)-${d};`;break}if((o.glsl||l.glsl)&&(g+=`ep=vec2(1.)/(uBGW${n}/uBGS${n});`),r.type==="dimage"||r.type==="dpattern"){if(r.type==="dimage")switch(r.args[9]){case"no-repeat":g+="if(bgUV.x>=.0&&bgUV.x<=1.&&bgUV.y>=.0&&bgUV.y<=1.){";break;case"repeat-x":g+="if(bgUV.y>=.0&&bgUV.y<=1.){";break;case"repeat-y":g+="if(bgUV.x>=.0&&bgUV.x<=1.){";break}o.glsl&&(g+="uv=buv;",g+=o.glsl,g+=`${O}uvdiff=(uv-buv);`),g+=`uv=mod(bgUV,vec2(1.))*uBGS${n};`,o.glsl&&(g+="uv+=uvdiff;")}else g+=`uv=bgUV*uBGS${n};`;g+=`bg=texture2D(uBG${n},uv);`,r.invert&&r.operation!=="in"&&(g+="bg.w=1.-bg.w;"),r.opacity<1&&(g+=`bg.w*=${R(r.opacity)};`),l.glsl&&(g+="uv=buv;tA=bg;tO=bg;",g+=l.glsl.replace(/uSampler/g,`uBG${n}`),g+="bg=tA;"),g+="bg*=tC;",g+=p,r.type==="dimage"&&r.args[9]!=="repeat"&&(g+="}"),g=`{${g}}`;const{uniqueID:m}=r.options;i!==m?(i=m,t.push({code:g,ids:oe.getIDs(r.options,"backgrounds")})):t[t.length-1].code+=g}),{req:s,glsl:e+t.reduce((r,n)=>r+Pe(n.code,"uBGID",n.ids),"")}}updateBuffers(){this.updateBufferData(),this.updateBufferAppears(),this.updateBufferPositions(),this.updateBufferColors(),this.updateUniforms(),this.refreshDrawCount()}updateUniforms(){const{shader:e}=this,t=this.wgltr.fontTexture.size,s=this.rect.width/this.rect.height,i=W/180*this.wgltr.options.fov,r=mi(i,1,1e-4,1e4);e.uniform([["Prj",r],["AR",s],["NS",[t.width/this.noiseWidth,t.height/this.noiseHeight]],["U",[1/(t.width/x),1/(t.height/x),et(this.rect.width/x),et(this.rect.height/x)]]]),this.updateOffsetUniform(),this.updateMouseUniform(),this.updateScrollUniform()}updateBackgroundsUniforms(){if(this.backgrounds.length<=0)return;const e=[];this.backgrounds.forEach((t,s)=>{e.push(["BGS"+s,t.scale]),e.push(["BGW"+s,t.usize])}),this.shader.uniform(e)}updateMouseUniform(e,t,s){const i=this.wgltr.htmlText.elRect;e===void 0?[e,t]=this.mousePos:this.mousePos=[e,t],e=e-(i.x+this.rect.x/x),e/=this.rect.width/x,t=t-(i.y+this.rect.y/x),t/=this.rect.height/x,this.shader.uniform([["M",[e,t,s||0]]])}updateScrollUniform(){this.shader.uniform(this.scrolls.map((e,t)=>["SR"+t,(-ge(ae(e.cur)*(W/2))+1)*Zt(e.cur)]))}updateOffsetUniform(){const{shader:e}=this,{canvasPosDiff:t,dprRect:s}=this.wgltr.htmlText;e.uniform([["CO",[t+s.x/x,et(this.canvasReservedWidth/x)]]])}refreshDrawCount(){let e=0;this.wgltr.htmlText.words.forEach(t=>{t.vboStart=e*6,e+=t.glChars.length,t.vboCount=e*6-t.vboStart})}updateBufferData(){const{shader:e}=this,[t,s,i]=e.getVbo("indices","UVLI","P");let r=0;this.wgltr.htmlText.words.forEach(n=>{n.glChars.forEach(o=>{const{glyph:l}=o,[p,c,f,u]=o.uv,[g,d,m,b]=o.uvPaddings,w=l.layer;s.push(f,c,w,0,p,c,w,0,p,u,w,0,f,u,w,0),Qe(i,g,d,m,b),r=t.length/6*4,t.push(r,r+1,r+2,r,r+2,r+3)})}),e.updateVbo()}updateBufferAppears(){const{shader:e}=this,[t,s]=e.getVbo("AP","NP");this.wgltr.htmlText.words.forEach(i=>{const{options:r}=i.node;i.glChars.forEach(n=>{const{node:o,parent:l,glyph:p}=n;n=l||n;const c=n.isAppear||n.isDisappear,f=c?o.changeParent.change:void 0,{total:u,changeTotal:g}=n;let{start:d,end:m}=(c?g:u)||{start:0,end:0},b=c?n.changeDelay:n.delay;n.isAppear&&(b+=f.appearAdditive),n.isDisappear?(b+=f.disappearAdditive,m=-m):n.visible||(d=1/0,m=1/0,b=1/0),this.isManualDisappear&&(m=-m);const w=+!!(l&&r.appearShadowOpacityOnly),k=n.node.glDynamicPadding,y=(p.texSize.width+k[0]+k[2])/x,T=(p.texSize.height+k[1]+k[3])/x;Qe(t,n.id,w,y,T),Qe(s,b,!!n.glyph.isPictographic,d,m)})}),e.updateVbo()}updateBufferPositions(){const{shader:e}=this,[t,s,i]=e.getVbo("C","OP","DCU");this.wgltr.htmlText.words.forEach(r=>{r.glChars.forEach(n=>{const{size:o,dynamicSize:l,centerX:p,centerY:c}=n,{x:f,y:u}=o,{x:g,y:d}=l,m=o.width/2,b=o.height/2,w=l.width/2,k=l.height/2,[y,T,z,$]=n.uvDynamic;t.push(m+f,b+u,p,c,-m+f,b+u,p,c,-m+f,-b+u,p,c,m+f,-b+u,p,c),i.push(w+g,k+d,z,T,-w+g,k+d,y,T,-w+g,-k+d,y,$,w+g,-k+d,z,$),Qe(s,n.oldCenterX,n.oldCenterY,n.size.width,n.size.height)})}),e.updateVbo()}updateBufferColors(){const{shader:e}=this,[t]=e.getVbo("Color");this.wgltr.htmlText.words.forEach(s=>{s.glChars.forEach(i=>{let r=i.node.color;i.shadowID>=0&&(r=i.node.shadow[i.shadowID][0]);for(let n=0;n<4;n++)t.push(...r)})}),e.updateVbo()}draw(e){const{shader:t,wgltr:s}=this,i=this.gl.gl,{fontTexture:r,htmlText:n}=s;if(!r.texture)return;if(this.time+=e/1e3,!this.isAppeared&&this.time>this.totalTime&&(this.isAppeared=!0,this.totalTime>0)){if(s.options.appearDestroy){this.wgltr.destroy();return}this.wgltr.dispatchEvent(this.isManualDisappear?"disappeared":"appeared")}this.wgltr.resizeTimeout<0&&(this.processChange(),this.processScrolls(e/1e3));let o=0;t.uniform([["T",this.time]]),n.words.forEach((p,c)=>{if(!n.isScreenVisible(p.node))return;const{vboStart:f,vboCount:u}=p,{options:g}=p.node,d=!!n.resizeTimer,m=d?0:S(0,g.changeMove);o=S(o,m);const b=p.chars[0],w=d?0:g.changeMultiline?1:0,k=[["E",[g.uniqueID,m,w,b.effectsType]],["BGID",b.bgID],["NP",[this.refreshTime,0,p.isRTL,b.speed]],["MW",b.maxWidth],["CL",[b.oldLineX,b.newLineX]]],{data:y}=g.inherit.backgrounds||g.inherit.effects||g,T=(p.line||p.oldLine||1)-1;k.push(["ID",[c,p.line||0,g.index]],["WC",this.wordsRects[c]],["LC",this.linesRects[T]],["WRC",gt(y.wrapRect||new ne(0,0,0,0))]),t.uniform(k),i.drawElements(i.TRIANGLES,u,i.UNSIGNED_SHORT,f*2)});const l=this.time>this.refreshTime+o;n.processSmoothResize(e,l)}processChange(){const{wgltr:e}=this,{htmlText:t}=e,s=t.resizeTimer<=0||t.waitForSmoothResize;if(!this.isAppeared||this.isManualDisappear)return;let i=!1,r=!1,n=!1;t.changeNodes.forEach(o=>{const{options:l,change:p}=o;if(!p.done){if(p.waitToResize&&this.time>=p.textResizeTime&&(r=!0,p.waitToResize=!1,p.toggle=!0,p.keepOrder=!0),p.isDisappear&&this.time>=p.disappearEnd)p.isDisappear=!1,p.isAppear=!0,this.wgltr.dispatchEvent("changeDisappeared",o.node);else if(p.isAppear&&this.time>=p.changeEnd)p.isAppear=!1,this.wgltr.dispatchEvent("changeAppeared",o.node),this.wgltr.dispatchEvent("changed",o.node);else if(this.time>=p.changeStart&&s){if(p.started=!0,l.change!=="manual"&&!l.changeLoop&&!p.order.length&&p.current!==0){p.done=!0;return}if(!p.order.length&&l.change!=="manual"&&(p.order=[...Array(p.nodes.length).keys()].map(c=>({index:c})),(p.current===0||l.changeSkipFirst)&&p.order.splice(0,1),l.changeRandom&&(p.order=p.order.sort(()=>re()*2-1))),p.order.length){const{index:c,str:f}=p.order.shift();p.isAppear=!1,p.isDisappear=!0,p.waitToResize=!0,p.toggle=!1,p.time=this.time,p.previous=p.current,p.current=ds(c,0,p.nodes.length),i=!0,f&&(p.str=f,n=!0),this.wgltr.dispatchEvent("changeStarted",o.node)}}}}),(i||r||n)&&(r||n?(e.startChanging(),t.changeNodes.forEach(({change:o})=>{o.str&&(o.nodes[o.current].node.innerHTML=o.str,o.str=""),o.toggle&&(t.toggleChangeEl(o,o.current),o.toggle=!1)}),n&&t.resize(),t.refreshCoords(!0),n&&e.fontTexture.refresh()):t.refreshCoords(!0),t.changeNodes.forEach(({change:o})=>{const{nodes:l,previous:p,current:c}=o;o.isWider=l[c].changeWidth>l[p].changeWidth}),this.refresh(!0),this.updateUniforms(),this.updateBufferAppears(),this.updateBufferPositions(),this.refreshDrawCount(),(r||n)&&(n?(this.updateBuffers(),this.bindBackgrounds(),e.refreshCanvasPosition(),e.refreshCanvasSize()):e.refreshCanvasPosition(),e.stopChanging()))}appear(){this.isManualAppear||(this.isAppeared=!1,this.isManualAppear=!0,this.isManualDisappear=!1,this.manualStartTime=this.time,this.refresh(),this.updateBuffers())}disappear(){this.isManualDisappear||(this.isAppeared=!1,this.isManualAppear=!1,this.isManualDisappear=!0,this.manualStartTime=this.time,this.refresh(),this.updateBuffers())}}class Ei{start(e,t,s,i,r,n){const o={options:e,reverse:t,random:s,reset:i,skip:r,keepOrder:n,chars:[],parent:this.cur};!this.first&&(this.first=o),this.cur&&this.cur.chars.push(o),this.cur=o}push(e){this.cur.chars.push(e)}process(e){for(;e--;){const{cur:t}=this;if(t.skip)t.parent.chars.splice(-1,1,...t.chars);else{if(t.reverse===!0){let r=[],n=t.chars.length?t.chars[0].line:0;t.chars=t.chars.reduce((o,l,p)=>{const c=p===t.chars.length-1;return c&&r.push(l),(n!==l.line||c)&&(n=l.line,o.push(...r.reverse()),r=[]),r.push(l),o},[])}let s={},i=[];if(t.chars=t.chars.reduce((r,n)=>{let o=!1;if(!n.chars){if(!n.visible&&!n.isDisappear)return r;o=n.reset||n.count==="word"&&s.word!==n.word||n.count==="line"&&s.line!==n.line||typeof n.count=="number"&&i.length>=n.count,s=n}return(o||n.chars)&&(i.length&&(r.push(i),i=[]),n.chars&&r.push(n)),n.chars||(i.push(n),i.start=i[0].start),r},[]),i.length&&t.chars.push(i),t.chars.length>0){const r=t.chars[0].length?t.chars[0][0].start:0;t.random===!0&&((!t.keepOrder||!t.options.orderRandom)&&(t.options.orderRandom=[...t.chars.keys()].sort(()=>re()>.5?-1:1)),t.chars=t.options.orderRandom.reduce((n,o)=>(n.push(t.chars[o]),n),[])),r&&(t.chars[0].start=r)}t.chars=t.chars.reduce((r,n)=>(n.chars?r.push(...n.chars):r.push(n),r),[]),t.reset&&t.chars.length&&(t.chars[0].reset=t.reset)}this.cur=t.parent}}result(){return this.first.chars}}class Ci{constructor(e,t){this.canvas=e||Te("canvas"),this.wgltr=t,this.gl=xs(this.canvas,{alpha:!0,depth:!1,stencil:!1,antialias:!1});const s=this.gl;s.enable(s.BLEND),s.clearColor(0,0,0,0),this.decorBuffer=s.createFramebuffer()}use(e){this.gl.useProgram(e)}resize(e=this.canvas.width,t=this.canvas.height){this.gl.viewport(0,0,e,t)}draw(e){const{gl:t,wgltr:s}=this;t.clear(t.COLOR_BUFFER_BIT),s.draw(e)}createNoiseTexture(e,t,s){if(!this.noiseTexture){let i=t*s,r=0;const n=new Uint8Array(i*3);for(;i--;)n[r++]=re()*255,n[r++]=re()*255,n[r++]=re()*255;this.noiseTexture=this.createTexture(n,e,this.gl.RGB,t,s)}return this.noiseTexture}prepareDecorations(e,t){const{gl:s}=this;this.resize(e,t),this.decorTexture=this.createTexture(void 0,3,s.RGBA,e,t),s.bindFramebuffer(s.FRAMEBUFFER,this.decorBuffer),s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,this.decorTexture,0),s.blendFunc(s.ONE,s.ONE),s.clear(s.COLOR_BUFFER_BIT|s.DEPTH_BUFFER_BIT),s.activeTexture(s.TEXTURE0)}finishDecorations(){const{gl:e}=this;e.bindFramebuffer(e.FRAMEBUFFER,null),this.restoreBlending()}restoreBlending(){const{gl:e}=this;e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)}processDecorations(){const{gl:e}=this;e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)}createTexture(e,t,s,i,r){const{gl:n}=this,o=this.gl.createTexture();n.activeTexture(n.TEXTURE0+t),n.bindTexture(n.TEXTURE_2D,o),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.REPEAT),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.REPEAT),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.LINEAR),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.LINEAR);try{e instanceof Element?n.texImage2D(n.TEXTURE_2D,0,s,s,n.UNSIGNED_BYTE,e):n.texImage2D(n.TEXTURE_2D,0,s,i,r,0,s,n.UNSIGNED_BYTE,e)}catch{console.warn("WGLTR. Can't create WebGL texture!")}return o}bindTexture(e,t){const{gl:s}=this;s.activeTexture(s.TEXTURE0+e),s.bindTexture(s.TEXTURE_2D,t)}updateTexture(e){const{gl:t}=this;t.texSubImage2D(t.TEXTURE_2D,0,0,0,t.RGBA,t.UNSIGNED_BYTE,e)}destroy(){const e=this.gl.getExtension("WEBGL_lose_context");e&&e.loseContext&&e.loseContext()}}const De="sampler2D ",Ot="lowp float ",Me="highp float ",E="lowp float ",O="lowp vec2 ",Ce="lowp vec3 ",P="lowp vec4 ",$s="lowp mat4 ",Ae={linear:"t",inQuad:"pow(t,2.)",outQuad:"-(t*(t-2.))",inOutQuad:"t<0.5?(2.*t*t):((-2.*t*t)+(4.*t)-1.)",inCubic:"pow(t,3.)",outCubic:"pow(t-1.,3.)+1.",inOutCubic:"t<0.5?4.*t*t*t:(tmp=(2.*t)-2.,0.5*tmp*tmp*tmp+1.)",inExpo:"t==0.?0.:pow(2.,(10.*(t-1.)))",outExpo:"t==1.?1.:-(pow(2.,(-10.*t)))+1.",inOutExpo:"t==0.?0.:(t==1.?1.:(t<0.5?pow(2.,20.*t-10.)/2.:(2.-pow(2.,-20.*t+10.))/2.))",inSine:`-cos(t*(${W}/2.))+1.`,outSine:`sin(t*(${W}/2.))`,inOutSine:`-0.5*(cos(${W}*t)-1.)`,inCirc:"-(sqrt(1.-(t*t))-1.)",outCirc:"sqrt(1.-(pow((t-1.),2.)))",inOutCirc:"t<0.5?(1.-sqrt(1.-pow(2.*t,2.)))/2.:(sqrt(1.-pow(-2.*t+2.,2.))+1.)/2.",inQuart:"pow(t,4.)",outQuart:"1.-pow(1.-t,4.)",inOutQuart:"t<0.5?8.*t*t*t*t:1.-pow(-2.*t+2.,4.)/2."},Ti={pxPos:`${O}pxPos(${O}p){return vec2((p.x+1.)/2.,(2.-(p.y+1.))/2.)*uU.zw;}`,uvPos:`${O}uvPos(${O}c){return vec2(c.x>0.?1.:0.,c.y>0.?0.:1.);}`,toPos:`${Ce}toPos(${Ce}p){return vec3(p/vec3(uU.zw/2.,uU.w/2.)*vec3(uAR,1.,1.));}`,quat:`mat4 quat(${Ce}q){${E}a=sin(q.x),b=cos(q.x),c=sin(q.y),d=cos(q.y),e=sin(q.z),f=cos(q.z),j=a*d*f-b*c*e,k=b*c*f+a*d*e,l=b*d*e-a*c*f,z=b*d*f+a*c*e,m=j+j,v=k+k,n=l+l,w=j*m,t=k*m,y=k*v,i=l*m,o=l*v,p=l*n,s=z*m,g=z*v,h=z*n;return mat4(1.-y-p,t+h,i-g,0.,t-h,1.-w-p,o+s,0.,i+g,o-s,1.-w-y,0.,0.,0.,0.,1);}`,follow:`void follow(inout ${P}pos,${P}us,${E}lx,${E}ly,${E}dx,${E}dy){${O}m=uM.xy*uU.zw;us+=vec4(-abs(lx),-abs(ly),abs(lx)*2.,abs(ly)*2.);${O}lv=(m-(us.xy+us.zw/vec2(2.)))/(us.zw/vec2(2.));if(abs(lv.x)>1.||abs(lv.y)>1.){return;}${O}pw=abs(lv);lv*=min(vec2(1.),vec2(1.-max(pw.x,pw.y))/(vec2(dx,dy)));lv*=abs(vec2(lx,ly));${Ce}p=toPos(vec3(lv,.0));pos.x+=lx<.0?-p.x:p.x;pos.y-=ly<.0?-p.y:p.y;}`},ki={tex:`${P}tex(${De}S,${O}uv,${P}C){if(uv.y<vP.y||uv.x<vP.x||uv.y>vP.w||uv.x>vP.z){return vec4(C.xyz,0.);}${P}c=texture2D(S,uv);${P}a=vec4(C.xyz,c.r*C.w);if(vUVLI.z>2.5){a=c;}else if(vUVLI.z>1.5){a.w=c.b*C.w;}else if(vUVLI.z>0.5){a.w=c.g*C.w;}return a;}`,overlay:`${P}overlay(${P}f,${P}s){${E}a=s.w+f.w-f.w*s.w;return vec4((f.rgb*f.w*(1.-s.w)+s.rgb*s.w)/a,a);}`,dst:`void dst(inout ${O}uv,${O}ep,${Me}x,${Me}y,${E}ax,${E}ay,${E}ox,${E}oy,${E}tx,${E}ty){uv.x+=sin((vVP.y*${W}/x)+(uT*tx)+(vAP.x*${W}*ox))*(ax*ep.x);uv.y+=sin(((vVP.x+uCO.x)*${W}/y)+(uT*ty)+(vAP.x*${W}*oy))*(ay*ep.y);}`,glitch:`void glitch(inout ${O}uv,${O}ep,${E}ct,${E}d,${E}s,${E}l,${O}a,${E}ag,${E}ss,${E}de){${E}gd=length(vAP.zw*a);if(s<.5){l*=2.;}${P}tN=texture2D(uNoise,(vec2(ag,0.0)*(gd/l)+uT/ss)*ep*vNS);if(tN.x<=de){${E}t=tN.x/de;if(s>.5){d=tN.y>.5?d:-d;}else{t=(t>.5?1.-t:t)*2.;if(t>${R(1/3)}){t=(t-${R(1/3)})/${R(1-1/3)}*2.-1.;t=clamp(t,0.,1.);}else{t=t*3.;d=-d;}t=${Ae.inOutCirc};}uv+=a*t*ep*d*ct;}}`,cglitch:`void cglitch(${De}S,inout ${O}uv,${O}ep,${P}tO,inout ${P}tA,${E}ct,${P}c1,${P}c2,${E}d,${O}a,${E}ag,${E}co,${E}al,${E}ss,${E}sd,${E}sy){if(ct<=0.){return;}${E}gd=length(vAP.zw*vec2(a.y,a.x))/sy,vd=d*ct;${O}D=a*vd*ep;${E}tN=texture2D(uNoise,(vec2(ag,.0)*gd+uT/ss)*ep*vNS+vec2(uID.x*.1,0.)).x,aw=tA.w,ow=tO.w,tOw=tO.w;{${E}t=tN;t=${Ae.inOutSine};tN=t*sd;}D-=D*tN;al=(1.-(vd-vd*tN)/d*al);c1.w*=al;c2.w*=al;${P}f=tex(S,uv+D,vec4(c1.xyz,1.)),s=tex(S,uv-D,vec4(c2.xyz,1.)),fc=vec4(c1.xyz,f.w*c1.w),sc=vec4(c2.xyz,s.w*c2.w),m=overlay(fc,sc);tA=overlay(m,(co>.5)?((f.w>.01&&s.w>.01)?vec4(tA.rgb,min(s.w,f.w)*tA.w):vec4(0.)):tA);}`,noise:`${E}noise(${O}uv,${O}ep,${E}p,${E}mx,${E}my,${E}sx,${E}sy){${P}tN=texture2D(uNoise,((uv+vec2(mx,my)*ep*uT)*vNS)/vec2(sx,sy));${E}ns=.3/(min(sx,sy)/2.);return clamp(max(0.,p*(1.+ns)-tN.y)/ns,0.,1.);}`,color:`void color(inout ${P}tA,${P}c,${E}p){tA.xyz=mix(tA.xyz,c.xyz,p*c.w);}`,uvNoise:`void uvNoise(inout ${O}uv,${O}ep,${E}t,${E}stx,${E}sty,${E}mx,${E}my,${E}sx,${E}sy){${P}tN=texture2D(uNoise,((uv+vec2(vAP.x)+vec2(mx,my)*ep*uT)*vNS)/vec2(sx,sy));{${E}t=tN.x;t=${Ae.inOutSine};tN.x=t;}{${E}t=tN.y;t=${Ae.inOutSine};tN.y=t;}uv+=(tN.xy*2.-1.)*ep*(vec2(stx,sty)*t);}`};class Ps{constructor(e,t){this.gl=e.gl,this.options=t,this.indices={},this.attrs={},this.uniforms={},this.dynamicUniforms=[],this.vboList={indices:{data:[]}},this.program=this.gl.createProgram()}refresh(e,t,s,i){const{gl:r,program:n}=this;[e?this.vert:!1,s?this.frag:!1].forEach(o=>{o&&(r.detachShader(n,o),r.deleteShader(o))}),e&&(this.vert=this.compile(r.VERTEX_SHADER,this.generate(!0,t,e))),s&&(this.frag=this.compile(r.FRAGMENT_SHADER,this.generate(!1,i,s))),this.link(!!e,!!s)}link(e,t){const{program:s,options:i,gl:r}=this;e&&r.attachShader(s,this.vert),t&&r.attachShader(s,this.frag),r.linkProgram(s),e&&i.attrs.forEach(([,n])=>{this.attrs[n]=r.getAttribLocation(s,"a"+n),!this.vboList[n]&&(this.vboList[n]={data:[]})}),i.uniforms.forEach(([n,o])=>{this.uniforms[o]={type:"uniform"+{[De]:"1i",[Me]:"1f",[Ot]:"1f",[E]:"1f",[O]:"2fv",[Ce]:"3fv",[P]:"4fv"}[n],isMatrix:n===$s,loc:r.getUniformLocation(s,"u"+o)}})}compile(e,t){const{gl:s}=this,i=s.createShader(e);return s.shaderSource(i,t),s.compileShader(i),i}generate(e,t,s){const{attrs:i,uniforms:r,varyings:n}=this.options;let o="",l="";[i,r,n].forEach((f,u)=>{const[g,d]=[["attribute","a"],["uniform","u"],[]][u];f.forEach(([m,b,w,k])=>{(e||k)&&d&&(o+=`${g} ${m} ${d}${b};`),w&&(o+=`varying ${m} v${b};`,e&&d&&(l+=`v${b} = ${d}${b};`))})}),t=t.filter((f,u)=>t.indexOf(f)===u);const p=[Ti,ki][+!e];let c="";return["pxPos","toPos","uvPos","tex","overlay",...t].forEach(f=>{p[f]&&(c+=p[f])}),o+c+`void main(){${l}${s}}`}getVbo(...e){return this.curAttrs=e,e.map(t=>this.vboList[t].data)}updateVbo(){const{gl:e}=this;this.curAttrs.forEach(t=>{const s=t==="indices",i=this.attrs[t],r=this.vboList[t];r.type=s?e.ELEMENT_ARRAY_BUFFER:e.ARRAY_BUFFER,r.count=r.data.length;const n=s?new Uint16Array(r.data):new Float32Array(r.data);r.buffer?(e.bindBuffer(r.type,r.buffer),e.bufferData(r.type,n,e.STATIC_DRAW)):(r.buffer=e.createBuffer(),e.bindBuffer(r.type,r.buffer),e.bufferData(r.type,n,e.STATIC_DRAW)),!s&&i>=0&&(e.enableVertexAttribArray(i),e.vertexAttribPointer(i,4,e.FLOAT,!1,0,0)),r.data=[]})}cleanVBO(){Object.values(this.vboList).forEach(e=>{this.gl.deleteBuffer(e.buffer),e.buffer=void 0})}uniform(e){const{gl:t,uniforms:s}=this;e.forEach(([i,r])=>{const{type:n,isMatrix:o,loc:l}=s[i];o?t.uniformMatrix4fv(l,!1,r):t[n](l,r)})}cleanDynamicUniforms(){let e=this.dynamicUniforms.length;for(;e--;){const t=this.dynamicUniforms[e];ut(this.options.uniforms,s=>s[1]===t)}this.dynamicUniforms=[]}addDynamicUniform(e,t){this.options.uniforms.push([e,t,0,1]),this.dynamicUniforms.push(t)}destroy(){const{gl:e,program:t,vert:s,frag:i}=this;this.cleanVBO(),e.detachShader(t,s),e.detachShader(t,i),e.deleteShader(s),e.deleteShader(i),e.deleteProgram(t)}}const yt={paused:!1,enabled:!1,requested:!1,toDraw:[],time:0,change(a){a.visible?this.toDraw.push(a):ut(this.toDraw,a),!this.enabled&&this.toDraw.length>0?(this.enabled=!0,this.request()):this.toDraw.length===0&&(this.enabled=!1,this.requested=!1,X.cancelAnimationFrame(this.rafID))},draw(a){const e=ve(a-this.time,50);this.toDraw.forEach(t=>t.gl.draw(e)),this.time=a,this.enabled&&!this.paused&&!this.requested&&(this.requested=!0,this.rafID=jt(t=>{this.requested=!1,this.draw(t)}))},request(a=!1){!this.requested&&(!this.paused||a)&&(this.requested=!0,this.rafID=jt(e=>{this.requested=!1,this.time=e,this.draw(e)}))},pause(){this.paused=!0,this.requested=!1,X.cancelAnimationFrame(this.rafID)},resume(){this.paused=!1,this.request()}};class I{constructor(e,t,...s){if(I.notSupported)return e.classList.add(K,K+"-not-supported"),!1;if(e[K])return e[K];this.el=e,this.options=e[nt]=t;const i=Array.from(this.el.querySelectorAll(`[${Kt}]`));i.forEach(r=>{const n=Es(r.getAttribute(Kt));r[nt]=n}),s.forEach(r=>{r.el[nt]=r,i.push(r.el),delete r.el}),t.wrapOnly&&(this.rootWrappers=i.filter(r=>!i.some(n=>n!==r&&n.contains(r))),Object.entries(t).forEach(([r,n])=>{this.rootWrappers.forEach(o=>{const l=o[nt];l[r]===void 0&&(l[r]=n)})})),this.resizeTimeout=-1,this.colorsBlocked=!0,this.colorsChangedTimer=0,this.changingCount=0,this.canvas=Te("canvas"),V(this.canvas,{background:"rgba(0,0,0,0)","border-radius":"0",display:"block",position:"absolute",padding:"0",margin:"0",transform:"0",top:"0",left:"0","z-index":"-1","pointer-events":"none","image-rendering":"pixelated","will-change":"transform"}),this.contextLostCallback=()=>{this.destroy()},this.canvas.addEventListener("webglcontextlost",this.contextLostCallback),this.styles=X.getComputedStyle(e),this.styles.position==="static"&&V(e,{position:"relative"}),this.styles.zIndex==="auto"&&V(e,{"z-index":"0"}),this.styles.transform!=="none"&&(this.usesTransform=!0),this.htmlText=new wi(this,this.el),this.gl=new Ci(this.canvas,this),this.text=new Si(this),this.fontTexture=new yi(this),this.el.prepend(this.canvas),I.list.push(e[K]=this),this.events={},this.addEvents(),Ke.observe(this.el),Nt.observe(this.el),rt&&bt.observe(this.el),_e&&(this.MO=new _e(()=>{this.resize(!0)}),this.moObserve()),this.scrollX=0,this.scrollY=0,this.mouseX=0,this.mouseY=0,this.scrollCallback=()=>this.scroll(),Re(ts(this.options.scrollParent),"scroll",this.scrollCallback),e.classList.add(K)}moObserve(){_e&&this.MO.observe(this.el,{characterData:!0,childList:!0,subtree:!0})}startChanging(){this.changingCount===0&&(rt&&bt.unobserve(this.el),_e&&this.MO.disconnect(),this.isChanging=!0),this.changingCount++}stopChanging(){this.changingCount--,this.changingCount===0&&(_e&&this.moObserve(),rt&&bt.observe(this.el))}fontLoaded(e){this.fontTexture.prevGlyphs=[],this.fontTexture.glyphs=[],this.fontTexture.glyphsChanged=!0,Wt.clear(e),this.resize()}mousemove(e=this.mouseX,t=this.mouseY){const s=this.options.scrollParent;this.mouseX=e,this.mouseY=t,this.text.updateMouseUniform(e+s.scrollLeft,t+s.scrollTop,0)}scroll(){const e=this.options.scrollParent,t=this.scrollX-e.scrollLeft,s=this.scrollY-e.scrollTop;this.scrollX=e.scrollLeft,this.scrollY=e.scrollTop,this.text.setScrollsStrength(ae(s)>ae(t)?s:t),this.mousemove()}resize(e=!1,t=!1){if(!this.isDestroyed)if(e){this.resizeTimeout=-1;const{htmlText:s,text:i,fontTexture:r}=this;t?s.refreshStylesInfo():(s.resize(),s.refreshCoords(),s.sizeChanged&&(s.sizeChanged=!1,r.glyphsChanged=!0,r.updateShader(),i.updateShader())),r.refresh(),i.refresh(),i.drawBackgrounds(),i.updateBackgroundsUniforms(),this.refreshCanvasPosition(),this.refreshCanvasSize(),i.updateBuffers(),this.colorsBlocked=!1,this.gl.draw(0)}else clearTimeout(this.resizeTimeout),this.resizeTimeout=setTimeout(()=>{this.resize(!0)},1)}removeTransform(){this.usesTransform&&(this.transform=this.styles.transform,V(this.el,{transform:"none"}))}restoreTransform(){this.usesTransform&&V(this.el,{transform:this.transform})}refreshCanvasPosition(){const{canvas:e,text:t}=this;V(e,{left:`${t.rect.x/x}px`,top:`${t.rect.y/x}px`})}refreshCanvasSize(){const{canvas:e,text:t}=this;V(e,{width:`${t.rect.width/x}px`}),e.width=t.rect.width,e.height=t.rect.height,this.gl.resize()}draw(e){(this.colorsChanged||this.colorsChangedTimer>0)&&(this.colorsChanged=this.htmlText.refreshColors(),this.text.updateBufferColors(),this.colorsChanged?this.colorsChangedTimer=fe.colorsChangeDelay:this.colorsChangedTimer--,this.htmlText.useShadow&&this.htmlText.nodes.some(t=>t.shadowChanged)&&(this.text.charsPxToPercent(),this.text.updateBufferPositions())),this.text.draw(e)}setOptions(...e){if(this.isDestroyed)return;const t=es,s=Object.keys(es),i=s.reduce((r,n)=>(r[n]=!1,r),{});e.forEach(r=>{let n=this.options;r.el&&(n=this.htmlText.nodes.find(o=>o.node===r.el),n=n?n.options:this.options,delete r.el),Object.entries(r).forEach(([o,l])=>{oe.setOption(n,o,l)}),s.forEach(o=>{i[o]=i[o]||t[o].some(l=>l in r)})}),i.textureHard&&(this.fontTexture.calcDecors(),this.fontTexture.updateShader(),this.fontTexture.loadDecors()),i.textureSoft&&(this.fontTexture.glyphsChanged=!0),i.shadersHard&&(this.text.refreshBackgrounds(),this.text.refreshScrolls(),this.text.updateShader(),this.text.updateBackgroundsUniforms(),this.text.updateBuffers()),i.shadersSoft&&this.text.updateUniforms(),i.resizeHard?this.resize(!0,!1):i.resizeSoft&&this.resize(!0,!0)}change(e=this.el,t=""){const s=this.htmlText.nodes,i=e?s.find(o=>o.node===e):s[0],{change:r,options:n}=i;if(r){const o=r.order.length?r.order[r.order.length-1].index:r.current;let l=o+1;if(n.changeRandom)for(l=o;l===o;)l=G(re()*r.nodes.length),n.changeSkipFirst&&l===0&&(l=o);r.order.push({str:t,index:l})}else console.warn("WGLTR. Change node not found!")}isChangeReady(e){if(e===void 0)return this.htmlText.changeNodes.every(s=>this.isChangeReady(s.node));const t=this.htmlText.changeNodes.find(s=>s.node===e);if(t){const s=t.change.isAppear||t.change.isDisappear;return!(t.change.order.length>0||s)}return console.warn("WGLTR. Change node not found!"),!0}isAppeared(){return!!this.text.isAppeared&&!this.text.isManualDisappear}isManualAppeared(){return!!this.text.isAppeared&&this.text.isManualAppear}isDisappeared(){return this.text.isManualDisappear&&!!this.text.isAppeared}reset(){this.htmlText.changeNodes.forEach(e=>{const{change:t}=e;t.previous=0,t.current=0,t.isDisappear=!1,t.isAppear=!1,t.toggle=!1,t.order=[],t.time=0}),this.text.manualStartTime=1/0,this.text.isManualAppear=!1,this.text.isManualDisappear=!1,this.text.isAppeared=!1,this.text.time=0,this.resize(!0,!1)}appear(){this.text.appear()}disappear(){this.text.disappear()}dispatchEvent(e,t){Object.defineProperty(I.events[e],"target",{configurable:!0,value:t||this.el}),this.el.dispatchEvent(I.events[e])}addEvents(){Object.entries(I.events).forEach(([e,t])=>{this.events[e]=s=>{this.options[e]&&this.options[e](s)},Re(this.el,t.type,this.events[e])})}removeEvents(){Object.entries(I.events).forEach(([e,t])=>{ss(this.el,t.type,this.events[e])})}destroy(){clearTimeout(this.resizeTimeout),this.canvas.removeEventListener("webglcontextlost",this.contextLostCallback),this.removeEvents(),this.htmlText.destroy(),this.canvas.remove(),ss(ts(this.options.scrollParent),"scroll",this.scrollCallback),Ke.unobserve(this.el),Nt.unobserve(this.el),rt&&bt.unobserve(this.el),_e&&this.MO.disconnect(),this.visible=!1,yt.change(this),this.fontTexture.destroy(),setTimeout(()=>this.gl.destroy(),100),V(this.el,{position:"","z-index":""}),ut(I.list,this),this.el[K]=void 0,this.isDestroyed=!0}}I.events={appeared:new Event(K+"Appeared"),disappeared:new Event(K+"Disappeared"),changed:new Event(K+"Changed"),changeStarted:new Event(K+"ChangeStarted"),changeAppeared:new Event(K+"ChangeAppeared"),changeDisappeared:new Event(K+"ChangeDisappeared")};I.defaultOptions=fe;I.presets=ye;I.simplePresets=vt;I.list=[];I.refresh=function(){const a=[];return Ks(`[${Jt}]`).forEach(e=>{a.push(new I(e,Es(e.getAttribute(`${Jt}`))))}),a};I.resize=function(a,e){this.list.forEach(t=>t.resize(a,e))};I.destroy=function(){let a=this.list.length;for(;a--;)this.list[a].destroy()};I.setDefaultOptions=function(a){Object.assign(fe,a),this.refreshIO()};I.refreshIO=function(){Ke&&I.list.forEach(a=>Ke.unobserve(a.el)),Ke=new Lt(a=>a.forEach(e=>{const t=e.target[K];t.visible=e.isIntersecting,yt.change(t)}),{rootMargin:fe.appearMargin+"px",threshold:[0]}),I.list.forEach(a=>Ke.observe(a.el))};(!(X.WebGLRenderingContext&&xs(Te("canvas")))||!Lt)&&(console.warn("WGLTR. Failed to get WebGL context!"),I.notSupported=!0);let Ke;const Nt=new Lt(a=>a.forEach(e=>{e.isIntersecting&&Nt.unobserve(e.target)}),{rootMargin:"-50px 0px -50px 0px"});I.refreshIO();const bt=X.ResizeObserver&&new X.ResizeObserver(a=>{x=X.devicePixelRatio,a.forEach(e=>{const t=e.target[K];t.isChanging?t.isChanging=!1:t.resize(!1,!1,!0)})});Re(X,"load",()=>{I.refresh(),I.notSupported||!rt&&I.resize()});Re(X,"resize",()=>{x=X.devicePixelRatio,I.resize()});Re(X,"mousemove",a=>{I.list.forEach(e=>{e.mousemove(a.clientX,a.clientY)})});Re(X,"blur",()=>{fe.pauseOnBlur&&yt.pause()});Re(X,"focus",()=>{fe.pauseOnBlur&&yt.resume()});class $i{constructor(e,t){this.mode="default",this.fontSize=72,this.wgltrText=h.q("#bw")[0],this.wgltr=this.wgltrText.wgltr,this.warning=h.q("#builder-warning")[0],this.splitEnabled=!1,h.q("#bw-text")[0].on("input",i=>{!this.splitEnabled&&/[\u0621-\u064A]/.test(i.target.value)&&(this.splitEnabled=!0,h.q("#bu-split")[0].value="words",this.setOption("split","words"),this.showWarning("The textureSplit option changed to words!")),h.qe(this.wgltrText,".wgltr-span").forEach(r=>{r.innerText.length===0&&this.wgltr.reset(),r.innerText=i.target.value})}),this.wgltrText.on("wgltrAppeared",()=>{this.mode==="appear"&&(this.modeTimeout=setTimeout(()=>this.wgltr.reset(),1e3)),this.mode==="appear&disappear"&&(this.modeTimeout=setTimeout(()=>{this.wgltr.change()},1e3))}),this.wgltrText.on("wgltrChangeDisappeared",()=>{this.mode==="disappear"&&(this.modeTimeout=setTimeout(()=>{this.wgltr.reset(),this.wgltr.change()},1e3))}),this.wgltrText.on("wgltrChangeAppeared",()=>{this.mode==="appear&disappear"&&(this.modeTimeout=setTimeout(()=>{this.wgltr.change()},1e3))}),this.fontsSelect=h.q("#bw-family")[0],this.variantSelect=h.q("#bw-variant")[0],this.modeSelect=h.q("#bw-mode")[0],this.loadFonts(i=>{let r=0,n="";i.items.forEach((o,l)=>{let p="";o.family=="Noto Sans"&&(r=l,p=" selected"),n+=`<option value="${l}"${p}>${o.family}</option>`}),this.fontsSelect.innerHTML=n,this.fontsSelect.on("change",()=>{const o=i.items[parseInt(this.fontsSelect.value)];this.curFontItem=o,this.refreshVariants()}),this.variantSelect.on("change",()=>{this.curVariant=this.variantSelect.value,this.loadFont()}),this.curFontItem=i.items[r],this.refreshVariants(!1),h.qe(this.variantSelect,'[value="600"]')[0].selected=!0,this.curVariant="600",this.loadFont(!1)}),this.modeSelect.on("change",i=>{this.setMode(i.target.value)}),h.q("#bw-size")[0].on("change",i=>{const r=parseInt(i.target.value);this.fontScale=r/this.fontSize,this.fontSize=r,this.stackEffects.refreshPreset(),this.stackStatic.refreshPreset(),this.stackMouse.refreshPreset(),this.stackScroll.refreshPreset(),this.stackAppear.refreshPreset(),this.stackDisappear.refreshPreset(),this.refreshCode(),this.wgltrText.style.fontSize=r+"px",this.wgltr&&this.wgltr.resize(!0)}),h.q("#bw-spacing")[0].on("change",i=>{const r=parseFloat(i.target.value)/100;this.wgltrText.style.letterSpacing=r+"em",this.wgltr&&this.wgltr.resize(!0)});const s=h.q(".bw-color");s.forEach((i,r)=>i.on("click",()=>{s.forEach(n=>h.clr(n,"bw-current")),h.cla(i,"bw-current"),r===0?this.wgltrText.style.color="":this.wgltrText.style.color=window.getComputedStyle(i).backgroundColor})),this.options=[],this.generateOptions("other",qs),this.generateOptions("appear",Fs),this.generateOptions("disappear",Bs),this.generateOptions("decorations",Ms),this.stacks=[],this.stackEffects=new Ee(this,"effects","effects","effect",ee,Ws,i=>{h.debounce("builderStackEffects",()=>{const r=this.stackEffects.get();r.length&&i&&this.mode!=="default"&&this.setMode("default"),this.setWGLTREffectsOptions({effects:r})},5)}),this.stackStatic=new Ee(this,"staticEffects","staticEffects","effect",Vs,Us,()=>{h.debounce("builderStackStaticEffects",()=>{this.setWGLTREffectsOptions({staticEffects:this.stackStatic.get()})},5)}),this.stackMouse=new Ee(this,"mouseEffects","mouseEffects","effect",Xs,ps,i=>{h.debounce("builderStackMouseEffects",()=>{const r=this.stackMouse.get();r.length&&i&&this.mode!=="default"&&this.setMode("default"),this.setWGLTREffectsOptions({mouseEffects:r})},5)}),this.stackScroll=new Ee(this,"scrollEffects","scrollEffects","effect",Ys,_s,i=>{h.debounce("builderStackScrollEffects",()=>{const r=this.stackScroll.get();r.length&&i&&this.mode!=="default"&&this.setMode("default"),this.setWGLTREffectsOptions({scrollEffects:r})},5)}),this.stackAppear=new Ee(this,"appearEffects","appearEffects","effect",Yt,Xt,i=>{h.debounce("builderStackAppearEffects",()=>{const r=this.stackAppear.get();r.length&&i&&(this.mode==="default"?this.setMode("appear"):this.mode==="disappear"&&this.setMode("appear&disappear")),this.setWGLTREffectsOptions({appearEffects:r})},5)}),this.stackDisappear=new Ee(this,"disappearEffects","disappearEffects","effect",Yt,Xt,i=>{h.debounce("builderStackDisappearEffects",()=>{const r=this.stackDisappear.get();r.length&&i&&(this.mode==="default"?this.setMode("disappear"):this.mode==="appear"&&this.setMode("appear&disappear")),this.setWGLTREffectsOptions({disappearEffects:r})},5)}),this.stackDecors=new Ee(this,"decors","decors","decoration",js,Hs,()=>{h.debounce("builderStackDecors",()=>{this.setWGLTREffectsOptions({decors:this.stackDecors.get()})},5)}),this.stackBackgrounds=new Ee(this,"backgrounds","backgrounds","background",Qs,Pt,()=>{h.debounce("builderStackBackgrounds",()=>{this.setWGLTREffectsOptions({backgrounds:this.stackBackgrounds.get()})},5)}),h.debounce("builderRefresh",()=>this.refreshCode(),100),Object.entries(ht).forEach(([i,r])=>{let n="";n+='<option value="none" selected="true">None</option>',Object.entries(r).forEach(([c,f])=>{n+=`<option value="${c}">${f}</option>`}),n+='<option value="custom">Custom</option>';const o=this.stacks.find(c=>c.effect===i),l=h.q(`#bu-simple-${i}-presets`)[0];l.innerHTML=n;let p="";l.on("change",c=>{if(l.value!=="custom"){const f=I.simplePresets[i][p];f&&Object.entries(f.options||{}).forEach(([u,g])=>{const d=this.options.find(m=>m.property===u);this.setOption(u,d.defaultValue)})}if(l.value==="custom")o.setSimplePreset("custom");else if(l.value==="none")o.setSimplePreset("none"),o.removeAll();else{const f=I.simplePresets[i][l.value],u=Array.isArray(f)?f:f.presets;o.removeAll(),o.setSimplePreset(l.value),u.forEach(g=>{o.addPreset(g[0],g.slice(1)),o.refreshPreset()}),Object.entries(f.options||{}).forEach(([g,d])=>{this.setOption(g,d)}),p=l.value}})}),this.stackEffects.addPreset("wobbling"),this.stackEffects.setSimplePreset("wobbling"),h.q("#bu-mode-tabs")[0].ilvTabs.changeCallback=i=>{h.q("#bu-effects-tabs")[0].ilvTabs.refreshLine(),h.q("#bu-options-tabs")[0].ilvTabs.showContent(0),this.wgltr.resize(!1,!0)}}setWGLTREffectsOptions(e){let t=!1;this.stacks.some(s=>s.isCustom())&&(t=this.fontSize),this.scaleFontSize!==t&&(this.scaleFontSize=t,e.scaleFontSize=t),this.wgltr&&this.wgltr.setOptions(e)}showWarning(e){clearTimeout(this.warningTimeout),this.warning.innerHTML=e,h.cla(this.warning,"bw-warning-active"),this.warningTimeout=setTimeout(()=>{h.clr(this.warning,"bw-warning-active")},5e3)}setMode(e){if(this.mode===e||!this.wgltr)return;this.mode=e,clearTimeout(this.modeTimeout);const t={appear:!1};(e==="appear"||e==="appear&disappear")&&(t.appear=!0,h.q("#bu-appear")[0].checked=!0,this.options.some(s=>{if(s.property==="appear")return s.value=!0,!0}),this.setOption("appear",!0),h.debounce("builderRefresh",()=>this.refreshCode(),100)),this.wgltr.reset(),this.modeSelect.value=e,this.wgltr.setOptions(t),e==="disappear"&&this.wgltr.change()}loadFonts(e){fetch("./fonts-release.json").then(t=>{t.json().then(s=>{e(s)})})}refreshVariants(e=!0){let t="";Object.entries(this.curFontItem.files).forEach(([s,i])=>{t+=`<option value="${s}">${s}</option>`}),this.variantSelect.innerHTML=t,this.curVariant=this.variantSelect.value,e&&this.loadFont()}loadFont(e=!0){const t=this.curFontItem,s=this.curFontItem.files[this.curVariant].replace("http:","https:"),r=this.curVariant.indexOf("italic")!==-1?"italic":"normal";let n=this.curVariant.replace("italic","")||"normal";n=="regular"&&(n="normal");const o=new FontFace(t.family,`url(${s})`,{weight:n,style:r}),l=this.fontID=new Date().getTime();o.load().then(()=>{document.fonts.add(o),l===this.fontID&&e&&(this.wgltrText.style.fontFamily=t.family,this.wgltrText.style.fontWeight=n,this.wgltrText.style.fontStyle=r,this.wgltr.resize(!0))})}generateOptions(e,t){this.options.push(...t);let s="";t.forEach(i=>{const[r,n,o]=i.range||[],l=i.depend&&i.depend.some(([u,g,d])=>{const m=t.find(b=>b.property===u).value;return g?m===d:m!==d});let p=i.percent?' data-percent="true"':"";i.seconds&&(p+=' data-seconds="true"'),i.type=="checkbox"&&(p+=' data-checkbox="true"');let c=i.value;i.defaultValue=c,i.seconds&&(c=parseInt(c*1e3)),i.percent&&(c=parseInt(c*100));let f="";i.advanced&&(f+=" tabs-builder-type-2 hidden"),l&&(f+=" bu-input-row-hidden"),s+=`<div class="input-wrap bu-input-wrap bu-input-row${f}" title="${l?i.dependTitle:i.description||""}" id="bu-row-${i.property}">`,s+=`<label class="label bu-label${i.description?" bu-question":""}" for="bu-${i.property}">`,i.subtitle&&(s+=`<small class="bu-small">${i.subtitle}</small>`),s+=`<span>${i.title}</span></label>`,s+='<div class="input-wrap input-unit-wrap">',i.type=="checkbox"?s+=`<input class="checkbox bu-checkbox bu-input-row-input" type="checkbox" id="bu-${i.property}" data-prop="${i.property}"${i.value?' checked=""':""}${p}/>`:i.type=="select"?(s+='<div class="select-wrap">',s+=`<select class="select input bu-select bu-input bu-select-small" id="bu-${i.property}" data-prop="${i.property}"/>`,i.select.forEach(([u,g])=>{const d=i.value===u?" selected":"";s+=`<option value="${u}"${d}>${g}</option>`}),s+="</select></div>"):(s+=`<input class="input noappearance bu-input bu-input-small bu-input-row-input" type="number" id="bu-${i.property}" data-prop="${i.property}" value="${c}"${p}/>`,s+=`<div class="input-unit">${i.unit}</div>`),s+="</div>",i.type=="range"&&(s+=`<label class="visually-hidden" for="bu-${i.property}-range" data-prop="${i.property}">${t.subtitle||""} ${i.title}</label>`,s+=`<input type="range" min="${r}" max="${n}" step="${o}" value="${c}" class="range bu-range" id="bu-${i.property}-range" data-prop="${i.property}">`),s+="</div>"}),h.q(`#bu-options-${e}`)[0].innerHTML=s,h.q(`#bu-options-${e} .bu-input-wrap`).forEach((i,r)=>{const n=t[r];if(n.rangeValues){const o=h.qe(i,".input-wrap")[0],l=h.qe(i,"input");os(n,n.value),ls(l[0],o,n.rangeValues),l.forEach(p=>p.on("input",()=>{ls(p,o,n.rangeValues)}))}As(h.qe(i,"input, select"),(o,l)=>{this.setOption(o,l),o.startsWith("appear")?this.mode==="appear"&&o==="appear"&&!l?this.setMode("default"):this.mode==="default"?this.setMode("appear"):this.mode==="disappear"&&this.setMode("appear&disappear"):o.startsWith("disappear")&&(this.mode==="default"?this.setMode("disappear"):this.mode==="appear"&&this.setMode("appear&disappear"))})})}setOption(e,t){const s=this.options.find(r=>r.property===e);os(s,t),s.seconds&&(t*=1e3),s.percent&&(t*=100,t=parseFloat(t.toFixed(3)));const i=h.q("#bu-"+e)[0];if(s.type==="checkbox"?i.checked=t:s.type==="range"?(i.value=t,h.q("#bu-"+e+"-range")[0].value=t):i.value=t,this.options.forEach(r=>{if(r.depend){const n=h.q(`#bu-row-${r.property}`)[0],o=r.depend.some(([l,p,c])=>{const f=this.options.find(u=>u.property===l).value;return c==="true"&&(c=!0),c==="false"&&(c=!1),p?f===c:f!==c});h.clc(n,"bu-input-row-hidden",o),n.title=o?r.dependTitle:r.description||""}}),e!=="appear"){let r=s.value;e==="scaleFontSize"&&s.value==="auto"&&(r=!1),this.wgltr.setOptions({[e]:r})}h.debounce("builderRefresh",()=>this.refreshCode(),100)}refreshCode(){const e={},t=Object.entries({effects:this.stackEffects.get(!0),staticEffects:this.stackStatic.get(!0),mouseEffects:this.stackMouse.get(!0),scrollEffects:this.stackScroll.get(!0),appearEffects:this.stackAppear.get(!0),disappearEffects:this.stackDisappear.get(!0),decors:this.stackDecors.get(!0),backgrounds:this.stackBackgrounds.get(!0)});t.forEach(([s,i])=>{i.length&&(e[s]=i)}),this.options.forEach(s=>{s.type=="checkbox"&&(s.value=!!s.value),s.value==="true"&&(s.value=!0),s.value==="false"&&(s.value=!1),I.defaultOptions[s.property]!==s.value&&(e[s.property]=s.value)}),t.forEach(([s,i])=>{if(i.length&&typeof i=="string"&&!Array.isArray(I.simplePresets[s][i])){const r=I.simplePresets[s][i].options;Object.entries(r||{}).forEach(([n,o])=>{e[n]===o&&delete e[n]})}}),e.scaleFontSize==="auto"&&(delete e.scaleFontSize,this.stacks.some(s=>s.isCustom())&&(e.scaleFontSize=this.fontSize)),h.q("#bu-code-attr")[0].ilvCode.setHTMLOptions(e),h.q("#bu-code-js")[0].ilvCode.setJSOptions(e)}}const os=function(a,e){let t=e;a.seconds&&(t*=1e3),a.percent&&(t*=100),t+="",a.rangeValues&&a.rangeValues.forEach(s=>{s[0]===t&&(e=s[1])}),e==="true"&&(e=!0),e==="false"&&(e=!1),a.value=e},As=function(a,e,t=!0){const s=a[0].getAttribute("data-prop"),i=()=>{t?e(s,Ds(a[0])):e()},r=h.clh(a[0],"bs-input-color-text");a.forEach((n,o)=>{n.on("input",()=>{if(n.type==="file"&&n.value!==""){const l=n.value.split(/[\\/]+/),p=l[l.length-1];h.qe(n.parentNode,".input-file-title")[0].innerHTML=p;const c=new FileReader;c.onloadend=function(){const f=new Image;f.onload=function(){n.ilvImage=f,i()},f.src=c.result},c.readAsDataURL(n.files[0]);return}if(r)switch(o){case 0:a[1].value=a[0].value.substring(0,7),a[2].value=parseInt(a[0].value.substring(7,9),16)/255*100;break;case 1:case 2:const l=parseInt(a[2].value/100*255).toString(16);a[0].value=a[1].value+l.padStart(2,"0");break}else a.length>1&&(a[o?0:1].value=a[o].value);i()})})},Ds=function(a,e=!1){if(a.type==="checkbox")return a.getAttribute("data-checkbox")?!!a.checked:a.checked+0;if(a.type==="number"){let t=1;return a.getAttribute("data-percent")?t=100:a.getAttribute("data-seconds")&&(t=1e3),parseFloat(a.value)/t||0}if(a.type==="file"&&a.value!==""){if(e){const t=a.value.split(/[\\/]+/);return t[t.length-1]}return a.ilvImage}return a.value},ls=function(a,e,t){const s=a.value;h.clr(e,"off","false","true","auto","inherit","word","line","all"),t.forEach(i=>{i[0]==s&&h.cla(e,i[1])})};let Tt=0;class Ee{constructor(e,t,s,i,r,n,o,l,p,c,f){this.effect=t,this.skipNames=!!f,this.id=++Tt,this.parentStack=l,this.parentItem=p,this.usePresets=!!r,this.presets=r,this.options=n,this.onlyOneOption=Object.entries(n).length<=1,this.basicItems=[],this.items=[],this.builder=e,l||e.stacks.push(this),this.change=d=>{o(d),h.debounce("builderRefresh",()=>e.refreshCode(),100)};const u=l?"-inner":"";h.q(`#bts-${s}`)[0].ilvStack=this,h.q(`#bts-${s}`)[0].innerHTML=h.template(`bu-stack${u}`).replace(/\$id/g,s).replace(/\$itemType/,i),l||(h.q(`#bts-basic-${s}`)[0].ilvStack=this,h.q(`#bts-basic-${s}`)[0].innerHTML=h.template("bu-basic-stack").replace(/\$id/g,s).replace(/\$itemType/,i)),l||(this.basicList=this.processStackList(h.q(`#bs-basic-${s}`)[0])),this.list=this.processStackList(h.q(`#bs-${s}`)[0]);const g=this.inputChange=d=>{this.makeCustom(d.parent),this.parentStack&&(this.parentStack.makeCustom(this.parentItem.parent),this.parentStack.refreshPresetValues(this.parentItem)),this.change(!0)};this.usePresets&&(this.addSelect(this.basicList,h.qe(this.basicList.el,".bs-add-preset")[0],r,d=>{this.addPreset(d),this.setSimplePreset("custom")}),this.addSelect(this.list,h.qe(this.list.el,".bs-add-preset")[0],r,d=>{this.addPreset(d),this.setSimplePreset("custom")})),this.addSelect(this.list,h.qe(this.list.el,".bs-add-effect")[0],n,d=>{let m=this.basicItems[this.basicItems.length-1];!this.parentStack&&(!m||!m.isCustom)&&(this.add(void 0,this.basicList,this.basicItems,{title:"Custom",fields:[]},d,g),this.makeCustom(this.basicItems[this.basicItems.length-1]),m=this.basicItems[this.basicItems.length-1]),this.parentStack&&this.parentStack.makeCustom(this.parentItem.parent),this.add(m,this.list,this.items,n[d],d,g),this.parentStack?this.parentStack.refreshPresetValues(this.parentItem):m.childs.push(this.items[this.items.length-1])}),c&&c.forEach(([d,m])=>{this.add(void 0,this.list,this.items,n[d],d,g,!1,!1),this.setValues(this.items[this.items.length-1],n[d].fields,m)})}processStackList(e){return{el:e,wrap:h.qe(e,".bs")[0],list:h.qe(e,".bs-list")[0]}}addSelect(e,t,s,i){const r=h.create("div");let n=!1;h.cla(r,"bs-add-select"),document.body.appendChild(r);let o="";Object.entries(s).forEach(([p,c])=>{o+=`<div class="bs-add-select-item" data-key="${p}"><div class="bs-add-select-item-title">${c.title}</div>`+(c.description?`<div class="bs-add-select-item-description">${c.description}</div>`:"")+"</div>"}),r.innerHTML=o,h.qe(r,".bs-add-select-item").forEach((p,c)=>{p.onclick=()=>{i(p.getAttribute("data-key"))}});const l=p=>{n&&(n=!1,h.clr(this.parentStack?e.list.parentNode.closest(".bs-list"):e.list,"bs-list-inactive"),h.clr(r,"bs-add-select-active"),document.body.off("click",l))};t.on("click",()=>{if(this.onlyOneOption){const[p,c]=Object.entries(s)[0];this.add(void 0,this.list,this.items,c,p,this.inputChange),this.parentStack&&(this.parentStack.makeCustom(this.parentItem.parent),this.parentStack.refreshPresetValues(this.parentItem));return}if(n=!n,h.clc(this.parentStack?e.list.parentNode.closest(".bs-list"):e.list,"bs-list-inactive",n),h.clc(r,"bs-add-select-active",n),n){const p=h.bcr(e.list),c=h.bcr(t);c.top-window.scrollY>window.innerHeight/2?(r.style.bottom=`${document.body.offsetHeight-c.top}px`,r.style.top=""):(r.style.top=`${c.bottom}px`,r.style.bottom=""),r.style.width=`${p.width}px`,r.style.left=`${p.left}px`,setTimeout(()=>document.body.on("click",l),10)}else document.body.off("click",l)})}addPreset(e,t){this.add(void 0,this.basicList,this.basicItems,this.presets[e],e,()=>{h.debounce(`stackRefreshPreset_${this.id}`,()=>{this.refreshPresetValues(s)},100),this.change(!0)});const s=this.basicItems[this.basicItems.length-1];t=t||this.getValues(s);const i=I.presets[this.effect][e](...t);this.setValues(s,this.presets[e].fields,t,!0),i.forEach(([r,...n])=>{this.usePresets&&Xe[r]&&(n=Et(n,this.effect,Xe[r],this.builder.fontSize/106)),this.add(s,this.list,this.items,this.options[r],r,this.inputChange,!1,!1);const o=this.items[this.items.length-1];this.setValues(o,this.options[r].fields,n,!0),s.childs.push(o)})}refreshPreset(){this.basicItems.forEach(e=>this.refreshPresetValues(e))}makeCustom(e){e&&(e.isCustom=!0,h.qe(e.el,".bs-title-wrap")[0].innerHTML="custom",h.qe(e.el,".bs-inputs")[0].innerHTML="",this.refreshCustomItems(),this.setSimplePreset("custom"))}refreshCustomItems(){const e=[],t=this.basicItems.reduce((s,i)=>{const r=s[s.length-1];return r&&r.isCustom&&i.isCustom?(e.push(i),r.childs.push(...i.childs)):s.push(i),s},[]);e.forEach(s=>this.remove(this.basicItems,s,!0)),this.basicItems=t,this.basicItems.forEach(s=>{s.childs=this.items.reduce((i,r)=>(s.childs.includes(r)&&(r.parent=s,i.push(r)),i),[])})}isCustom(){return this.parentStack?!0:this.basicItems.some(e=>e.isCustom)}add(e,t,s,i,r,n,o=!0,l=!1,p=!1){const c=h.create("div");h.cla(c,"bs-item");const f=r;let u=`<div class="bs-title"><div class="bs-title-wrap">${i.title}</div><div class="bs-controls"><div class="bs-btn bs-btn-down"></div><div class="bs-btn bs-btn-up"></div><div class="bs-btn bs-btn-remove"></div></div></div>`;u+='<div class="bs-inputs">';const g=[];i.fields.forEach(b=>{const{pack:w,seconds:k,items:y,itemsStart:T,description:z,skipNames:$,stackTitle:A,titles:D,inputs:L,value:Z,values:te,percent:q,units:N,max:F,min:_,step:se,basic:ce}=b;let ue="";ce&&(ue+=" bs-input-wrap-basic"),u+=`<div class="frow fspace bs-input-wrap${ue}">`;const qe=w?1:D.length,tt=w?D.length-1:1,St=100/qe+"";for(let B=0;B<qe;B++){let Ge="bs-get-"+this.id,st=q&&q[B]?' data-percent="true"':"";k&&(st=' data-seconds="true"');const Se=`bs-input-${++Tt}`,de=L[B],We=de==="number"||de==="color";let Fe="";if(D[B]!=="empty"&&(Fe+=" bs-input-inner",B>0&&(Fe+=" bs-input-inner-second"),Fe+=tt>1?" bs-input-packed":""),u+=`<div class="${Fe} w${St}p">`,D[B]==="empty"){u+='<div class="bs-row"></div></div>';break}let Vt="";if(z&&z[B]&&(Vt=` title="${z[B]}"`),u+='<div class="bs-row">',u+=`<label for="${Se}-0"`+Vt+`class="bs-input-title">${D[B]}</label>`,de==="stack"){g.push({items:y[B],itemsStart:T?T[B]:void 0,skipNames:$?$[B]:void 0,title:A?A[B]:void 0}),u+=`</div><div class="bts-content bs-stack bs-inner-stack ${Ge}" id="bts-inner-stack-${++Tt}"></div></div>`;break}u+=`<div class="w${de==="select"||de==="file"?"20":"100"}p"></div>`;for(let M=0;M<tt;M++){const ze=L[B+M],Ve=L[B+M]==="checkbox";if(w&&(u+=`<label for="${Se}-${M}"class="bs-input-title${M===0?"":" ml10"}">${D[M+1]}</label>`),u+=`<div class="input-unit-wrap ${ze==="select"?"w100p":""}">`,ze==="select")u+='<div class="select-wrap bs-select-wrap w100p">',u+=`<select id="${Se}-${M}" class="select ${Ge} bs-input bs-select">`,te[B+M].forEach(([it,Ue])=>{const Rs=Z[B+M]===it?" selected":"";u+=`<option value="${it}"${Rs}>${Ue}</option>`}),u+="</select></div>";else{const it=Ve?"checkbox":"input";let Ue=Z[B+M];ze==="color"&&(u+=`<input id="${Se}-${M}-text" ${st} data-prop="${f}" type="text" class="${it} ${Ge} noappearance bs-input bs-input-color-text" value="${Ue}">`,Ue=Ue.substring(0,7),Ge=""),u+=`<input id="${Se}-${M}"${st} data-prop="${f}" type="${L[B+M]}" min="${_?_[B+M]:0}"  max="${F?F[B+M]:0}"  class="${it} noappearance ${Ge} bs-input bs-input-${ze}" value="${Ue}"${ze==="file"?' accept="image/*"':""}${Ve&&Z[B+M]?' checked="true"':""}>`,N&&N[B+M]&&(u+=`<div class="input-unit bs-input-unit">${N[B+M]}</div>`),ze==="file"&&(u+='<div class="input bs-input bs-input-file-wrap"><span class="bs-input-file-wrap-title input-file-title">No file choosen</span></div>')}u+="</div>"}if(u+="</div>",We){u+='<div class="bs-row">';for(let M=0;M<tt;M++){const ze=M===0?"":" ml5";let Ve=Z[B+M];de==="color"&&(Ve=parseInt(Ve.substring(7,9),16)/255*100),u+=`<label for="${Se}-${M}-range" class="visually-hidden">${D[M+1]}</label>`,u+=`<input type="range" min="${_[B+M]}" max="${F[B+M]}" step="${se[B+M]}" value="${Ve}" id="${Se}-${M}-range" class="range bs-range${ze}">`}u+="</div>"}u+="</div>"}u+="</div>"}),u+="</div>",c.innerHTML=u;const d={key:r,isCustom:p,parent:e,childs:[],el:c};if(s.push(d),t.list.append(c),h.qe(c,".bs-input-inner").forEach(b=>{const w=h.qe(b,"input, select"),k=h.clh(b,"bs-input-packed"),y=k?w.length/2:1;if(w.length)for(let T=0;T<y;T++)As(k?[w[T],w[T+y]]:w,()=>{this.setSimplePreset("custom"),n(d)},!1)}),h.qe(c,'[id^="bts-inner-stack"]').forEach((b,w)=>{new Ee(this.builder,this.effect,b.id.replace("bts-",""),g[w].title||"effect",!1,g[w].items,()=>{this.change(!0)},this,d,g[w].itemsStart,g[w].skipNames)}),o){const b=c.offsetHeight;c.style.height="0px",c.offsetHeight,c.style.height=b+"px",setTimeout(()=>{c.style.height=""},300)}h.qe(c,"label").forEach(b=>b.on("click",w=>{h.q("#"+b.getAttribute("for"))[0].select()}));let m=!1;h.qe(c,".bs-btn-remove")[0].on("click",()=>{m||(this.setSimplePreset("custom"),this.remove(s,d),m=!0)}),h.qe(c,".bs-btn-up")[0].on("click",()=>{this.move(t,s,d,-1)&&this.setSimplePreset("custom")}),h.qe(c,".bs-btn-down")[0].on("click",()=>{this.move(t,s,d,1)&&this.setSimplePreset("custom")}),this.change(!l)}refreshPresetValues(e){if(e.isCustom)e.childs.forEach(t=>{let s=this.getValues(t);Xe[t.key]&&(s=Et(s,this.effect,Xe[t.key],this.builder.fontScale)),this.setValues(t,this.options[t.key].fields,s,!0)});else if(I.presets[this.effect][e.key]){const t=this.getValues(e);I.presets[this.effect][e.key](...t).forEach(([i,...r],n)=>{this.usePresets&&Xe[i]&&(r=Et(r,this.effect,Xe[i],this.builder.fontSize/106)),this.setValues(e.childs[n],this.options[i].fields,r,!0)})}}setValues(e,t,s,i){this.disableChange=!0;const r=t.reduce((n,o)=>(o.inputs.forEach((l,p)=>{l&&l!=="empty"&&n.push({type:l,percent:o.percent&&o.percent[p]})}),n),[]);for(let n=0;n<s.length;){const o=h.qe(e.el,":scope>.bs-inputs>.bs-input-wrap>.bs-input-inner")[n];if(r[n].type==="stack"){const u=h.qe(o,".bs-inner-stack")[0].ilvStack,g=Object.keys(u.options);u.removeAll(),s[n].forEach(d=>{let m=g[0];g.length>1&&([m,...d]=d),u.add(void 0,u.list,u.items,u.options[m],m,u.inputChange,!1,!1),u.setValues(u.items[u.items.length-1],u.options[m].fields,d,!0)}),n++;continue}const l=h.clh(o,"bs-input-packed"),p=h.qe(o,".bs-row")[0],c=h.qe(o,".bs-row")[1],f=l?h.qe(p,".input-unit-wrap").length:1;for(let u=0;u<f;++u){let g=s[n];const d=r[n],m=h.qe(h.qe(p,".input-unit-wrap")[u],"input, .select, .checkbox"),b=c&&h.qe(c,"input")[u];d.type==="color"?(g.length<6&&(g="#"+g.substring(1).split("").reduce((w,k)=>w+k+k,"")),m[0].value=g,m[1].value=g.substring(0,7),b.value=parseInt(g.substring(7,9),16)/255*100):(i&&d.percent&&(g*=100),m.forEach(w=>{w.value=g,w.checked=g}),b&&(b.value=g)),++n}}}setSimplePreset(e){this.simplePreset=e;const t=h.q(`#bu-simple-${this.effect}-presets`)[0];t&&(t.value=e)}removeAll(){this.basicItems=[],this.items=[],this.basicList&&h.qe(this.basicList.list,".bs-item").forEach(e=>e.remove()),h.qe(this.list.list,".bs-item").forEach(e=>e.remove()),this.change(!1)}remove(e,t,s){const i=e.findIndex(o=>o===t);if(i<0)return;const r=e[i];if(!s&&this.parentStack&&this.parentStack.makeCustom(this.parentItem.parent),r.parent){s||this.makeCustom(r.parent);const o=r.parent.childs.findIndex(l=>l===r);r.parent.childs.splice(o,1),r.parent.childs.length===0&&this.remove(this.basicItems,r.parent)}if(e.splice(i,1),!s){let o=r.childs.length;for(;o--;){const l=r.childs[o];this.remove(this.items,l,!0)}}const n=r.el.offsetHeight;r.el.style.height=n+"px",h.cla(r.el,"bs-item-removed"),r.el.offsetHeight,r.el.style.height="0px",r.el.style.marginBottom="0px",this.parentStack&&this.parentStack.refreshPresetValues(this.parentItem),this.change(!0),this.basicItems.length===0&&this.items.length===0&&this.setSimplePreset("none"),setTimeout(()=>{r.el.remove()},350)}move(e,t,s,i,r=!1){const n=t.findIndex(m=>m==s),o=n+i;if(o<0||o>=t.length)return!1;const l=t[o];let p=l.el;if(o>n&&(p=p.nextSibling),t[n]=l,t[o]=s,!s.parent&&s.childs.length){s.childs.forEach(y=>{this.items.splice(this.items.findIndex(T=>T===y),1)});const m=this.items.findIndex(y=>y===l.childs[i<0?0:l.childs.length-1]),b=this.items[m];this.items.splice(m+(i>=0?1:0),0,...s.childs);const w=[...s.childs],k=i<0?b.el:b.el.nextSibling;i<0&&w.reverse(),w.forEach(y=>{y.el.parentNode.insertBefore(y.el,k)})}if(s.parent){const m=l.parent.childs.length,b=s.parent.childs.length;if(l.parent!==s.parent&&!(m>1&&b>1))if(m>1||b>1){this.add(void 0,this.basicList,this.basicItems,{title:"Custom",fields:[]},"custom",()=>{},!1,!1,!0);const w=this.basicItems[this.basicItems.length-1];this.basicItems.pop();const k=b>1&&i<0||m>1&&i>0,y=this.basicItems.findIndex($=>$===(i>0^k?l.parent:s.parent)),T=this.basicItems[y].el;w.el.parentNode.insertBefore(w.el,k?T:T.nextSibling),this.basicItems.splice(y+!k,0,w);const z=b>1?s.parent:l.parent;w.childs=z.childs.splice(k?0:z.childs.legnth-1,1)}else{const w=this.basicItems.findIndex(y=>y===s.parent),k=this.basicItems.findIndex(y=>y===l.parent);this.basicItems[w]=l.parent,this.basicItems[k]=s.parent,s.parent.el.parentNode.insertBefore(s.parent.el,i>0?l.parent.el.nextSibling:l.parent.el)}m>1&&this.makeCustom(l.parent),b>1&&this.makeCustom(s.parent),this.refreshCustomItems()}this.parentStack&&(this.parentStack.makeCustom(this.parentItem.parent),this.parentStack.refreshPresetValues(this.parentItem)),this.change(!0);const c=i>0?s.el:l.el,f=i>0?l.el:s.el,u=h.bcr(c),g=h.bcr(f);c.style.top=g.bottom-u.bottom+"px",f.style.top=u.top-g.top+"px";const d=e.wrap.scrollTop;return setTimeout(()=>{h.cla(s.el,"notrans"),h.cla(l.el,"notrans"),s.el.style.top="0px",l.el.style.top="0px",s.el.offsetHeight,l.el.offsetHeight,h.clr(s.el,"notrans"),h.clr(l.el,"notrans"),e.list.insertBefore(s.el,p),e.wrap.scrollTop=d},350),!0}getValues(e,t=!1){return h.qe(e.el,".bs-get-"+this.id).map(i=>i.classList.contains("bs-stack")?i.ilvStack.get(t):Ds(i,t))}get(e=!1){return this.simplePreset&&this.simplePreset!=="custom"&&this.simplePreset!=="none"?this.simplePreset:this.parentStack?this.items.map(t=>{const s=this.getValues(t,e);return this.skipNames||s.unshift(t.key),s}):this.basicItems.reduce((t,s)=>(s.isCustom?t.push(...s.childs.map(i=>{const r=this.getValues(i,e);return this.skipNames||r.unshift(i.key),r})):t.push([s.key,...this.getValues(s,e)]),t),[])}}h.elements.push([$i,"data-builder"]);h.ready(()=>{h.q("#wgltr-options").length&&pt.generate(),zs.init()});window.on("load",()=>{h.clr(document.body,"notrans"),h.elements.forEach(([a,e])=>{h.q(`[${e}]`).forEach(t=>{new a(t,t.getAttribute(e))})}),I.notSupported&&h.cla(h.q(".webgl-not-supported")[0],"visible"),Object.keys(ht).forEach(a=>{if(!h.q(`#counter-${a}`)[0])return;const e=Object.keys(ht[a]).length;h.q(`#counter-${a}`)[0].ilvCounter.to=e})});window.on("scroll",()=>{dispatchEvent(h.eventScroll)});window.on("resize",()=>{dispatchEvent(h.eventResize)});
